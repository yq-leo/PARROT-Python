Loading datasets/Douban.mat...
Run 1/1
Time for edge perturbation: 0.125s
Time for attribute perturbation: 0.068s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Iter 0: wasserstein=1.127491, edge=0.001135, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.791489, edge=0.001329, neigh=5.683800, align=4.896898, entropy=9.580899,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.763527, edge=0.000886, neigh=5.776975, align=5.452750, entropy=8.971920,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.760330, edge=0.000900, neigh=6.233625, align=5.493901, entropy=8.924694,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.760286, edge=0.000919, neigh=6.615016, align=5.463702, entropy=8.954404,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.760849, edge=0.000927, neigh=6.977295, align=5.432251, entropy=8.985785,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.761259, edge=0.000930, neigh=7.348690, align=5.414225, entropy=9.003747,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.761353, edge=0.000933, neigh=7.614799, align=5.401758, entropy=9.016206,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.761212, edge=0.000940, neigh=7.814715, align=5.391095, entropy=9.026416,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.761322, edge=0.000946, neigh=7.980967, align=5.382917, entropy=9.034051,s=1.000000, s_hat=1.000000
Time for optimization: 56.83s
Test results:
Top-1: 0.686
Top-10: 0.949
Top-30: 0.981
Top-50: 0.987
Top-100: 0.994
MRR: 0.784
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.158s
Time for attribute perturbation: 96.494s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.06s
Iter 0: wasserstein=1.154393, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989525, edge=0.000547, neigh=3.047912, align=3.574492, entropy=10.902262,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976313, edge=0.000498, neigh=2.810444, align=4.431020, entropy=9.994337,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973824, edge=0.000482, neigh=2.604143, align=4.752703, entropy=9.667633,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973143, edge=0.000471, neigh=2.635904, align=4.906579, entropy=9.511809,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972961, edge=0.000468, neigh=2.662231, align=5.013506, entropy=9.404486,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972448, edge=0.000470, neigh=2.781219, align=5.015524, entropy=9.402442,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971857, edge=0.000471, neigh=2.903356, align=5.007615, entropy=9.410349,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.970965, edge=0.000472, neigh=3.019398, align=5.000960, entropy=9.417004,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970360, edge=0.000472, neigh=3.134577, align=4.998106, entropy=9.419752,s=1.000000, s_hat=1.000000
Time for optimization: 37.20s
Test results:
Top-1: 0.269
Top-10: 0.670
Top-30: 0.784
Top-50: 0.816
Top-100: 0.855
MRR: 0.397
Run 2/10
Time for edge perturbation: 0.067s
Time for attribute perturbation: 1.326s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 10.42s
Iter 0: wasserstein=1.162969, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993360, edge=0.000541, neigh=3.088574, align=3.668347, entropy=10.809316,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979661, edge=0.000488, neigh=2.875393, align=4.542358, entropy=9.883206,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977326, edge=0.000475, neigh=2.723645, align=4.849641, entropy=9.569750,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976882, edge=0.000467, neigh=2.710537, align=5.003213, entropy=9.415035,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976822, edge=0.000465, neigh=2.678407, align=5.093556, entropy=9.324430,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976692, edge=0.000464, neigh=2.713831, align=5.156312, entropy=9.261653,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976076, edge=0.000465, neigh=2.872827, align=5.156739, entropy=9.261225,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975139, edge=0.000466, neigh=3.006141, align=5.149505, entropy=9.268459,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974467, edge=0.000467, neigh=3.123811, align=5.144218, entropy=9.273657,s=1.000000, s_hat=1.000000
Time for optimization: 19.57s
Test results:
Top-1: 0.351
Top-10: 0.730
Top-30: 0.838
Top-50: 0.869
Top-100: 0.897
MRR: 0.479
Run 3/10
Time for edge perturbation: 0.058s
Time for attribute perturbation: 2.170s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 11.19s
Iter 0: wasserstein=1.161124, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991542, edge=0.000544, neigh=3.100670, align=3.653335, entropy=10.823165,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978167, edge=0.000493, neigh=2.842849, align=4.506622, entropy=9.918796,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975866, edge=0.000480, neigh=2.653058, align=4.807510, entropy=9.611995,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975405, edge=0.000470, neigh=2.684749, align=4.949784, entropy=9.468489,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975467, edge=0.000467, neigh=2.686710, align=5.043781, entropy=9.374206,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975215, edge=0.000465, neigh=2.724786, align=5.104527, entropy=9.313438,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974655, edge=0.000466, neigh=2.854448, align=5.106360, entropy=9.311604,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973780, edge=0.000467, neigh=2.963525, align=5.102958, entropy=9.315006,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973147, edge=0.000467, neigh=3.073622, align=5.099378, entropy=9.318425,s=1.000000, s_hat=1.000000
Time for optimization: 42.51s
Test results:
Top-1: 0.336
Top-10: 0.717
Top-30: 0.827
Top-50: 0.854
Top-100: 0.884
MRR: 0.461
Run 4/10
Time for edge perturbation: 0.119s
Time for attribute perturbation: 74.388s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 41.22s
Iter 0: wasserstein=1.167632, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995474, edge=0.000543, neigh=3.118564, align=3.707930, entropy=10.769686,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981649, edge=0.000489, neigh=2.911134, align=4.566314, entropy=9.859349,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979559, edge=0.000477, neigh=2.720032, align=4.858435, entropy=9.561740,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979290, edge=0.000468, neigh=2.711280, align=5.008017, entropy=9.410445,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979124, edge=0.000464, neigh=2.706018, align=5.103724, entropy=9.314295,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978910, edge=0.000462, neigh=2.734512, align=5.170743, entropy=9.247225,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978361, edge=0.000463, neigh=2.864233, align=5.171212, entropy=9.246752,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977480, edge=0.000465, neigh=2.979135, align=5.165002, entropy=9.252962,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976873, edge=0.000465, neigh=3.090340, align=5.160172, entropy=9.257737,s=1.000000, s_hat=1.000000
Time for optimization: 56.16s
Test results:
Top-1: 0.410
Top-10: 0.789
Top-30: 0.873
Top-50: 0.904
Top-100: 0.926
MRR: 0.534
Run 5/10
Time for edge perturbation: 0.133s
Time for attribute perturbation: 85.328s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 40.91s
Iter 0: wasserstein=1.162848, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994317, edge=0.000545, neigh=3.077112, align=3.628227, entropy=10.848550,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981069, edge=0.000494, neigh=2.827328, align=4.488742, entropy=9.936804,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978866, edge=0.000481, neigh=2.624933, align=4.795073, entropy=9.625329,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978353, edge=0.000470, neigh=2.658307, align=4.939466, entropy=9.478957,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978199, edge=0.000467, neigh=2.664091, align=5.037455, entropy=9.380541,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977994, edge=0.000464, neigh=2.692225, align=5.105480, entropy=9.312486,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977411, edge=0.000465, neigh=2.810320, align=5.106549, entropy=9.311415,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976544, edge=0.000466, neigh=2.916879, align=5.102034, entropy=9.315930,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975914, edge=0.000466, neigh=3.025200, align=5.098807, entropy=9.319001,s=1.000000, s_hat=1.000000
Time for optimization: 49.16s
Test results:
Top-1: 0.330
Top-10: 0.723
Top-30: 0.847
Top-50: 0.877
Top-100: 0.911
MRR: 0.457
Run 6/10
Time for edge perturbation: 0.060s
Time for attribute perturbation: 1.838s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 32.38s
Iter 0: wasserstein=1.161608, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992893, edge=0.000543, neigh=3.072573, align=3.655235, entropy=10.822509,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979066, edge=0.000490, neigh=2.877274, align=4.526949, entropy=9.898587,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976752, edge=0.000476, neigh=2.719850, align=4.834786, entropy=9.584574,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976387, edge=0.000468, neigh=2.706527, align=4.987191, entropy=9.431050,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976288, edge=0.000466, neigh=2.677663, align=5.079695, entropy=9.338291,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976162, edge=0.000465, neigh=2.711070, align=5.142886, entropy=9.275079,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975498, edge=0.000466, neigh=2.866303, align=5.143852, entropy=9.274112,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974552, edge=0.000466, neigh=2.996947, align=5.138150, entropy=9.279814,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973900, edge=0.000467, neigh=3.110761, align=5.133725, entropy=9.284199,s=1.000000, s_hat=1.000000
Time for optimization: 41.45s
Test results:
Top-1: 0.344
Top-10: 0.722
Top-30: 0.837
Top-50: 0.872
Top-100: 0.897
MRR: 0.467
Run 7/10
Time for edge perturbation: 0.114s
Time for attribute perturbation: 79.120s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 41.05s
Iter 0: wasserstein=1.156559, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990162, edge=0.000544, neigh=3.056717, align=3.604918, entropy=10.872103,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977006, edge=0.000494, neigh=2.824107, align=4.474074, entropy=9.951398,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974646, edge=0.000479, neigh=2.649651, align=4.784221, entropy=9.636318,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974034, edge=0.000470, neigh=2.665285, align=4.934529, entropy=9.483800,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973819, edge=0.000467, neigh=2.673200, align=5.036343, entropy=9.381645,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973316, edge=0.000469, neigh=2.807366, align=5.036670, entropy=9.381295,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972782, edge=0.000471, neigh=2.932272, align=5.028839, entropy=9.389125,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971979, edge=0.000472, neigh=3.046982, align=5.020946, entropy=9.397018,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971314, edge=0.000472, neigh=3.157562, align=5.016376, entropy=9.401456,s=1.000000, s_hat=1.000000
Time for optimization: 54.82s
Test results:
Top-1: 0.293
Top-10: 0.683
Top-30: 0.796
Top-50: 0.820
Top-100: 0.863
MRR: 0.418
Run 8/10
Time for edge perturbation: 0.088s
Time for attribute perturbation: 94.951s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.42s
Iter 0: wasserstein=1.165588, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996629, edge=0.000542, neigh=3.130179, align=3.683028, entropy=10.792971,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982976, edge=0.000487, neigh=2.902747, align=4.556784, entropy=9.868854,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980079, edge=0.000473, neigh=2.729652, align=4.876240, entropy=9.543127,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979725, edge=0.000465, neigh=2.716357, align=5.025619, entropy=9.392677,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979690, edge=0.000463, neigh=2.701932, align=5.117481, entropy=9.300509,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979519, edge=0.000462, neigh=2.720941, align=5.172298, entropy=9.245668,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978850, edge=0.000464, neigh=2.851769, align=5.172450, entropy=9.245514,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977863, edge=0.000464, neigh=2.981046, align=5.168178, entropy=9.249786,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977281, edge=0.000465, neigh=3.093898, align=5.165830, entropy=9.252094,s=1.000000, s_hat=1.000000
Time for optimization: 53.35s
Test results:
Top-1: 0.401
Top-10: 0.773
Top-30: 0.860
Top-50: 0.883
Top-100: 0.916
MRR: 0.524
Run 9/10
Time for edge perturbation: 0.146s
Time for attribute perturbation: 13.929s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 32.71s
Iter 0: wasserstein=1.160933, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992463, edge=0.000543, neigh=3.057744, align=3.635981, entropy=10.841527,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978826, edge=0.000490, neigh=2.863134, align=4.503367, entropy=9.921892,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976365, edge=0.000476, neigh=2.712756, align=4.820203, entropy=9.599780,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975955, edge=0.000468, neigh=2.704350, align=4.974759, entropy=9.443656,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975742, edge=0.000465, neigh=2.675297, align=5.066876, entropy=9.351136,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975619, edge=0.000464, neigh=2.711823, align=5.131441, entropy=9.286526,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974925, edge=0.000465, neigh=2.865763, align=5.133737, entropy=9.284228,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973959, edge=0.000466, neigh=2.995208, align=5.129867, entropy=9.288097,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973332, edge=0.000466, neigh=3.118278, align=5.127817, entropy=9.290106,s=1.000000, s_hat=1.000000
Time for optimization: 42.30s
Test results:
Top-1: 0.359
Top-10: 0.724
Top-30: 0.821
Top-50: 0.855
Top-100: 0.892
MRR: 0.476
Run 10/10
Time for edge perturbation: 0.097s
Time for attribute perturbation: 28.886s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.64s
Iter 0: wasserstein=1.163236, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993542, edge=0.000544, neigh=3.084328, align=3.655229, entropy=10.821499,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980216, edge=0.000493, neigh=2.851936, align=4.521005, entropy=9.904505,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977994, edge=0.000479, neigh=2.669566, align=4.820513, entropy=9.599197,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977630, edge=0.000470, neigh=2.674529, align=4.955782, entropy=9.462502,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977499, edge=0.000467, neigh=2.675383, align=5.052331, entropy=9.365655,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977297, edge=0.000464, neigh=2.705971, align=5.112254, entropy=9.305711,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976765, edge=0.000466, neigh=2.845749, align=5.109922, entropy=9.308042,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975964, edge=0.000467, neigh=2.960160, align=5.103502, entropy=9.314462,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975309, edge=0.000467, neigh=3.071423, align=5.100166, entropy=9.317642,s=1.000000, s_hat=1.000000
Time for optimization: 53.87s
Test results:
Top-1: 0.343
Top-10: 0.721
Top-30: 0.835
Top-50: 0.864
Top-100: 0.897
MRR: 0.468
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.082s
Time for attribute perturbation: 101.633s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 39.45s
Iter 0: wasserstein=1.171953, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998576, edge=0.000540, neigh=3.211519, align=3.774762, entropy=10.701570,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984769, edge=0.000483, neigh=2.982976, align=4.639785, entropy=9.785668,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982517, edge=0.000472, neigh=2.766469, align=4.938367, entropy=9.481165,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982240, edge=0.000464, neigh=2.754027, align=5.068137, entropy=9.350207,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982247, edge=0.000463, neigh=2.716483, align=5.152934, entropy=9.265066,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982173, edge=0.000461, neigh=2.732630, align=5.202459, entropy=9.215508,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.981649, edge=0.000462, neigh=2.873064, align=5.202305, entropy=9.215659,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.980789, edge=0.000463, neigh=3.008144, align=5.196422, entropy=9.221541,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980185, edge=0.000464, neigh=3.117053, align=5.193067, entropy=9.224870,s=1.000000, s_hat=1.000000
Time for optimization: 52.00s
Test results:
Top-1: 0.445
Top-10: 0.804
Top-30: 0.894
Top-50: 0.912
Top-100: 0.939
MRR: 0.569
Run 2/10
Time for edge perturbation: 0.156s
Time for attribute perturbation: 76.402s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 24.92s
Iter 0: wasserstein=1.158821, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991941, edge=0.000545, neigh=3.047154, align=3.595651, entropy=10.880810,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978787, edge=0.000497, neigh=2.815445, align=4.466347, entropy=9.958953,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976278, edge=0.000482, neigh=2.629241, align=4.776024, entropy=9.643506,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975787, edge=0.000471, neigh=2.641926, align=4.923678, entropy=9.494563,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975453, edge=0.000468, neigh=2.657493, align=5.031579, entropy=9.386404,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974927, edge=0.000470, neigh=2.793752, align=5.034680, entropy=9.383285,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974369, edge=0.000472, neigh=2.914717, align=5.028843, entropy=9.389121,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973557, edge=0.000472, neigh=3.023756, align=5.022799, entropy=9.395165,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972881, edge=0.000473, neigh=3.133003, align=5.018609, entropy=9.399208,s=1.000000, s_hat=1.000000
Time for optimization: 40.46s
Test results:
Top-1: 0.301
Top-10: 0.693
Top-30: 0.807
Top-50: 0.840
Top-100: 0.878
MRR: 0.430
Run 3/10
Time for edge perturbation: 0.065s
Time for attribute perturbation: 79.100s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.15s
Iter 0: wasserstein=1.160327, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991431, edge=0.000544, neigh=3.100687, align=3.653274, entropy=10.823295,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978141, edge=0.000493, neigh=2.849364, align=4.516109, entropy=9.909235,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975988, edge=0.000480, neigh=2.672688, align=4.816657, entropy=9.603742,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975517, edge=0.000471, neigh=2.684766, align=4.957366, entropy=9.460944,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975493, edge=0.000467, neigh=2.696829, align=5.050838, entropy=9.367149,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975070, edge=0.000470, neigh=2.814592, align=5.051395, entropy=9.366570,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974560, edge=0.000471, neigh=2.927032, align=5.046289, entropy=9.371675,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973712, edge=0.000472, neigh=3.041699, align=5.041034, entropy=9.376929,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973072, edge=0.000472, neigh=3.150155, align=5.037643, entropy=9.380207,s=1.000000, s_hat=1.000000
Time for optimization: 53.90s
Test results:
Top-1: 0.327
Top-10: 0.702
Top-30: 0.823
Top-50: 0.854
Top-100: 0.884
MRR: 0.449
Run 4/10
Time for edge perturbation: 0.112s
Time for attribute perturbation: 100.453s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 40.08s
Iter 0: wasserstein=1.159147, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993987, edge=0.000545, neigh=3.091313, align=3.605849, entropy=10.869620,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980906, edge=0.000494, neigh=2.872778, align=4.475014, entropy=9.950272,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978185, edge=0.000478, neigh=2.653432, align=4.800788, entropy=9.619247,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977612, edge=0.000468, neigh=2.666781, align=4.953819, entropy=9.464430,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977355, edge=0.000465, neigh=2.682614, align=5.057984, entropy=9.360002,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976834, edge=0.000467, neigh=2.805158, align=5.062246, entropy=9.355719,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976242, edge=0.000468, neigh=2.929488, align=5.055716, entropy=9.362248,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975316, edge=0.000469, neigh=3.059647, align=5.050357, entropy=9.367607,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974767, edge=0.000469, neigh=3.168841, align=5.049037, entropy=9.368845,s=1.000000, s_hat=1.000000
Time for optimization: 55.93s
Test results:
Top-1: 0.344
Top-10: 0.717
Top-30: 0.815
Top-50: 0.851
Top-100: 0.891
MRR: 0.469
Run 5/10
Time for edge perturbation: 0.097s
Time for attribute perturbation: 15.220s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 31.59s
Iter 0: wasserstein=1.172074, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.999394, edge=0.000538, neigh=3.191759, align=3.764627, entropy=10.711508,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.985497, edge=0.000483, neigh=2.991227, align=4.635947, entropy=9.789404,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.983235, edge=0.000472, neigh=2.788066, align=4.930718, entropy=9.488517,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.983141, edge=0.000464, neigh=2.743296, align=5.061613, entropy=9.356668,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.983035, edge=0.000462, neigh=2.744411, align=5.140057, entropy=9.277934,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982945, edge=0.000461, neigh=2.728670, align=5.191313, entropy=9.226653,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.982392, edge=0.000462, neigh=2.855215, align=5.189574, entropy=9.228390,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.981502, edge=0.000463, neigh=2.991023, align=5.182839, entropy=9.235125,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980899, edge=0.000464, neigh=3.100143, align=5.180384, entropy=9.237553,s=1.000000, s_hat=1.000000
Time for optimization: 42.72s
Test results:
Top-1: 0.456
Top-10: 0.806
Top-30: 0.891
Top-50: 0.920
Top-100: 0.940
MRR: 0.574
Run 6/10
Time for edge perturbation: 0.128s
Time for attribute perturbation: 20.345s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 40.85s
Iter 0: wasserstein=1.160016, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991751, edge=0.000545, neigh=3.097916, align=3.648892, entropy=10.827440,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978261, edge=0.000493, neigh=2.862320, align=4.507653, entropy=9.917677,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976215, edge=0.000480, neigh=2.679438, align=4.806399, entropy=9.614030,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975786, edge=0.000471, neigh=2.682519, align=4.946634, entropy=9.471793,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975642, edge=0.000468, neigh=2.697827, align=5.043856, entropy=9.374140,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975268, edge=0.000470, neigh=2.810637, align=5.045448, entropy=9.372517,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974700, edge=0.000471, neigh=2.932324, align=5.037940, entropy=9.380024,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973911, edge=0.000472, neigh=3.057064, align=5.031070, entropy=9.386894,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973307, edge=0.000472, neigh=3.173752, align=5.027689, entropy=9.390205,s=1.000000, s_hat=1.000000
Time for optimization: 53.66s
Test results:
Top-1: 0.327
Top-10: 0.709
Top-30: 0.807
Top-50: 0.841
Top-100: 0.876
MRR: 0.450
Run 7/10
Time for edge perturbation: 0.163s
Time for attribute perturbation: 86.677s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.38s
Iter 0: wasserstein=1.166067, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994592, edge=0.000542, neigh=3.137878, align=3.698470, entropy=10.779114,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980855, edge=0.000489, neigh=2.908868, align=4.561607, entropy=9.864067,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978749, edge=0.000478, neigh=2.727203, align=4.854772, entropy=9.565292,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978473, edge=0.000469, neigh=2.723565, align=4.997904, entropy=9.420526,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978416, edge=0.000466, neigh=2.708345, align=5.090677, entropy=9.327332,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978312, edge=0.000463, neigh=2.738009, align=5.154229, entropy=9.263738,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977709, edge=0.000465, neigh=2.876403, align=5.153738, entropy=9.264227,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976828, edge=0.000466, neigh=2.994077, align=5.146399, entropy=9.271565,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976184, edge=0.000466, neigh=3.103541, align=5.141653, entropy=9.276213,s=1.000000, s_hat=1.000000
Time for optimization: 53.18s
Test results:
Top-1: 0.374
Top-10: 0.758
Top-30: 0.872
Top-50: 0.903
Top-100: 0.933
MRR: 0.505
Run 8/10
Time for edge perturbation: 0.112s
Time for attribute perturbation: 63.792s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 18.84s
Iter 0: wasserstein=1.167713, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997751, edge=0.000543, neigh=3.145592, align=3.707322, entropy=10.767838,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984433, edge=0.000489, neigh=2.932388, align=4.564018, entropy=9.861240,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982178, edge=0.000477, neigh=2.743733, align=4.861979, entropy=9.557385,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981797, edge=0.000469, neigh=2.715526, align=5.002513, entropy=9.415735,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981606, edge=0.000466, neigh=2.718798, align=5.093792, entropy=9.324198,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981149, edge=0.000468, neigh=2.839347, align=5.094071, entropy=9.323894,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980677, edge=0.000470, neigh=2.969601, align=5.086447, entropy=9.331517,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979837, edge=0.000471, neigh=3.096319, align=5.081096, entropy=9.336868,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979212, edge=0.000471, neigh=3.211523, align=5.078580, entropy=9.339329,s=1.000000, s_hat=1.000000
Time for optimization: 14.23s
Test results:
Top-1: 0.403
Top-10: 0.774
Top-30: 0.858
Top-50: 0.877
Top-100: 0.914
MRR: 0.528
Run 9/10
Time for edge perturbation: 0.045s
Time for attribute perturbation: 0.409s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 6.29s
Iter 0: wasserstein=1.161835, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993672, edge=0.000543, neigh=3.094233, align=3.650419, entropy=10.826934,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980039, edge=0.000492, neigh=2.856668, align=4.516311, entropy=9.909168,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977755, edge=0.000477, neigh=2.685635, align=4.823244, entropy=9.596645,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977430, edge=0.000469, neigh=2.685544, align=4.975561, entropy=9.442843,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977197, edge=0.000466, neigh=2.670749, align=5.072986, entropy=9.345025,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977010, edge=0.000464, neigh=2.711677, align=5.142347, entropy=9.275620,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976368, edge=0.000466, neigh=2.867358, align=5.144193, entropy=9.273771,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975504, edge=0.000466, neigh=2.993515, align=5.138504, entropy=9.279460,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974801, edge=0.000467, neigh=3.102887, align=5.134319, entropy=9.283611,s=1.000000, s_hat=1.000000
Time for optimization: 12.09s
Test results:
Top-1: 0.339
Top-10: 0.725
Top-30: 0.839
Top-50: 0.867
Top-100: 0.899
MRR: 0.465
Run 10/10
Time for edge perturbation: 0.042s
Time for attribute perturbation: 0.513s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 7.07s
Iter 0: wasserstein=1.173335, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.999299, edge=0.000539, neigh=3.199228, align=3.775146, entropy=10.701474,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.985559, edge=0.000482, neigh=2.973146, align=4.629762, entropy=9.795702,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.983239, edge=0.000472, neigh=2.769176, align=4.925027, entropy=9.494272,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982997, edge=0.000465, neigh=2.736494, align=5.061289, entropy=9.357010,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982922, edge=0.000463, neigh=2.717703, align=5.146507, entropy=9.271486,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982778, edge=0.000461, neigh=2.734503, align=5.198789, entropy=9.219177,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.982289, edge=0.000463, neigh=2.876088, align=5.197253, entropy=9.220711,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.981459, edge=0.000464, neigh=3.011701, align=5.189758, entropy=9.228206,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980827, edge=0.000464, neigh=3.123325, align=5.185704, entropy=9.232245,s=1.000000, s_hat=1.000000
Time for optimization: 11.97s
Test results:
Top-1: 0.432
Top-10: 0.794
Top-30: 0.885
Top-50: 0.907
Top-100: 0.932
MRR: 0.558
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.011s
Time for attribute perturbation: 0.519s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 20.05s
Iter 0: wasserstein=1.159177, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991046, edge=0.000543, neigh=3.104386, align=3.658391, entropy=10.819248,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977397, edge=0.000490, neigh=2.892921, align=4.528886, entropy=9.896686,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975211, edge=0.000476, neigh=2.701583, align=4.842723, entropy=9.577184,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974743, edge=0.000467, neigh=2.688702, align=4.994718, entropy=9.423666,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974771, edge=0.000466, neigh=2.662611, align=5.084379, entropy=9.333626,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974664, edge=0.000464, neigh=2.696866, align=5.145122, entropy=9.272845,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974019, edge=0.000465, neigh=2.825606, align=5.145494, entropy=9.272471,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973082, edge=0.000466, neigh=2.939583, align=5.139629, entropy=9.278335,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972443, edge=0.000466, neigh=3.043372, align=5.134779, entropy=9.283043,s=1.000000, s_hat=1.000000
Time for optimization: 45.48s
Test results:
Top-1: 0.336
Top-10: 0.724
Top-30: 0.830
Top-50: 0.864
Top-100: 0.893
MRR: 0.465
Run 2/10
Time for edge perturbation: 0.089s
Time for attribute perturbation: 52.894s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.14s
Iter 0: wasserstein=1.159387, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990928, edge=0.000546, neigh=3.122715, align=3.658646, entropy=10.817483,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977655, edge=0.000496, neigh=2.852768, align=4.502602, entropy=9.922850,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975352, edge=0.000482, neigh=2.657223, align=4.807789, entropy=9.611916,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974871, edge=0.000471, neigh=2.686638, align=4.949403, entropy=9.468889,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974793, edge=0.000468, neigh=2.702441, align=5.047379, entropy=9.370608,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974592, edge=0.000465, neigh=2.732364, align=5.114496, entropy=9.303469,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974020, edge=0.000466, neigh=2.854637, align=5.115882, entropy=9.302082,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973032, edge=0.000467, neigh=2.971756, align=5.111708, entropy=9.306256,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972406, edge=0.000467, neigh=3.078615, align=5.108518, entropy=9.309294,s=1.000000, s_hat=1.000000
Time for optimization: 43.92s
Test results:
Top-1: 0.327
Top-10: 0.735
Top-30: 0.838
Top-50: 0.873
Top-100: 0.907
MRR: 0.457
Run 3/10
Time for edge perturbation: 0.061s
Time for attribute perturbation: 67.186s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 18.44s
Iter 0: wasserstein=1.162295, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993823, edge=0.000544, neigh=3.108468, align=3.658961, entropy=10.817368,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980563, edge=0.000494, neigh=2.855947, align=4.515735, entropy=9.909709,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978368, edge=0.000480, neigh=2.674336, align=4.813959, entropy=9.605805,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977892, edge=0.000470, neigh=2.692778, align=4.954780, entropy=9.463508,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977680, edge=0.000468, neigh=2.704049, align=5.053503, entropy=9.364483,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977243, edge=0.000470, neigh=2.817369, align=5.058512, entropy=9.359453,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976662, edge=0.000471, neigh=2.930787, align=5.052341, entropy=9.365623,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975833, edge=0.000472, neigh=3.053520, align=5.045633, entropy=9.372331,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975191, edge=0.000472, neigh=3.161261, align=5.042869, entropy=9.374969,s=1.000000, s_hat=1.000000
Time for optimization: 29.38s
Test results:
Top-1: 0.342
Top-10: 0.735
Top-30: 0.844
Top-50: 0.877
Top-100: 0.906
MRR: 0.469
Run 4/10
Time for edge perturbation: 0.126s
Time for attribute perturbation: 26.340s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 34.17s
Iter 0: wasserstein=1.158250, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990347, edge=0.000545, neigh=3.080803, align=3.630629, entropy=10.845766,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976782, edge=0.000494, neigh=2.866388, align=4.494769, entropy=9.930458,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974597, edge=0.000480, neigh=2.687969, align=4.801207, entropy=9.618992,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974149, edge=0.000471, neigh=2.696498, align=4.948171, entropy=9.470202,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974037, edge=0.000468, neigh=2.708240, align=5.048535, entropy=9.369456,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973661, edge=0.000471, neigh=2.831307, align=5.052362, entropy=9.365603,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973111, edge=0.000472, neigh=2.948830, align=5.045970, entropy=9.371994,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972298, edge=0.000472, neigh=3.077271, align=5.039955, entropy=9.378009,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971707, edge=0.000473, neigh=3.191905, align=5.036802, entropy=9.381085,s=1.000000, s_hat=1.000000
Time for optimization: 57.24s
Test results:
Top-1: 0.311
Top-10: 0.696
Top-30: 0.801
Top-50: 0.838
Top-100: 0.876
MRR: 0.433
Run 5/10
Time for edge perturbation: 0.104s
Time for attribute perturbation: 90.360s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 39.82s
Iter 0: wasserstein=1.169320, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997059, edge=0.000542, neigh=3.117636, align=3.704344, entropy=10.773176,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983298, edge=0.000488, neigh=2.907330, align=4.567710, entropy=9.857946,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981117, edge=0.000476, neigh=2.742094, align=4.859599, entropy=9.560495,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980871, edge=0.000467, neigh=2.720193, align=4.999634, entropy=9.418808,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980793, edge=0.000465, neigh=2.707490, align=5.089676, entropy=9.328335,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980707, edge=0.000462, neigh=2.716505, align=5.149907, entropy=9.268060,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980164, edge=0.000463, neigh=2.851079, align=5.148037, entropy=9.269927,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979344, edge=0.000464, neigh=2.966646, align=5.141127, entropy=9.276837,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978712, edge=0.000465, neigh=3.076885, align=5.136793, entropy=9.281141,s=1.000000, s_hat=1.000000
Time for optimization: 54.08s
Test results:
Top-1: 0.402
Top-10: 0.787
Top-30: 0.878
Top-50: 0.904
Top-100: 0.931
MRR: 0.532
Run 6/10
Time for edge perturbation: 0.197s
Time for attribute perturbation: 85.845s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 35.16s
Iter 0: wasserstein=1.162425, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993162, edge=0.000543, neigh=3.088402, align=3.658454, entropy=10.819197,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979575, edge=0.000490, neigh=2.840555, align=4.514241, entropy=9.911436,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977203, edge=0.000476, neigh=2.661978, align=4.820642, entropy=9.598843,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976724, edge=0.000467, neigh=2.683358, align=4.975946, entropy=9.442332,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976700, edge=0.000465, neigh=2.654991, align=5.072865, entropy=9.345124,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976539, edge=0.000463, neigh=2.689702, align=5.136111, entropy=9.281854,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975916, edge=0.000464, neigh=2.825661, align=5.134648, entropy=9.283316,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974970, edge=0.000465, neigh=2.942111, align=5.128038, entropy=9.289925,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974337, edge=0.000466, neigh=3.053612, align=5.123033, entropy=9.294886,s=1.000000, s_hat=1.000000
Time for optimization: 42.09s
Test results:
Top-1: 0.337
Top-10: 0.726
Top-30: 0.842
Top-50: 0.876
Top-100: 0.901
MRR: 0.468
Run 7/10
Time for edge perturbation: 0.125s
Time for attribute perturbation: 17.603s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 31.81s
Iter 0: wasserstein=1.159205, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991244, edge=0.000545, neigh=3.114037, align=3.646606, entropy=10.829531,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977987, edge=0.000495, neigh=2.837066, align=4.497596, entropy=9.927575,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975868, edge=0.000482, neigh=2.637750, align=4.799226, entropy=9.621050,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975455, edge=0.000471, neigh=2.683825, align=4.940241, entropy=9.478143,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975365, edge=0.000469, neigh=2.688473, align=5.039079, entropy=9.378913,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975072, edge=0.000466, neigh=2.717551, align=5.109580, entropy=9.308386,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974513, edge=0.000467, neigh=2.840617, align=5.112198, entropy=9.305766,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973576, edge=0.000468, neigh=2.954446, align=5.108094, entropy=9.309870,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972938, edge=0.000468, neigh=3.066283, align=5.106505, entropy=9.311255,s=1.000000, s_hat=1.000000
Time for optimization: 47.12s
Test results:
Top-1: 0.305
Top-10: 0.709
Top-30: 0.834
Top-50: 0.860
Top-100: 0.895
MRR: 0.437
Run 8/10
Time for edge perturbation: 0.140s
Time for attribute perturbation: 115.975s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 46.12s
Iter 0: wasserstein=1.168209, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998502, edge=0.000540, neigh=3.143507, align=3.703425, entropy=10.772960,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984947, edge=0.000485, neigh=2.926376, align=4.573546, entropy=9.852009,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982234, edge=0.000472, neigh=2.734201, align=4.882279, entropy=9.537085,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981919, edge=0.000465, neigh=2.716069, align=5.035515, entropy=9.382742,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981723, edge=0.000463, neigh=2.688972, align=5.127743, entropy=9.290244,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981338, edge=0.000462, neigh=2.709554, align=5.191904, entropy=9.226062,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980683, edge=0.000463, neigh=2.864952, align=5.192733, entropy=9.225231,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979733, edge=0.000464, neigh=3.001346, align=5.187125, entropy=9.230839,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979169, edge=0.000464, neigh=3.120539, align=5.184097, entropy=9.233842,s=1.000000, s_hat=1.000000
Time for optimization: 61.89s
Test results:
Top-1: 0.426
Top-10: 0.778
Top-30: 0.859
Top-50: 0.888
Top-100: 0.922
MRR: 0.542
Run 9/10
Time for edge perturbation: 0.161s
Time for attribute perturbation: 101.194s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 40.75s
Iter 0: wasserstein=1.161973, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992904, edge=0.000543, neigh=3.088822, align=3.657729, entropy=10.819956,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979192, edge=0.000491, neigh=2.870623, align=4.526970, entropy=9.898643,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976873, edge=0.000477, neigh=2.700165, align=4.833796, entropy=9.585664,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976416, edge=0.000468, neigh=2.696899, align=4.981485, entropy=9.436784,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976286, edge=0.000466, neigh=2.669220, align=5.073323, entropy=9.344664,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976256, edge=0.000464, neigh=2.691831, align=5.136824, entropy=9.281142,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975629, edge=0.000465, neigh=2.845005, align=5.138032, entropy=9.279932,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974691, edge=0.000466, neigh=2.974816, align=5.132334, entropy=9.285630,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973987, edge=0.000467, neigh=3.086918, align=5.127397, entropy=9.290533,s=1.000000, s_hat=1.000000
Time for optimization: 50.29s
Test results:
Top-1: 0.352
Top-10: 0.727
Top-30: 0.842
Top-50: 0.875
Top-100: 0.898
MRR: 0.474
Run 10/10
Time for edge perturbation: 0.103s
Time for attribute perturbation: 20.449s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 27.47s
Iter 0: wasserstein=1.163019, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992491, edge=0.000542, neigh=3.119449, align=3.685447, entropy=10.791817,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978651, edge=0.000490, neigh=2.911162, align=4.533793, entropy=9.891976,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976443, edge=0.000477, neigh=2.731672, align=4.828192, entropy=9.591380,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976168, edge=0.000469, neigh=2.722623, align=4.977806, entropy=9.440494,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976192, edge=0.000466, neigh=2.692600, align=5.076234, entropy=9.341757,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976047, edge=0.000464, neigh=2.730833, align=5.142879, entropy=9.275087,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975434, edge=0.000465, neigh=2.856091, align=5.142068, entropy=9.275896,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974440, edge=0.000466, neigh=2.984087, align=5.136029, entropy=9.281934,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973798, edge=0.000467, neigh=3.100332, align=5.132858, entropy=9.285034,s=1.000000, s_hat=1.000000
Time for optimization: 43.02s
Test results:
Top-1: 0.344
Top-10: 0.743
Top-30: 0.840
Top-50: 0.880
Top-100: 0.907
MRR: 0.477
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.143s
Time for attribute perturbation: 78.631s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 44.57s
Iter 0: wasserstein=1.157115, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990760, edge=0.000545, neigh=3.057772, align=3.598974, entropy=10.878002,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977480, edge=0.000496, neigh=2.837405, align=4.472716, entropy=9.952666,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975007, edge=0.000481, neigh=2.665670, align=4.789291, entropy=9.630970,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974393, edge=0.000471, neigh=2.674039, align=4.938504, entropy=9.479864,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974111, edge=0.000468, neigh=2.689778, align=5.040145, entropy=9.377846,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973597, edge=0.000470, neigh=2.822869, align=5.040488, entropy=9.377477,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973054, edge=0.000472, neigh=2.943843, align=5.033579, entropy=9.384385,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972290, edge=0.000472, neigh=3.059457, align=5.025845, entropy=9.392119,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971604, edge=0.000473, neigh=3.171763, align=5.020851, entropy=9.396987,s=1.000000, s_hat=1.000000
Time for optimization: 58.49s
Test results:
Top-1: 0.289
Top-10: 0.688
Top-30: 0.802
Top-50: 0.836
Top-100: 0.874
MRR: 0.417
Run 2/10
Time for edge perturbation: 0.169s
Time for attribute perturbation: 95.361s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 43.32s
Iter 0: wasserstein=1.160806, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994564, edge=0.000543, neigh=3.120999, align=3.648964, entropy=10.826816,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981493, edge=0.000492, neigh=2.881079, align=4.520318, entropy=9.905146,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979052, edge=0.000477, neigh=2.673018, align=4.830126, entropy=9.590096,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978603, edge=0.000467, neigh=2.664166, align=4.974784, entropy=9.443483,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978299, edge=0.000464, neigh=2.685684, align=5.073024, entropy=9.344963,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977673, edge=0.000466, neigh=2.809397, align=5.076981, entropy=9.340984,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977058, edge=0.000468, neigh=2.937877, align=5.072573, entropy=9.345391,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976191, edge=0.000469, neigh=3.071539, align=5.067523, entropy=9.350441,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975607, edge=0.000469, neigh=3.181654, align=5.065906, entropy=9.352013,s=1.000000, s_hat=1.000000
Time for optimization: 50.79s
Test results:
Top-1: 0.365
Top-10: 0.745
Top-30: 0.830
Top-50: 0.857
Top-100: 0.897
MRR: 0.491
Run 3/10
Time for edge perturbation: 0.070s
Time for attribute perturbation: 29.142s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 34.94s
Iter 0: wasserstein=1.166124, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997025, edge=0.000542, neigh=3.115871, align=3.690975, entropy=10.785199,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983571, edge=0.000487, neigh=2.902507, align=4.559764, entropy=9.865665,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981040, edge=0.000474, neigh=2.689780, align=4.866628, entropy=9.552621,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980689, edge=0.000466, neigh=2.682237, align=5.011973, entropy=9.406262,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980654, edge=0.000464, neigh=2.675499, align=5.106332, entropy=9.311653,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980263, edge=0.000462, neigh=2.703532, align=5.163735, entropy=9.254230,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979650, edge=0.000464, neigh=2.834379, align=5.164718, entropy=9.253246,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978789, edge=0.000464, neigh=2.950958, align=5.159764, entropy=9.258200,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978169, edge=0.000465, neigh=3.057138, align=5.156916, entropy=9.261027,s=1.000000, s_hat=1.000000
Time for optimization: 55.97s
Test results:
Top-1: 0.400
Top-10: 0.766
Top-30: 0.854
Top-50: 0.878
Top-100: 0.907
MRR: 0.524
Run 4/10
Time for edge perturbation: 0.120s
Time for attribute perturbation: 105.084s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 42.80s
Iter 0: wasserstein=1.166104, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995306, edge=0.000543, neigh=3.129673, align=3.701575, entropy=10.773802,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982103, edge=0.000489, neigh=2.902646, align=4.564961, entropy=9.860324,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979795, edge=0.000476, neigh=2.694490, align=4.869769, entropy=9.549677,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979389, edge=0.000468, neigh=2.699465, align=5.006175, entropy=9.412100,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979283, edge=0.000465, neigh=2.696438, align=5.098745, entropy=9.319245,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978819, edge=0.000467, neigh=2.814333, align=5.103311, entropy=9.314654,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978243, edge=0.000468, neigh=2.942791, align=5.099075, entropy=9.318889,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977404, edge=0.000468, neigh=3.070532, align=5.093621, entropy=9.324343,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976809, edge=0.000469, neigh=3.192010, align=5.090048, entropy=9.327863,s=1.000000, s_hat=1.000000
Time for optimization: 56.10s
Test results:
Top-1: 0.387
Top-10: 0.749
Top-30: 0.838
Top-50: 0.867
Top-100: 0.901
MRR: 0.511
Run 5/10
Time for edge perturbation: 0.113s
Time for attribute perturbation: 72.100s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 13.59s
Iter 0: wasserstein=1.163605, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995432, edge=0.000542, neigh=3.114010, align=3.664023, entropy=10.810858,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982447, edge=0.000491, neigh=2.898399, align=4.534153, entropy=9.891012,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979834, edge=0.000477, neigh=2.676314, align=4.841000, entropy=9.578286,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979448, edge=0.000468, neigh=2.674648, align=4.988383, entropy=9.429825,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979103, edge=0.000465, neigh=2.692046, align=5.089377, entropy=9.328607,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978469, edge=0.000467, neigh=2.825246, align=5.094602, entropy=9.323363,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977762, edge=0.000469, neigh=2.961190, align=5.089669, entropy=9.328295,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976885, edge=0.000469, neigh=3.094360, align=5.085134, entropy=9.332830,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976334, edge=0.000469, neigh=3.209575, align=5.083527, entropy=9.334391,s=1.000000, s_hat=1.000000
Time for optimization: 21.35s
Test results:
Top-1: 0.380
Top-10: 0.753
Top-30: 0.838
Top-50: 0.866
Top-100: 0.907
MRR: 0.505
Run 6/10
Time for edge perturbation: 0.052s
Time for attribute perturbation: 4.208s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 29.19s
Iter 0: wasserstein=1.162708, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992358, edge=0.000543, neigh=3.139343, align=3.695822, entropy=10.781297,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978498, edge=0.000490, neigh=2.923445, align=4.547530, entropy=9.877975,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976624, edge=0.000478, neigh=2.724553, align=4.835157, entropy=9.584880,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976402, edge=0.000470, neigh=2.717235, align=4.975249, entropy=9.443193,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976364, edge=0.000467, neigh=2.691757, align=5.071804, entropy=9.346214,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976171, edge=0.000465, neigh=2.716572, align=5.137981, entropy=9.279987,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975546, edge=0.000466, neigh=2.852089, align=5.139500, entropy=9.278465,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974680, edge=0.000467, neigh=2.977118, align=5.134488, entropy=9.283476,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974047, edge=0.000467, neigh=3.091497, align=5.131085, entropy=9.286801,s=1.000000, s_hat=1.000000
Time for optimization: 41.32s
Test results:
Top-1: 0.361
Top-10: 0.750
Top-30: 0.850
Top-50: 0.883
Top-100: 0.911
MRR: 0.493
Run 7/10
Time for edge perturbation: 0.139s
Time for attribute perturbation: 101.450s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 44.20s
Iter 0: wasserstein=1.160811, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992013, edge=0.000544, neigh=3.112181, align=3.658788, entropy=10.817294,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978818, edge=0.000495, neigh=2.863651, align=4.513471, entropy=9.911668,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976604, edge=0.000481, neigh=2.676307, align=4.809109, entropy=9.610515,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976294, edge=0.000471, neigh=2.688837, align=4.949613, entropy=9.468653,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976059, edge=0.000468, neigh=2.707638, align=5.049469, entropy=9.368516,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975583, edge=0.000470, neigh=2.822815, align=5.052750, entropy=9.365215,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975037, edge=0.000472, neigh=2.936979, align=5.047295, entropy=9.370669,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974137, edge=0.000472, neigh=3.057967, align=5.040178, entropy=9.377786,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973524, edge=0.000473, neigh=3.172548, align=5.037737, entropy=9.380112,s=1.000000, s_hat=1.000000
Time for optimization: 55.46s
Test results:
Top-1: 0.331
Top-10: 0.730
Top-30: 0.829
Top-50: 0.861
Top-100: 0.898
MRR: 0.459
Run 8/10
Time for edge perturbation: 0.130s
Time for attribute perturbation: 90.926s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 39.59s
Iter 0: wasserstein=1.166021, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994336, edge=0.000542, neigh=3.127034, align=3.695966, entropy=10.781721,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980532, edge=0.000488, neigh=2.901729, align=4.553667, entropy=9.872089,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978313, edge=0.000477, neigh=2.737993, align=4.853150, entropy=9.566339,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977982, edge=0.000469, neigh=2.721820, align=4.995082, entropy=9.423210,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978076, edge=0.000467, neigh=2.686810, align=5.085100, entropy=9.332890,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978000, edge=0.000464, neigh=2.728135, align=5.144968, entropy=9.272998,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977398, edge=0.000465, neigh=2.866599, align=5.144917, entropy=9.273047,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976511, edge=0.000466, neigh=2.985555, align=5.138841, entropy=9.279123,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975872, edge=0.000466, neigh=3.096565, align=5.134386, entropy=9.283530,s=1.000000, s_hat=1.000000
Time for optimization: 46.51s
Test results:
Top-1: 0.361
Top-10: 0.740
Top-30: 0.848
Top-50: 0.883
Top-100: 0.907
MRR: 0.488
Run 9/10
Time for edge perturbation: 0.098s
Time for attribute perturbation: 27.875s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 30.34s
Iter 0: wasserstein=1.160968, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994411, edge=0.000543, neigh=3.100562, align=3.642937, entropy=10.832564,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981289, edge=0.000492, neigh=2.877944, align=4.517335, entropy=9.908056,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978643, edge=0.000477, neigh=2.697887, align=4.830733, entropy=9.589226,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978184, edge=0.000468, neigh=2.680836, align=4.979454, entropy=9.438862,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977874, edge=0.000465, neigh=2.702305, align=5.080725, entropy=9.337265,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977337, edge=0.000467, neigh=2.825929, align=5.082151, entropy=9.335815,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976796, edge=0.000469, neigh=2.949837, align=5.074420, entropy=9.343544,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975926, edge=0.000469, neigh=3.084127, align=5.068357, entropy=9.349607,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975313, edge=0.000470, neigh=3.196475, align=5.065642, entropy=9.352232,s=1.000000, s_hat=1.000000
Time for optimization: 43.16s
Test results:
Top-1: 0.375
Top-10: 0.745
Top-30: 0.825
Top-50: 0.850
Top-100: 0.888
MRR: 0.497
Run 10/10
Time for edge perturbation: 0.128s
Time for attribute perturbation: 92.653s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 40.58s
Iter 0: wasserstein=1.161996, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992505, edge=0.000544, neigh=3.094942, align=3.651675, entropy=10.824863,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979307, edge=0.000493, neigh=2.838855, align=4.504489, entropy=9.921088,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976913, edge=0.000479, neigh=2.652184, align=4.806883, entropy=9.612853,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976345, edge=0.000470, neigh=2.686306, align=4.949120, entropy=9.469161,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976313, edge=0.000467, neigh=2.683241, align=5.042138, entropy=9.375848,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976113, edge=0.000464, neigh=2.716495, align=5.104065, entropy=9.313900,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975598, edge=0.000465, neigh=2.844081, align=5.106402, entropy=9.311562,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974690, edge=0.000466, neigh=2.954241, align=5.102631, entropy=9.315333,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974019, edge=0.000466, neigh=3.064215, align=5.099733, entropy=9.318056,s=1.000000, s_hat=1.000000
Time for optimization: 54.72s
Test results:
Top-1: 0.345
Top-10: 0.720
Top-30: 0.834
Top-50: 0.857
Top-100: 0.888
MRR: 0.468
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.096s
Time for attribute perturbation: 100.503s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.06s
Iter 0: wasserstein=1.155184, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989622, edge=0.000546, neigh=3.067691, align=3.590995, entropy=10.885497,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976501, edge=0.000497, neigh=2.824844, align=4.451537, entropy=9.973619,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973882, edge=0.000482, neigh=2.623870, align=4.771841, entropy=9.647672,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973215, edge=0.000471, neigh=2.652888, align=4.925135, entropy=9.493078,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973054, edge=0.000468, neigh=2.671628, align=5.032039, entropy=9.385942,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972545, edge=0.000470, neigh=2.797986, align=5.035671, entropy=9.382294,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971876, edge=0.000471, neigh=2.919611, align=5.030124, entropy=9.387840,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971032, edge=0.000472, neigh=3.034181, align=5.024543, entropy=9.393420,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970357, edge=0.000472, neigh=3.145816, align=5.022498, entropy=9.395264,s=1.000000, s_hat=1.000000
Time for optimization: 40.75s
Test results:
Top-1: 0.273
Top-10: 0.679
Top-30: 0.802
Top-50: 0.839
Top-100: 0.879
MRR: 0.404
Run 2/10
Time for edge perturbation: 0.113s
Time for attribute perturbation: 29.481s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 28.02s
Iter 0: wasserstein=1.167392, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997545, edge=0.000542, neigh=3.153156, align=3.709875, entropy=10.765892,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984258, edge=0.000489, neigh=2.918597, align=4.574775, entropy=9.850733,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981953, edge=0.000476, neigh=2.737558, align=4.873131, entropy=9.546919,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981611, edge=0.000468, neigh=2.719056, align=5.007087, entropy=9.411247,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981365, edge=0.000466, neigh=2.724362, align=5.098779, entropy=9.319215,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980911, edge=0.000468, neigh=2.840156, align=5.101382, entropy=9.316584,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980375, edge=0.000469, neigh=2.969500, align=5.094367, entropy=9.323597,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979527, edge=0.000470, neigh=3.100508, align=5.088934, entropy=9.329030,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978943, edge=0.000470, neigh=3.219726, align=5.086086, entropy=9.331819,s=1.000000, s_hat=1.000000
Time for optimization: 53.20s
Test results:
Top-1: 0.410
Top-10: 0.784
Top-30: 0.868
Top-50: 0.894
Top-100: 0.924
MRR: 0.533
Run 3/10
Time for edge perturbation: 0.180s
Time for attribute perturbation: 97.572s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 43.05s
Iter 0: wasserstein=1.157571, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991641, edge=0.000544, neigh=3.064861, align=3.602229, entropy=10.874315,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978422, edge=0.000495, neigh=2.831880, align=4.467370, entropy=9.957786,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975866, edge=0.000480, neigh=2.650912, align=4.782053, entropy=9.637480,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975322, edge=0.000470, neigh=2.654224, align=4.930186, entropy=9.488045,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975029, edge=0.000467, neigh=2.665811, align=5.036861, entropy=9.381121,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974592, edge=0.000469, neigh=2.796506, align=5.039954, entropy=9.378011,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974032, edge=0.000471, neigh=2.919895, align=5.031510, entropy=9.386454,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973122, edge=0.000471, neigh=3.039759, align=5.025246, entropy=9.392718,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972459, edge=0.000472, neigh=3.151235, align=5.023217, entropy=9.394586,s=1.000000, s_hat=1.000000
Time for optimization: 53.73s
Test results:
Top-1: 0.292
Top-10: 0.685
Top-30: 0.799
Top-50: 0.828
Top-100: 0.874
MRR: 0.421
Run 4/10
Time for edge perturbation: 0.078s
Time for attribute perturbation: 78.661s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 25.98s
Iter 0: wasserstein=1.158550, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991489, edge=0.000545, neigh=3.101243, align=3.638442, entropy=10.838829,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977900, edge=0.000492, neigh=2.855734, align=4.495133, entropy=9.930156,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975612, edge=0.000478, neigh=2.655399, align=4.804481, entropy=9.615423,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975203, edge=0.000469, neigh=2.658827, align=4.960248, entropy=9.458135,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975044, edge=0.000466, neigh=2.642265, align=5.059202, entropy=9.358800,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974762, edge=0.000464, neigh=2.681628, align=5.130492, entropy=9.287474,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974048, edge=0.000465, neigh=2.811461, align=5.134334, entropy=9.283630,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973129, edge=0.000466, neigh=2.923127, align=5.129692, entropy=9.288272,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972512, edge=0.000466, neigh=3.027639, align=5.127354, entropy=9.290548,s=1.000000, s_hat=1.000000
Time for optimization: 32.35s
Test results:
Top-1: 0.326
Top-10: 0.722
Top-30: 0.840
Top-50: 0.873
Top-100: 0.899
MRR: 0.456
Run 5/10
Time for edge perturbation: 0.033s
Time for attribute perturbation: 0.614s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 20.31s
Iter 0: wasserstein=1.162946, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995154, edge=0.000543, neigh=3.105224, align=3.659082, entropy=10.815915,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982190, edge=0.000490, neigh=2.903881, align=4.536375, entropy=9.888765,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979731, edge=0.000476, neigh=2.685911, align=4.847299, entropy=9.572677,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979275, edge=0.000467, neigh=2.681435, align=4.992298, entropy=9.425945,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978995, edge=0.000465, neigh=2.694528, align=5.087143, entropy=9.330842,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978412, edge=0.000467, neigh=2.829329, align=5.088878, entropy=9.329087,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977744, edge=0.000468, neigh=2.963463, align=5.083499, entropy=9.334465,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976926, edge=0.000469, neigh=3.093085, align=5.078430, entropy=9.339533,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976384, edge=0.000469, neigh=3.205015, align=5.075785, entropy=9.342127,s=1.000000, s_hat=1.000000
Time for optimization: 42.70s
Test results:
Top-1: 0.379
Top-10: 0.736
Top-30: 0.825
Top-50: 0.849
Top-100: 0.896
MRR: 0.501
Run 6/10
Time for edge perturbation: 0.125s
Time for attribute perturbation: 51.858s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 31.66s
Iter 0: wasserstein=1.160371, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994044, edge=0.000544, neigh=3.104611, align=3.629781, entropy=10.845086,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981067, edge=0.000493, neigh=2.858711, align=4.491039, entropy=9.934127,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978413, edge=0.000478, neigh=2.639859, align=4.804688, entropy=9.614652,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977899, edge=0.000468, neigh=2.655559, align=4.958485, entropy=9.459737,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977679, edge=0.000464, neigh=2.675416, align=5.065341, entropy=9.352644,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977053, edge=0.000466, neigh=2.791101, align=5.069009, entropy=9.348956,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976420, edge=0.000468, neigh=2.916293, align=5.063026, entropy=9.354938,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975508, edge=0.000469, neigh=3.043455, align=5.057551, entropy=9.360413,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974899, edge=0.000469, neigh=3.157064, align=5.055606, entropy=9.362276,s=1.000000, s_hat=1.000000
Time for optimization: 46.91s
Test results:
Top-1: 0.340
Top-10: 0.721
Top-30: 0.809
Top-50: 0.839
Top-100: 0.879
MRR: 0.466
Run 7/10
Time for edge perturbation: 0.118s
Time for attribute perturbation: 53.450s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.56s
Iter 0: wasserstein=1.165102, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993217, edge=0.000543, neigh=3.127842, align=3.710014, entropy=10.767148,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979428, edge=0.000490, neigh=2.915857, align=4.561023, entropy=9.864627,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977316, edge=0.000478, neigh=2.716469, align=4.850014, entropy=9.569382,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977094, edge=0.000469, neigh=2.708903, align=4.998631, entropy=9.419638,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977063, edge=0.000466, neigh=2.689786, align=5.095302, entropy=9.322687,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976922, edge=0.000463, neigh=2.727160, align=5.154338, entropy=9.263628,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976331, edge=0.000465, neigh=2.861819, align=5.152407, entropy=9.265557,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975431, edge=0.000466, neigh=2.982865, align=5.146192, entropy=9.271772,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974774, edge=0.000466, neigh=3.091105, align=5.141464, entropy=9.276435,s=1.000000, s_hat=1.000000
Time for optimization: 30.80s
Test results:
Top-1: 0.378
Top-10: 0.758
Top-30: 0.853
Top-50: 0.883
Top-100: 0.912
MRR: 0.505
Run 8/10
Time for edge perturbation: 0.108s
Time for attribute perturbation: 6.408s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 22.08s
Iter 0: wasserstein=1.160041, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994512, edge=0.000545, neigh=3.102915, align=3.622501, entropy=10.852852,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981523, edge=0.000495, neigh=2.880450, align=4.492572, entropy=9.932621,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979066, edge=0.000480, neigh=2.648310, align=4.804527, entropy=9.615453,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978636, edge=0.000469, neigh=2.654668, align=4.953560, entropy=9.464691,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978291, edge=0.000466, neigh=2.670775, align=5.059000, entropy=9.358986,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977716, edge=0.000468, neigh=2.798919, align=5.062635, entropy=9.355330,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977073, edge=0.000470, neigh=2.928028, align=5.056920, entropy=9.361044,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976282, edge=0.000470, neigh=3.054828, align=5.052249, entropy=9.365714,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975684, edge=0.000470, neigh=3.157292, align=5.050294, entropy=9.367594,s=1.000000, s_hat=1.000000
Time for optimization: 31.03s
Test results:
Top-1: 0.344
Top-10: 0.722
Top-30: 0.816
Top-50: 0.847
Top-100: 0.886
MRR: 0.470
Run 9/10
Time for edge perturbation: 0.116s
Time for attribute perturbation: 5.740s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 27.27s
Iter 0: wasserstein=1.167998, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995634, edge=0.000543, neigh=3.135442, align=3.707416, entropy=10.769676,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981946, edge=0.000490, neigh=2.908925, align=4.554421, entropy=9.871483,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979795, edge=0.000478, neigh=2.719559, align=4.843004, entropy=9.576545,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979472, edge=0.000470, neigh=2.709460, align=4.989467, entropy=9.428848,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979495, edge=0.000467, neigh=2.691046, align=5.087262, entropy=9.330732,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979398, edge=0.000464, neigh=2.734141, align=5.151286, entropy=9.266680,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978806, edge=0.000465, neigh=2.865012, align=5.149968, entropy=9.267996,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977935, edge=0.000466, neigh=2.992832, align=5.143363, entropy=9.274601,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977277, edge=0.000466, neigh=3.105642, align=5.138859, entropy=9.279071,s=1.000000, s_hat=1.000000
Time for optimization: 53.38s
Test results:
Top-1: 0.385
Top-10: 0.753
Top-30: 0.847
Top-50: 0.876
Top-100: 0.908
MRR: 0.510
Run 10/10
Time for edge perturbation: 0.150s
Time for attribute perturbation: 95.076s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.14s
Iter 0: wasserstein=1.173904, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=1.000314, edge=0.000539, neigh=3.222798, align=3.783672, entropy=10.692703,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.986488, edge=0.000483, neigh=3.012377, align=4.645060, entropy=9.780479,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.984175, edge=0.000472, neigh=2.822143, align=4.937024, entropy=9.482245,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.983958, edge=0.000466, neigh=2.756001, align=5.068649, entropy=9.349643,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.983910, edge=0.000464, neigh=2.737201, align=5.154762, entropy=9.263230,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.983849, edge=0.000462, neigh=2.744227, align=5.209035, entropy=9.208931,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.983268, edge=0.000463, neigh=2.883185, align=5.206817, entropy=9.211147,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.982343, edge=0.000464, neigh=3.016832, align=5.201104, entropy=9.216860,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.981744, edge=0.000464, neigh=3.127786, align=5.198353, entropy=9.219597,s=1.000000, s_hat=1.000000
Time for optimization: 45.39s
Test results:
Top-1: 0.463
Top-10: 0.818
Top-30: 0.888
Top-50: 0.918
Top-100: 0.937
MRR: 0.585
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.142s
Time for attribute perturbation: 25.162s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 12.14s
Iter 0: wasserstein=1.164419, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993560, edge=0.000543, neigh=3.119919, align=3.686086, entropy=10.791459,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979765, edge=0.000489, neigh=2.890187, align=4.539857, entropy=9.885849,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977822, edge=0.000477, neigh=2.690935, align=4.829179, entropy=9.590882,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977524, edge=0.000469, neigh=2.711574, align=4.975284, entropy=9.443147,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977472, edge=0.000466, neigh=2.694255, align=5.071476, entropy=9.346534,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977290, edge=0.000463, neigh=2.730916, align=5.140999, entropy=9.276967,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976711, edge=0.000465, neigh=2.867164, align=5.141468, entropy=9.276496,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975838, edge=0.000466, neigh=2.987725, align=5.134798, entropy=9.283166,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975230, edge=0.000466, neigh=3.099277, align=5.130016, entropy=9.287873,s=1.000000, s_hat=1.000000
Time for optimization: 33.29s
Test results:
Top-1: 0.361
Top-10: 0.731
Top-30: 0.840
Top-50: 0.873
Top-100: 0.907
MRR: 0.485
Run 2/10
Time for edge perturbation: 0.121s
Time for attribute perturbation: 7.417s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 32.34s
Iter 0: wasserstein=1.157003, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990126, edge=0.000546, neigh=3.083169, align=3.609393, entropy=10.867211,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976628, edge=0.000497, neigh=2.845827, align=4.468199, entropy=9.957250,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974376, edge=0.000483, neigh=2.646347, align=4.779040, entropy=9.641317,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973884, edge=0.000472, neigh=2.669562, align=4.927295, entropy=9.491109,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973828, edge=0.000469, neigh=2.681640, align=5.027507, entropy=9.390488,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973676, edge=0.000466, neigh=2.721759, align=5.095116, entropy=9.322850,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973051, edge=0.000467, neigh=2.844387, align=5.097444, entropy=9.320520,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972133, edge=0.000468, neigh=2.962584, align=5.095491, entropy=9.322473,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971502, edge=0.000468, neigh=3.070481, align=5.093054, entropy=9.324733,s=1.000000, s_hat=1.000000
Time for optimization: 52.86s
Test results:
Top-1: 0.277
Top-10: 0.682
Top-30: 0.791
Top-50: 0.829
Top-100: 0.874
MRR: 0.406
Run 3/10
Time for edge perturbation: 0.086s
Time for attribute perturbation: 93.527s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 43.42s
Iter 0: wasserstein=1.162218, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992801, edge=0.000544, neigh=3.110222, align=3.667757, entropy=10.809761,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979202, edge=0.000491, neigh=2.863711, align=4.532232, entropy=9.893261,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976838, edge=0.000477, neigh=2.662538, align=4.837476, entropy=9.582443,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976431, edge=0.000467, neigh=2.671738, align=4.987412, entropy=9.430999,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976356, edge=0.000465, neigh=2.655117, align=5.081516, entropy=9.336496,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976158, edge=0.000463, neigh=2.693724, align=5.142619, entropy=9.275348,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975538, edge=0.000465, neigh=2.827696, align=5.145609, entropy=9.272355,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974656, edge=0.000465, neigh=2.941434, align=5.141020, entropy=9.276944,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973968, edge=0.000466, neigh=3.051498, align=5.137285, entropy=9.280564,s=1.000000, s_hat=1.000000
Time for optimization: 58.19s
Test results:
Top-1: 0.359
Top-10: 0.736
Top-30: 0.851
Top-50: 0.884
Top-100: 0.909
MRR: 0.489
Run 4/10
Time for edge perturbation: 0.102s
Time for attribute perturbation: 101.364s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 41.67s
Iter 0: wasserstein=1.165765, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996010, edge=0.000543, neigh=3.147174, align=3.705039, entropy=10.770475,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982822, edge=0.000489, neigh=2.920139, align=4.564423, entropy=9.860881,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980505, edge=0.000477, neigh=2.699781, align=4.865498, entropy=9.554237,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980083, edge=0.000467, neigh=2.702722, align=5.003508, entropy=9.414789,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980044, edge=0.000465, neigh=2.706567, align=5.091746, entropy=9.326245,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979778, edge=0.000462, neigh=2.734116, align=5.149708, entropy=9.268258,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979260, edge=0.000463, neigh=2.862469, align=5.152845, entropy=9.265119,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978461, edge=0.000464, neigh=2.983236, align=5.148055, entropy=9.269909,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977824, edge=0.000464, neigh=3.087026, align=5.145836, entropy=9.272082,s=1.000000, s_hat=1.000000
Time for optimization: 51.82s
Test results:
Top-1: 0.399
Top-10: 0.758
Top-30: 0.841
Top-50: 0.867
Top-100: 0.902
MRR: 0.522
Run 5/10
Time for edge perturbation: 0.138s
Time for attribute perturbation: 44.875s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 32.76s
Iter 0: wasserstein=1.160813, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994025, edge=0.000545, neigh=3.104453, align=3.645376, entropy=10.829863,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980947, edge=0.000493, neigh=2.879973, align=4.509162, entropy=9.916082,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978472, edge=0.000479, neigh=2.665008, align=4.819784, entropy=9.600298,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977933, edge=0.000469, neigh=2.679880, align=4.966913, entropy=9.451352,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977788, edge=0.000466, neigh=2.687529, align=5.066330, entropy=9.351656,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977262, edge=0.000468, neigh=2.802284, align=5.068314, entropy=9.349651,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976685, edge=0.000469, neigh=2.926450, align=5.062675, entropy=9.355289,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975859, edge=0.000470, neigh=3.047565, align=5.057028, entropy=9.360936,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975269, edge=0.000470, neigh=3.153153, align=5.054428, entropy=9.363446,s=1.000000, s_hat=1.000000
Time for optimization: 52.00s
Test results:
Top-1: 0.368
Top-10: 0.730
Top-30: 0.816
Top-50: 0.846
Top-100: 0.883
MRR: 0.489
Run 6/10
Time for edge perturbation: 0.103s
Time for attribute perturbation: 80.278s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.84s
Iter 0: wasserstein=1.159259, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991321, edge=0.000545, neigh=3.089276, align=3.625626, entropy=10.850558,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978099, edge=0.000497, neigh=2.839325, align=4.481447, entropy=9.943995,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975793, edge=0.000482, neigh=2.665574, align=4.785102, entropy=9.634654,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975363, edge=0.000472, neigh=2.684061, align=4.935147, entropy=9.483143,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975162, edge=0.000468, neigh=2.703271, align=5.040009, entropy=9.377978,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974704, edge=0.000471, neigh=2.821455, align=5.046527, entropy=9.371438,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974107, edge=0.000472, neigh=2.932654, align=5.042000, entropy=9.375964,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973169, edge=0.000473, neigh=3.057401, align=5.036618, entropy=9.381346,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972545, edge=0.000473, neigh=3.170984, align=5.033791, entropy=9.384093,s=1.000000, s_hat=1.000000
Time for optimization: 54.16s
Test results:
Top-1: 0.309
Top-10: 0.703
Top-30: 0.813
Top-50: 0.845
Top-100: 0.886
MRR: 0.436
Run 7/10
Time for edge perturbation: 0.169s
Time for attribute perturbation: 97.815s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 47.87s
Iter 0: wasserstein=1.158525, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990647, edge=0.000546, neigh=3.095791, align=3.628093, entropy=10.847979,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977275, edge=0.000495, neigh=2.830815, align=4.478725, entropy=9.946384,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974956, edge=0.000481, neigh=2.640345, align=4.787368, entropy=9.632859,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974547, edge=0.000471, neigh=2.671097, align=4.933027, entropy=9.485369,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974463, edge=0.000468, neigh=2.689003, align=5.031705, entropy=9.386288,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974209, edge=0.000465, neigh=2.723949, align=5.100291, entropy=9.317674,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973649, edge=0.000467, neigh=2.845233, align=5.103219, entropy=9.314745,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972665, edge=0.000467, neigh=2.955584, align=5.100052, entropy=9.317912,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972048, edge=0.000468, neigh=3.067243, align=5.097646, entropy=9.320139,s=1.000000, s_hat=1.000000
Time for optimization: 57.30s
Test results:
Top-1: 0.313
Top-10: 0.696
Top-30: 0.806
Top-50: 0.839
Top-100: 0.878
MRR: 0.436
Run 8/10
Time for edge perturbation: 0.142s
Time for attribute perturbation: 74.918s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 44.70s
Iter 0: wasserstein=1.163374, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993407, edge=0.000542, neigh=3.059329, align=3.653516, entropy=10.823996,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979808, edge=0.000488, neigh=2.853645, align=4.520347, entropy=9.905188,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977480, edge=0.000475, neigh=2.688644, align=4.827595, entropy=9.591890,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977060, edge=0.000467, neigh=2.681482, align=4.981440, entropy=9.436827,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976849, edge=0.000465, neigh=2.657070, align=5.078253, entropy=9.339734,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976736, edge=0.000463, neigh=2.693500, align=5.147182, entropy=9.270784,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976061, edge=0.000465, neigh=2.854370, align=5.148372, entropy=9.269592,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975096, edge=0.000465, neigh=2.983942, align=5.142696, entropy=9.275268,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974444, edge=0.000466, neigh=3.104823, align=5.137745, entropy=9.280190,s=1.000000, s_hat=1.000000
Time for optimization: 58.81s
Test results:
Top-1: 0.358
Top-10: 0.740
Top-30: 0.842
Top-50: 0.869
Top-100: 0.896
MRR: 0.484
Run 9/10
Time for edge perturbation: 0.113s
Time for attribute perturbation: 101.457s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.67s
Iter 0: wasserstein=1.169830, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997810, edge=0.000540, neigh=3.212011, align=3.766352, entropy=10.710340,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983905, edge=0.000484, neigh=2.983628, align=4.628371, entropy=9.797288,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981682, edge=0.000473, neigh=2.774765, align=4.916887, entropy=9.502469,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981538, edge=0.000465, neigh=2.750411, align=5.050286, entropy=9.368017,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981589, edge=0.000464, neigh=2.721137, align=5.137132, entropy=9.280861,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981450, edge=0.000462, neigh=2.736258, align=5.192785, entropy=9.225180,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980912, edge=0.000464, neigh=2.871399, align=5.190837, entropy=9.227127,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979959, edge=0.000465, neigh=3.017476, align=5.183616, entropy=9.234347,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979380, edge=0.000465, neigh=3.134249, align=5.181613, entropy=9.236319,s=1.000000, s_hat=1.000000
Time for optimization: 54.78s
Test results:
Top-1: 0.423
Top-10: 0.792
Top-30: 0.880
Top-50: 0.906
Top-100: 0.932
MRR: 0.543
Run 10/10
Time for edge perturbation: 0.136s
Time for attribute perturbation: 80.751s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 33.53s
Iter 0: wasserstein=1.159330, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991685, edge=0.000546, neigh=3.099174, align=3.635254, entropy=10.841365,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978385, edge=0.000496, neigh=2.834849, align=4.478103, entropy=9.947324,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976170, edge=0.000483, neigh=2.629926, align=4.779001, entropy=9.640746,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975769, edge=0.000472, neigh=2.665521, align=4.925598, entropy=9.492692,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975716, edge=0.000469, neigh=2.681851, align=5.028710, entropy=9.389277,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975407, edge=0.000465, neigh=2.722675, align=5.098593, entropy=9.319372,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974831, edge=0.000467, neigh=2.845959, align=5.100101, entropy=9.317863,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973903, edge=0.000468, neigh=2.958181, align=5.096638, entropy=9.321325,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973262, edge=0.000468, neigh=3.068870, align=5.095116, entropy=9.322701,s=1.000000, s_hat=1.000000
Time for optimization: 47.14s
Test results:
Top-1: 0.292
Top-10: 0.697
Top-30: 0.826
Top-50: 0.854
Top-100: 0.884
MRR: 0.425
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.088s
Time for attribute perturbation: 72.337s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 39.52s
Iter 0: wasserstein=1.156167, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990096, edge=0.000546, neigh=3.075169, align=3.612244, entropy=10.864445,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976871, edge=0.000496, neigh=2.822272, align=4.473430, entropy=9.952011,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974411, edge=0.000481, neigh=2.617276, align=4.788833, entropy=9.631494,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973851, edge=0.000470, neigh=2.643027, align=4.936053, entropy=9.482332,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973768, edge=0.000468, neigh=2.675215, align=5.032901, entropy=9.385091,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973327, edge=0.000470, neigh=2.794505, align=5.032202, entropy=9.385764,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972729, edge=0.000471, neigh=2.912411, align=5.025524, entropy=9.392440,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971911, edge=0.000472, neigh=3.017049, align=5.019859, entropy=9.398105,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971275, edge=0.000472, neigh=3.122411, align=5.016430, entropy=9.401342,s=1.000000, s_hat=1.000000
Time for optimization: 54.29s
Test results:
Top-1: 0.286
Top-10: 0.692
Top-30: 0.802
Top-50: 0.840
Top-100: 0.869
MRR: 0.416
Run 2/10
Time for edge perturbation: 0.147s
Time for attribute perturbation: 97.481s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.96s
Iter 0: wasserstein=1.173800, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.999904, edge=0.000539, neigh=3.220512, align=3.789172, entropy=10.687813,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.986070, edge=0.000482, neigh=2.998946, align=4.652992, entropy=9.772597,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.983829, edge=0.000471, neigh=2.774881, align=4.946948, entropy=9.472755,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.983690, edge=0.000463, neigh=2.767796, align=5.080328, entropy=9.338054,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.983588, edge=0.000462, neigh=2.743462, align=5.169387, entropy=9.248617,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.983386, edge=0.000460, neigh=2.761555, align=5.224146, entropy=9.193820,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.982857, edge=0.000462, neigh=2.899542, align=5.222743, entropy=9.195221,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.981982, edge=0.000463, neigh=3.037883, align=5.215300, entropy=9.202664,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.981375, edge=0.000463, neigh=3.151693, align=5.211833, entropy=9.206106,s=1.000000, s_hat=1.000000
Time for optimization: 53.40s
Test results:
Top-1: 0.473
Top-10: 0.829
Top-30: 0.908
Top-50: 0.930
Top-100: 0.951
MRR: 0.596
Run 3/10
Time for edge perturbation: 0.110s
Time for attribute perturbation: 50.277s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 26.64s
Iter 0: wasserstein=1.166358, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996434, edge=0.000541, neigh=3.152793, align=3.715301, entropy=10.760089,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983156, edge=0.000488, neigh=2.922925, align=4.580164, entropy=9.845311,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980933, edge=0.000476, neigh=2.739461, align=4.873707, entropy=9.545904,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980656, edge=0.000467, neigh=2.723926, align=5.010006, entropy=9.408308,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980493, edge=0.000465, neigh=2.724338, align=5.098572, entropy=9.319420,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979988, edge=0.000467, neigh=2.845159, align=5.101209, entropy=9.316756,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979433, edge=0.000469, neigh=2.973541, align=5.095421, entropy=9.322543,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978551, edge=0.000469, neigh=3.108239, align=5.089177, entropy=9.328787,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977939, edge=0.000470, neigh=3.225952, align=5.086105, entropy=9.331817,s=1.000000, s_hat=1.000000
Time for optimization: 43.31s
Test results:
Top-1: 0.409
Top-10: 0.783
Top-30: 0.866
Top-50: 0.894
Top-100: 0.928
MRR: 0.532
Run 4/10
Time for edge perturbation: 0.114s
Time for attribute perturbation: 96.589s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 34.70s
Iter 0: wasserstein=1.163004, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996250, edge=0.000544, neigh=3.091839, align=3.628151, entropy=10.847093,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983196, edge=0.000492, neigh=2.900606, align=4.496119, entropy=9.929215,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980613, edge=0.000478, neigh=2.671603, align=4.807479, entropy=9.612113,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980061, edge=0.000468, neigh=2.670717, align=4.962583, entropy=9.455712,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979689, edge=0.000465, neigh=2.679542, align=5.067771, entropy=9.350219,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979074, edge=0.000467, neigh=2.796103, align=5.071699, entropy=9.346267,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978407, edge=0.000469, neigh=2.927131, align=5.064856, entropy=9.353108,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977589, edge=0.000469, neigh=3.058908, align=5.059488, entropy=9.358476,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976959, edge=0.000470, neigh=3.174476, align=5.057287, entropy=9.360607,s=1.000000, s_hat=1.000000
Time for optimization: 52.71s
Test results:
Top-1: 0.371
Top-10: 0.741
Top-30: 0.827
Top-50: 0.859
Top-100: 0.905
MRR: 0.491
Run 5/10
Time for edge perturbation: 0.133s
Time for attribute perturbation: 65.971s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 17.71s
Iter 0: wasserstein=1.161783, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992815, edge=0.000545, neigh=3.103565, align=3.639070, entropy=10.837190,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979468, edge=0.000495, neigh=2.851173, align=4.493970, entropy=9.931115,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977113, edge=0.000481, neigh=2.664402, align=4.793785, entropy=9.625822,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976769, edge=0.000471, neigh=2.675446, align=4.936183, entropy=9.482096,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976615, edge=0.000468, neigh=2.690414, align=5.036076, entropy=9.381911,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976140, edge=0.000470, neigh=2.807763, align=5.041387, entropy=9.376578,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975591, edge=0.000471, neigh=2.920764, align=5.037637, entropy=9.380327,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974659, edge=0.000472, neigh=3.041704, align=5.032772, entropy=9.385192,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974020, edge=0.000472, neigh=3.157122, align=5.030886, entropy=9.386950,s=1.000000, s_hat=1.000000
Time for optimization: 29.24s
Test results:
Top-1: 0.332
Top-10: 0.733
Top-30: 0.840
Top-50: 0.865
Top-100: 0.903
MRR: 0.459
Run 6/10
Time for edge perturbation: 0.099s
Time for attribute perturbation: 31.889s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 25.67s
Iter 0: wasserstein=1.161522, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992482, edge=0.000544, neigh=3.116883, align=3.663087, entropy=10.812925,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979191, edge=0.000494, neigh=2.865600, align=4.521949, entropy=9.903427,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977050, edge=0.000480, neigh=2.685253, align=4.816251, entropy=9.603468,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976583, edge=0.000470, neigh=2.699488, align=4.955801, entropy=9.462478,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976414, edge=0.000468, neigh=2.711020, align=5.051553, entropy=9.366433,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976016, edge=0.000470, neigh=2.831701, align=5.058360, entropy=9.359606,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975420, edge=0.000471, neigh=2.944532, align=5.055156, entropy=9.362808,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974597, edge=0.000472, neigh=3.066445, align=5.049987, entropy=9.367977,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973947, edge=0.000472, neigh=3.173633, align=5.047518, entropy=9.370308,s=1.000000, s_hat=1.000000
Time for optimization: 53.53s
Test results:
Top-1: 0.343
Top-10: 0.731
Top-30: 0.836
Top-50: 0.867
Top-100: 0.906
MRR: 0.467
Run 7/10
Time for edge perturbation: 0.099s
Time for attribute perturbation: 91.307s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.50s
Iter 0: wasserstein=1.172035, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998966, edge=0.000540, neigh=3.219605, align=3.782366, entropy=10.694212,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.985226, edge=0.000483, neigh=2.996836, align=4.640940, entropy=9.784760,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982809, edge=0.000472, neigh=2.816378, align=4.938713, entropy=9.480720,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982534, edge=0.000465, neigh=2.780786, align=5.072977, entropy=9.345331,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982595, edge=0.000465, neigh=2.739580, align=5.151655, entropy=9.266338,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982516, edge=0.000463, neigh=2.754237, align=5.202401, entropy=9.215565,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.981915, edge=0.000464, neigh=2.884427, align=5.201001, entropy=9.216963,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.980962, edge=0.000464, neigh=3.026073, align=5.194869, entropy=9.223095,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980363, edge=0.000465, neigh=3.143963, align=5.192945, entropy=9.224989,s=1.000000, s_hat=1.000000
Time for optimization: 52.06s
Test results:
Top-1: 0.447
Top-10: 0.804
Top-30: 0.887
Top-50: 0.913
Top-100: 0.937
MRR: 0.569
Run 8/10
Time for edge perturbation: 0.162s
Time for attribute perturbation: 59.488s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 30.04s
Iter 0: wasserstein=1.162899, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994056, edge=0.000544, neigh=3.093850, align=3.646035, entropy=10.830392,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980701, edge=0.000493, neigh=2.870523, align=4.509863, entropy=9.915563,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978510, edge=0.000480, neigh=2.685182, align=4.810483, entropy=9.609123,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978053, edge=0.000471, neigh=2.681912, align=4.952564, entropy=9.465711,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977966, edge=0.000468, neigh=2.692415, align=5.045502, entropy=9.372484,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977575, edge=0.000470, neigh=2.812452, align=5.046941, entropy=9.371024,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977067, edge=0.000471, neigh=2.922295, align=5.040759, entropy=9.377205,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976208, edge=0.000472, neigh=3.042849, align=5.034777, entropy=9.383187,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975565, edge=0.000472, neigh=3.146290, align=5.031429, entropy=9.386425,s=1.000000, s_hat=1.000000
Time for optimization: 40.23s
Test results:
Top-1: 0.327
Top-10: 0.708
Top-30: 0.830
Top-50: 0.863
Top-100: 0.893
MRR: 0.453
Run 9/10
Time for edge perturbation: 0.110s
Time for attribute perturbation: 33.317s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.87s
Iter 0: wasserstein=1.161093, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992913, edge=0.000544, neigh=3.065501, align=3.635685, entropy=10.842362,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979157, edge=0.000490, neigh=2.856890, align=4.505975, entropy=9.919710,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976809, edge=0.000476, neigh=2.683300, align=4.820732, entropy=9.599291,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976338, edge=0.000467, neigh=2.684445, align=4.971402, entropy=9.447024,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976298, edge=0.000465, neigh=2.654393, align=5.063251, entropy=9.354759,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976119, edge=0.000463, neigh=2.684191, align=5.124848, entropy=9.293118,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975479, edge=0.000464, neigh=2.817721, align=5.126692, entropy=9.291272,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974624, edge=0.000465, neigh=2.929947, align=5.120986, entropy=9.296978,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973971, edge=0.000466, neigh=3.035540, align=5.116154, entropy=9.301754,s=1.000000, s_hat=1.000000
Time for optimization: 54.70s
Test results:
Top-1: 0.340
Top-10: 0.715
Top-30: 0.827
Top-50: 0.866
Top-100: 0.891
MRR: 0.465
Run 10/10
Time for edge perturbation: 0.119s
Time for attribute perturbation: 73.905s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 33.30s
Iter 0: wasserstein=1.170782, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.999670, edge=0.000540, neigh=3.139176, align=3.717804, entropy=10.758681,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.986003, edge=0.000484, neigh=2.944529, align=4.599218, entropy=9.826235,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.983446, edge=0.000472, neigh=2.765186, align=4.910036, entropy=9.509600,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.983167, edge=0.000465, neigh=2.715438, align=5.048176, entropy=9.370195,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.983078, edge=0.000464, neigh=2.689175, align=5.129588, entropy=9.288416,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.983016, edge=0.000463, neigh=2.723805, align=5.183613, entropy=9.234353,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.982411, edge=0.000464, neigh=2.884566, align=5.185021, entropy=9.232943,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.981461, edge=0.000464, neigh=3.020151, align=5.180899, entropy=9.237065,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980828, edge=0.000465, neigh=3.138718, align=5.178657, entropy=9.239281,s=1.000000, s_hat=1.000000
Time for optimization: 44.42s
Test results:
Top-1: 0.457
Top-10: 0.808
Top-30: 0.879
Top-50: 0.905
Top-100: 0.933
MRR: 0.578
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.132s
Time for attribute perturbation: 15.952s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 21.34s
Iter 0: wasserstein=1.159440, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992168, edge=0.000544, neigh=3.062987, align=3.622365, entropy=10.853830,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978970, edge=0.000495, neigh=2.821023, align=4.482158, entropy=9.943112,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976392, edge=0.000480, neigh=2.648596, align=4.789900, entropy=9.629590,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975911, edge=0.000471, neigh=2.649920, align=4.937213, entropy=9.481022,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975672, edge=0.000468, neigh=2.670030, align=5.040625, entropy=9.377358,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975174, edge=0.000470, neigh=2.800930, align=5.041263, entropy=9.376702,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974586, edge=0.000472, neigh=2.925692, align=5.035154, entropy=9.382810,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973744, edge=0.000473, neigh=3.031954, align=5.028616, entropy=9.389347,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973108, edge=0.000473, neigh=3.142322, align=5.023950, entropy=9.393943,s=1.000000, s_hat=1.000000
Time for optimization: 29.89s
Test results:
Top-1: 0.306
Top-10: 0.704
Top-30: 0.808
Top-50: 0.837
Top-100: 0.875
MRR: 0.435
Run 2/10
Time for edge perturbation: 0.092s
Time for attribute perturbation: 6.564s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 19.09s
Iter 0: wasserstein=1.162927, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993857, edge=0.000543, neigh=3.098965, align=3.657369, entropy=10.820618,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980282, edge=0.000490, neigh=2.876947, align=4.526526, entropy=9.899105,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977931, edge=0.000477, neigh=2.702251, align=4.832985, entropy=9.587266,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977472, edge=0.000468, neigh=2.694476, align=4.985400, entropy=9.433051,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977192, edge=0.000465, neigh=2.676229, align=5.085009, entropy=9.333005,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976939, edge=0.000463, neigh=2.707280, align=5.155929, entropy=9.262038,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976340, edge=0.000465, neigh=2.860642, align=5.156484, entropy=9.261480,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975399, edge=0.000465, neigh=2.990469, align=5.149944, entropy=9.268020,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974751, edge=0.000466, neigh=3.109695, align=5.146896, entropy=9.270975,s=1.000000, s_hat=1.000000
Time for optimization: 37.44s
Test results:
Top-1: 0.359
Top-10: 0.758
Top-30: 0.867
Top-50: 0.892
Top-100: 0.924
MRR: 0.492
Run 3/10
Time for edge perturbation: 0.056s
Time for attribute perturbation: 64.551s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 29.50s
Iter 0: wasserstein=1.165974, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995978, edge=0.000541, neigh=3.131806, align=3.702652, entropy=10.773265,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982264, edge=0.000484, neigh=2.914024, align=4.579747, entropy=9.845559,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979712, edge=0.000470, neigh=2.741917, align=4.893210, entropy=9.526198,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979340, edge=0.000464, neigh=2.721168, align=5.039906, entropy=9.378433,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979355, edge=0.000462, neigh=2.703098, align=5.124751, entropy=9.293248,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979167, edge=0.000461, neigh=2.728558, align=5.179123, entropy=9.238843,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978561, edge=0.000463, neigh=2.865509, align=5.180871, entropy=9.237093,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977657, edge=0.000463, neigh=2.988522, align=5.176599, entropy=9.241365,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977090, edge=0.000464, neigh=3.100996, align=5.173656, entropy=9.244278,s=1.000000, s_hat=1.000000
Time for optimization: 44.11s
Test results:
Top-1: 0.411
Top-10: 0.760
Top-30: 0.846
Top-50: 0.867
Top-100: 0.898
MRR: 0.530
Run 4/10
Time for edge perturbation: 0.121s
Time for attribute perturbation: 78.886s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 32.39s
Iter 0: wasserstein=1.160553, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992072, edge=0.000545, neigh=3.091266, align=3.639775, entropy=10.836255,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978847, edge=0.000495, neigh=2.829373, align=4.497112, entropy=9.928156,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976625, edge=0.000481, neigh=2.640673, align=4.797497, entropy=9.623076,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976156, edge=0.000471, neigh=2.679213, align=4.942475, entropy=9.475859,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975993, edge=0.000468, neigh=2.696554, align=5.042026, entropy=9.375962,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975489, edge=0.000470, neigh=2.810097, align=5.048117, entropy=9.369848,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974897, edge=0.000471, neigh=2.923396, align=5.044269, entropy=9.373695,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973992, edge=0.000472, neigh=3.040720, align=5.038925, entropy=9.379039,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973374, edge=0.000472, neigh=3.154143, align=5.036486, entropy=9.381385,s=1.000000, s_hat=1.000000
Time for optimization: 39.91s
Test results:
Top-1: 0.335
Top-10: 0.726
Top-30: 0.831
Top-50: 0.856
Top-100: 0.888
MRR: 0.461
Run 5/10
Time for edge perturbation: 0.103s
Time for attribute perturbation: 22.828s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.09s
Iter 0: wasserstein=1.167383, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997793, edge=0.000542, neigh=3.146871, align=3.692251, entropy=10.783881,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984394, edge=0.000488, neigh=2.913183, align=4.555295, entropy=9.870286,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981868, edge=0.000476, neigh=2.713247, align=4.863139, entropy=9.557047,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981397, edge=0.000467, neigh=2.723279, align=5.000632, entropy=9.417636,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981311, edge=0.000465, neigh=2.713817, align=5.094815, entropy=9.323174,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981059, edge=0.000463, neigh=2.751270, align=5.158223, entropy=9.259742,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980518, edge=0.000464, neigh=2.877364, align=5.160124, entropy=9.257840,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979666, edge=0.000465, neigh=3.010521, align=5.155452, entropy=9.262512,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979033, edge=0.000465, neigh=3.126631, align=5.152493, entropy=9.265431,s=1.000000, s_hat=1.000000
Time for optimization: 52.60s
Test results:
Top-1: 0.390
Top-10: 0.760
Top-30: 0.859
Top-50: 0.884
Top-100: 0.921
MRR: 0.517
Run 6/10
Time for edge perturbation: 0.084s
Time for attribute perturbation: 94.705s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.40s
Iter 0: wasserstein=1.158240, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991360, edge=0.000545, neigh=3.049493, align=3.594225, entropy=10.882612,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978092, edge=0.000494, neigh=2.815207, align=4.457706, entropy=9.967753,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975369, edge=0.000480, neigh=2.631214, align=4.776210, entropy=9.643397,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974686, edge=0.000470, neigh=2.655582, align=4.930003, entropy=9.488239,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974520, edge=0.000467, neigh=2.676751, align=5.031670, entropy=9.386313,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974012, edge=0.000469, neigh=2.798345, align=5.033333, entropy=9.384632,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973405, edge=0.000470, neigh=2.923912, align=5.026931, entropy=9.391033,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972591, edge=0.000471, neigh=3.035906, align=5.020319, entropy=9.397645,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971910, edge=0.000472, neigh=3.149684, align=5.015665, entropy=9.402194,s=1.000000, s_hat=1.000000
Time for optimization: 52.83s
Test results:
Top-1: 0.311
Top-10: 0.703
Top-30: 0.810
Top-50: 0.842
Top-100: 0.883
MRR: 0.439
Run 7/10
Time for edge perturbation: 0.172s
Time for attribute perturbation: 69.561s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 29.91s
Iter 0: wasserstein=1.161153, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994037, edge=0.000545, neigh=3.101198, align=3.641166, entropy=10.834035,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981017, edge=0.000494, neigh=2.884737, align=4.507868, entropy=9.917339,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978454, edge=0.000479, neigh=2.652178, align=4.821102, entropy=9.598658,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977930, edge=0.000468, neigh=2.679099, align=4.970066, entropy=9.448235,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977707, edge=0.000465, neigh=2.693977, align=5.070842, entropy=9.347146,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977152, edge=0.000467, neigh=2.808076, align=5.074670, entropy=9.343295,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976536, edge=0.000468, neigh=2.929403, align=5.069754, entropy=9.348210,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975711, edge=0.000469, neigh=3.055274, align=5.063536, entropy=9.354428,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975103, edge=0.000469, neigh=3.169159, align=5.060354, entropy=9.357524,s=1.000000, s_hat=1.000000
Time for optimization: 45.68s
Test results:
Top-1: 0.358
Top-10: 0.735
Top-30: 0.823
Top-50: 0.853
Top-100: 0.887
MRR: 0.484
Run 8/10
Time for edge perturbation: 0.116s
Time for attribute perturbation: 22.552s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.12s
Iter 0: wasserstein=1.178259, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=1.001564, edge=0.000538, neigh=3.259464, align=3.849913, entropy=10.627088,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.987632, edge=0.000480, neigh=3.051059, align=4.708490, entropy=9.717092,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.985301, edge=0.000470, neigh=2.865538, align=4.993672, entropy=9.425705,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.985084, edge=0.000464, neigh=2.787645, align=5.117953, entropy=9.300362,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.985035, edge=0.000463, neigh=2.788212, align=5.190760, entropy=9.227234,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.984998, edge=0.000461, neigh=2.785387, align=5.233714, entropy=9.184251,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.984459, edge=0.000463, neigh=2.923443, align=5.233038, entropy=9.184926,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.983643, edge=0.000463, neigh=3.059113, align=5.226119, entropy=9.191845,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.983008, edge=0.000464, neigh=3.169874, align=5.222485, entropy=9.195459,s=1.000000, s_hat=1.000000
Time for optimization: 51.44s
Test results:
Top-1: 0.515
Top-10: 0.839
Top-30: 0.909
Top-50: 0.935
Top-100: 0.949
MRR: 0.631
Run 9/10
Time for edge perturbation: 0.168s
Time for attribute perturbation: 88.690s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 40.41s
Iter 0: wasserstein=1.167374, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998362, edge=0.000541, neigh=3.147650, align=3.695346, entropy=10.780826,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984736, edge=0.000486, neigh=2.943147, align=4.567774, entropy=9.857614,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982291, edge=0.000473, neigh=2.713510, align=4.873343, entropy=9.546242,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981980, edge=0.000465, neigh=2.705411, align=5.025404, entropy=9.392939,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981810, edge=0.000463, neigh=2.697742, align=5.120135, entropy=9.297862,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981479, edge=0.000461, neigh=2.717643, align=5.183218, entropy=9.234747,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980817, edge=0.000463, neigh=2.850922, align=5.184280, entropy=9.233684,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979889, edge=0.000463, neigh=2.972697, align=5.180678, entropy=9.237286,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979303, edge=0.000464, neigh=3.078377, align=5.178899, entropy=9.239033,s=1.000000, s_hat=1.000000
Time for optimization: 52.75s
Test results:
Top-1: 0.427
Top-10: 0.789
Top-30: 0.877
Top-50: 0.903
Top-100: 0.930
MRR: 0.548
Run 10/10
Time for edge perturbation: 0.143s
Time for attribute perturbation: 59.887s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 33.66s
Iter 0: wasserstein=1.160285, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991882, edge=0.000543, neigh=3.098630, align=3.662644, entropy=10.814391,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978259, edge=0.000491, neigh=2.867253, align=4.523206, entropy=9.902454,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975836, edge=0.000477, neigh=2.700124, align=4.831890, entropy=9.587680,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975315, edge=0.000468, neigh=2.703182, align=4.988131, entropy=9.430137,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975382, edge=0.000466, neigh=2.672298, align=5.079816, entropy=9.338171,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975289, edge=0.000464, neigh=2.703242, align=5.141357, entropy=9.276609,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974588, edge=0.000466, neigh=2.829923, align=5.142031, entropy=9.275933,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973536, edge=0.000466, neigh=2.954063, align=5.137059, entropy=9.280905,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972886, edge=0.000467, neigh=3.063728, align=5.134037, entropy=9.283804,s=1.000000, s_hat=1.000000
Time for optimization: 36.34s
Test results:
Top-1: 0.340
Top-10: 0.746
Top-30: 0.839
Top-50: 0.872
Top-100: 0.907
MRR: 0.474
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.073s
Time for attribute perturbation: 7.357s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 10.31s
Iter 0: wasserstein=1.159523, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992148, edge=0.000544, neigh=3.099806, align=3.631917, entropy=10.844815,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978722, edge=0.000495, neigh=2.849094, align=4.496574, entropy=9.928860,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976606, edge=0.000481, neigh=2.653546, align=4.798664, entropy=9.621971,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976138, edge=0.000471, neigh=2.685714, align=4.941293, entropy=9.477056,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975954, edge=0.000468, neigh=2.697668, align=5.043422, entropy=9.374567,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975543, edge=0.000470, neigh=2.815597, align=5.050168, entropy=9.367797,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974952, edge=0.000471, neigh=2.928147, align=5.045304, entropy=9.372660,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974136, edge=0.000472, neigh=3.050382, align=5.039273, entropy=9.378691,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973506, edge=0.000472, neigh=3.158328, align=5.036321, entropy=9.381513,s=1.000000, s_hat=1.000000
Time for optimization: 22.17s
Test results:
Top-1: 0.303
Top-10: 0.703
Top-30: 0.825
Top-50: 0.859
Top-100: 0.893
MRR: 0.430
Run 2/10
Time for edge perturbation: 0.078s
Time for attribute perturbation: 7.471s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.62s
Iter 0: wasserstein=1.162192, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994369, edge=0.000542, neigh=3.102178, align=3.675367, entropy=10.799502,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981403, edge=0.000490, neigh=2.880778, align=4.546839, entropy=9.878407,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978687, edge=0.000476, neigh=2.701349, align=4.854901, entropy=9.564445,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978204, edge=0.000467, neigh=2.693302, align=4.999714, entropy=9.418543,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978087, edge=0.000464, neigh=2.704135, align=5.091814, entropy=9.326172,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977542, edge=0.000466, neigh=2.825414, align=5.093084, entropy=9.324882,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976957, edge=0.000468, neigh=2.950943, align=5.088390, entropy=9.329574,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976098, edge=0.000468, neigh=3.079899, align=5.083086, entropy=9.334878,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975506, edge=0.000469, neigh=3.184918, align=5.081092, entropy=9.336817,s=1.000000, s_hat=1.000000
Time for optimization: 50.55s
Test results:
Top-1: 0.385
Top-10: 0.744
Top-30: 0.837
Top-50: 0.860
Top-100: 0.897
MRR: 0.508
Run 3/10
Time for edge perturbation: 0.088s
Time for attribute perturbation: 91.104s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 39.21s
Iter 0: wasserstein=1.172078, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998604, edge=0.000539, neigh=3.205640, align=3.786026, entropy=10.690635,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984696, edge=0.000483, neigh=2.991468, align=4.636180, entropy=9.789258,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982471, edge=0.000473, neigh=2.765375, align=4.922208, entropy=9.497022,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982316, edge=0.000466, neigh=2.758547, align=5.058434, entropy=9.359829,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982254, edge=0.000463, neigh=2.739435, align=5.145163, entropy=9.272826,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982058, edge=0.000462, neigh=2.745107, align=5.204605, entropy=9.213360,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.981517, edge=0.000463, neigh=2.888945, align=5.202767, entropy=9.215197,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.980582, edge=0.000464, neigh=3.031710, align=5.195720, entropy=9.222244,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980012, edge=0.000464, neigh=3.148821, align=5.192499, entropy=9.225445,s=1.000000, s_hat=1.000000
Time for optimization: 53.03s
Test results:
Top-1: 0.464
Top-10: 0.813
Top-30: 0.887
Top-50: 0.912
Top-100: 0.935
MRR: 0.583
Run 4/10
Time for edge perturbation: 0.163s
Time for attribute perturbation: 81.994s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 29.91s
Iter 0: wasserstein=1.166873, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996624, edge=0.000543, neigh=3.126915, align=3.690894, entropy=10.784378,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983347, edge=0.000488, neigh=2.933190, align=4.567238, entropy=9.858065,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980977, edge=0.000476, neigh=2.722262, align=4.874712, entropy=9.545325,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980564, edge=0.000467, neigh=2.711104, align=5.007566, entropy=9.410690,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980421, edge=0.000465, neigh=2.705552, align=5.097516, entropy=9.320472,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979947, edge=0.000467, neigh=2.830540, align=5.100415, entropy=9.317550,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979425, edge=0.000469, neigh=2.960736, align=5.094196, entropy=9.323768,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978637, edge=0.000469, neigh=3.087862, align=5.087479, entropy=9.330485,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978000, edge=0.000470, neigh=3.207072, align=5.083288, entropy=9.334626,s=1.000000, s_hat=1.000000
Time for optimization: 42.22s
Test results:
Top-1: 0.403
Top-10: 0.739
Top-30: 0.830
Top-50: 0.860
Top-100: 0.895
MRR: 0.520
Run 5/10
Time for edge perturbation: 0.108s
Time for attribute perturbation: 47.989s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.16s
Iter 0: wasserstein=1.160202, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991868, edge=0.000545, neigh=3.088654, align=3.641558, entropy=10.834565,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978510, edge=0.000495, neigh=2.846658, align=4.491421, entropy=9.933805,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976244, edge=0.000481, neigh=2.661841, align=4.797634, entropy=9.621934,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975730, edge=0.000471, neigh=2.679979, align=4.942043, entropy=9.476226,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975628, edge=0.000468, neigh=2.692174, align=5.040586, entropy=9.377400,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975512, edge=0.000465, neigh=2.729799, align=5.106058, entropy=9.311908,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974911, edge=0.000467, neigh=2.853625, align=5.107528, entropy=9.310436,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974013, edge=0.000467, neigh=2.969740, align=5.104393, entropy=9.313571,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973357, edge=0.000468, neigh=3.073620, align=5.101908, entropy=9.315893,s=1.000000, s_hat=1.000000
Time for optimization: 52.15s
Test results:
Top-1: 0.316
Top-10: 0.720
Top-30: 0.823
Top-50: 0.855
Top-100: 0.894
MRR: 0.447
Run 6/10
Time for edge perturbation: 0.097s
Time for attribute perturbation: 98.041s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.59s
Iter 0: wasserstein=1.160491, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991586, edge=0.000543, neigh=3.094649, align=3.653166, entropy=10.824621,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977783, edge=0.000490, neigh=2.880788, align=4.523845, entropy=9.901612,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975352, edge=0.000476, neigh=2.712334, align=4.838491, entropy=9.581638,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974971, edge=0.000467, neigh=2.697374, align=4.988231, entropy=9.430189,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974867, edge=0.000465, neigh=2.667674, align=5.078415, entropy=9.339590,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974804, edge=0.000464, neigh=2.697021, align=5.142622, entropy=9.275344,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974157, edge=0.000465, neigh=2.851139, align=5.145481, entropy=9.272483,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973194, edge=0.000466, neigh=2.982110, align=5.140542, entropy=9.277422,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972499, edge=0.000466, neigh=3.105097, align=5.137485, entropy=9.280347,s=1.000000, s_hat=1.000000
Time for optimization: 52.24s
Test results:
Top-1: 0.360
Top-10: 0.742
Top-30: 0.846
Top-50: 0.873
Top-100: 0.903
MRR: 0.486
Run 7/10
Time for edge perturbation: 0.111s
Time for attribute perturbation: 85.757s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.72s
Iter 0: wasserstein=1.159095, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992109, edge=0.000545, neigh=3.068284, align=3.614820, entropy=10.861537,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979165, edge=0.000495, neigh=2.837092, align=4.481509, entropy=9.943823,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976665, edge=0.000480, neigh=2.642699, align=4.798132, entropy=9.622293,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976074, edge=0.000470, neigh=2.657925, align=4.946076, entropy=9.472249,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975790, edge=0.000467, neigh=2.669500, align=5.047240, entropy=9.370747,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975331, edge=0.000470, neigh=2.798353, align=5.047512, entropy=9.370453,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974778, edge=0.000471, neigh=2.923694, align=5.039452, entropy=9.378512,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973937, edge=0.000472, neigh=3.031386, align=5.032108, entropy=9.385856,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973310, edge=0.000472, neigh=3.139808, align=5.027727, entropy=9.390088,s=1.000000, s_hat=1.000000
Time for optimization: 51.78s
Test results:
Top-1: 0.307
Top-10: 0.714
Top-30: 0.818
Top-50: 0.847
Top-100: 0.891
MRR: 0.439
Run 8/10
Time for edge perturbation: 0.122s
Time for attribute perturbation: 114.897s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 41.17s
Iter 0: wasserstein=1.173059, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998511, edge=0.000540, neigh=3.210858, align=3.793967, entropy=10.682781,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984702, edge=0.000483, neigh=2.998671, align=4.647991, entropy=9.777512,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982414, edge=0.000472, neigh=2.790983, align=4.939858, entropy=9.479397,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982167, edge=0.000466, neigh=2.773001, align=5.069939, entropy=9.348332,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982288, edge=0.000464, neigh=2.732444, align=5.151286, entropy=9.266703,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982169, edge=0.000462, neigh=2.768182, align=5.201847, entropy=9.216118,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.981643, edge=0.000463, neigh=2.913843, align=5.201004, entropy=9.216960,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.980746, edge=0.000464, neigh=3.054116, align=5.193680, entropy=9.224284,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980169, edge=0.000465, neigh=3.169616, align=5.189612, entropy=9.228335,s=1.000000, s_hat=1.000000
Time for optimization: 52.84s
Test results:
Top-1: 0.458
Top-10: 0.813
Top-30: 0.880
Top-50: 0.899
Top-100: 0.924
MRR: 0.581
Run 9/10
Time for edge perturbation: 0.135s
Time for attribute perturbation: 90.091s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.86s
Iter 0: wasserstein=1.172358, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.999213, edge=0.000539, neigh=3.191066, align=3.774252, entropy=10.702766,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.985415, edge=0.000482, neigh=2.973816, align=4.635385, entropy=9.790217,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.983108, edge=0.000471, neigh=2.769064, align=4.932278, entropy=9.487333,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982855, edge=0.000463, neigh=2.762730, align=5.068270, entropy=9.350085,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982890, edge=0.000462, neigh=2.731754, align=5.149284, entropy=9.268717,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982725, edge=0.000460, neigh=2.751459, align=5.200635, entropy=9.217331,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.982172, edge=0.000462, neigh=2.893418, align=5.201390, entropy=9.216574,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.981311, edge=0.000463, neigh=3.026438, align=5.195624, entropy=9.222340,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980718, edge=0.000463, neigh=3.137822, align=5.192655, entropy=9.225279,s=1.000000, s_hat=1.000000
Time for optimization: 53.25s
Test results:
Top-1: 0.442
Top-10: 0.804
Top-30: 0.892
Top-50: 0.917
Top-100: 0.935
MRR: 0.566
Run 10/10
Time for edge perturbation: 0.100s
Time for attribute perturbation: 16.394s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 30.15s
Iter 0: wasserstein=1.161017, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994648, edge=0.000543, neigh=3.098648, align=3.644044, entropy=10.831082,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981623, edge=0.000493, neigh=2.859030, align=4.513553, entropy=9.911624,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978998, edge=0.000478, neigh=2.666493, align=4.820121, entropy=9.599171,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978567, edge=0.000469, neigh=2.653891, align=4.968941, entropy=9.449267,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978251, edge=0.000465, neigh=2.679096, align=5.068905, entropy=9.349080,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977649, edge=0.000467, neigh=2.804495, align=5.071616, entropy=9.346349,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976987, edge=0.000469, neigh=2.930091, align=5.066542, entropy=9.351422,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976180, edge=0.000470, neigh=3.059670, align=5.062091, entropy=9.355873,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975574, edge=0.000470, neigh=3.169259, align=5.060241, entropy=9.357646,s=1.000000, s_hat=1.000000
Time for optimization: 43.28s
Test results:
Top-1: 0.353
Top-10: 0.733
Top-30: 0.826
Top-50: 0.854
Top-100: 0.895
MRR: 0.481
