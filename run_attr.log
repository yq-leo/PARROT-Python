nohup: ignoring input
Loading datasets/cora.mat...
Run 1/1
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.064s
Time for attribute perturbation: 0.027s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 16.41it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:04, 20.00it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:05, 18.31it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:04, 21.03it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:04, 19.06it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:04, 19.84it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:04, 20.02it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:03, 20.47it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:03, 21.32it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:03, 21.78it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:03, 19.86it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:06,  7.88it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:06,  7.59it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  7.79it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:07,  5.97it/s]
Time for cost matrix: 3.18s
Iter 0: wasserstein=1.418259, edge=0.017033, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.612121, edge=0.016261, neigh=2.304153, align=4.299660, entropy=8.509909,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.571554, edge=0.016164, neigh=2.463545, align=4.708391, entropy=7.950091,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.569515, edge=0.016165, neigh=2.531291, align=4.736318, entropy=7.914471,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.569381, edge=0.016154, neigh=2.586796, align=4.738366, entropy=7.911967,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.569358, edge=0.016148, neigh=2.626565, align=4.738638, entropy=7.911623,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.569348, edge=0.016145, neigh=2.649164, align=4.738740, entropy=7.911481,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.569341, edge=0.016143, neigh=2.658733, align=4.738802, entropy=7.911388,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.569337, edge=0.016142, neigh=2.661147, align=4.738846, entropy=7.911319,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.569333, edge=0.016141, neigh=2.661930, align=4.738879, entropy=7.911265,s=1.000000, s_hat=1.000000
Time for optimization: 10.62s
Test results:
Top-1: 0.996
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.998
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.015s
Time for attribute perturbation: 0.005s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:04, 22.46it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 24.48it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 25.00it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 25.44it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 25.36it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 25.67it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:03, 25.53it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 25.76it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:02, 25.65it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 24.59it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  9.70it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  9.22it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  9.10it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  6.82it/s]
Time for cost matrix: 2.43s
Iter 0: wasserstein=1.415950, edge=0.003758, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.849398, edge=0.003278, neigh=2.327235, align=4.142107, entropy=8.711523,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.817029, edge=0.003321, neigh=2.356438, align=4.631293, entropy=8.040571,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.815062, edge=0.003321, neigh=2.361201, align=4.674918, entropy=7.983733,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.814875, edge=0.003324, neigh=2.363271, align=4.683505, entropy=7.972895,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.814814, edge=0.003329, neigh=2.372606, align=4.689737, entropy=7.965636,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.814780, edge=0.003335, neigh=2.381061, align=4.693138, entropy=7.961644,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.814749, edge=0.003338, neigh=2.387286, align=4.695484, entropy=7.958853,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.814721, edge=0.003339, neigh=2.392010, align=4.697273, entropy=7.956705,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.814695, edge=0.003340, neigh=2.395766, align=4.698708, entropy=7.954972,s=1.000000, s_hat=1.000000
Time for optimization: 9.87s
Test results:
Top-1: 0.995
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.997
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.020s
Time for attribute perturbation: 0.013s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 26.44it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 26.81it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 26.95it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 26.91it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 26.86it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 26.93it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:02, 26.91it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:03, 22.09it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:03, 23.36it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 24.30it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04,  9.83it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:04,  9.62it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  7.20it/s]
Time for cost matrix: 2.42s
Iter 0: wasserstein=1.419510, edge=0.003755, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.847493, edge=0.003280, neigh=2.341945, align=4.157649, entropy=8.689577,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.815138, edge=0.003321, neigh=2.380170, align=4.645478, entropy=8.022916,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.813241, edge=0.003336, neigh=2.391607, align=4.690088, entropy=7.966311,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.813068, edge=0.003338, neigh=2.404115, align=4.698069, entropy=7.956754,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.813008, edge=0.003339, neigh=2.413062, align=4.702288, entropy=7.951889,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.812964, edge=0.003340, neigh=2.419261, align=4.705296, entropy=7.948445,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.812928, edge=0.003340, neigh=2.423873, align=4.707555, entropy=7.945850,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.812899, edge=0.003340, neigh=2.427508, align=4.709309, entropy=7.943826,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.812875, edge=0.003339, neigh=2.430482, align=4.710709, entropy=7.942203,s=1.000000, s_hat=1.000000
Time for optimization: 10.53s
Test results:
Top-1: 0.996
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.998
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.016s
Time for attribute perturbation: 0.006s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 25.99it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 26.72it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 26.97it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 26.96it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 27.00it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 26.98it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:02, 26.97it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 26.91it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:02, 26.99it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 26.01it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  9.73it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  9.29it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  9.15it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  6.90it/s]
Time for cost matrix: 2.49s
Iter 0: wasserstein=1.423050, edge=0.003754, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.847097, edge=0.003307, neigh=2.340759, align=4.167229, entropy=8.682110,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.814450, edge=0.003359, neigh=2.383889, align=4.643462, entropy=8.025670,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.812434, edge=0.003356, neigh=2.394689, align=4.687392, entropy=7.969269,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.812237, edge=0.003351, neigh=2.407279, align=4.695509, entropy=7.959490,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.812167, edge=0.003348, neigh=2.415853, align=4.699519, entropy=7.954821,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.812117, edge=0.003347, neigh=2.421446, align=4.702232, entropy=7.951670,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.812077, edge=0.003346, neigh=2.425501, align=4.704250, entropy=7.949316,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.812044, edge=0.003345, neigh=2.428718, align=4.705828, entropy=7.947464,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.812016, edge=0.003344, neigh=2.431399, align=4.707104, entropy=7.945960,s=1.000000, s_hat=1.000000
Time for optimization: 9.95s
Test results:
Top-1: 0.993
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.996
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.022s
Time for attribute perturbation: 0.005s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 25.68it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 26.50it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 26.67it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 26.81it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 26.82it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 26.86it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:03, 23.51it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:03, 24.45it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:02, 25.13it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 24.81it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  9.70it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  9.30it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  9.16it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  6.90it/s]
Time for cost matrix: 2.55s
Iter 0: wasserstein=1.422961, edge=0.003752, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.845919, edge=0.003354, neigh=2.338624, align=4.168681, entropy=8.677892,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.813219, edge=0.003362, neigh=2.384309, align=4.649369, entropy=8.018538,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.811261, edge=0.003361, neigh=2.395269, align=4.692090, entropy=7.963614,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.811050, edge=0.003346, neigh=2.404934, align=4.699959, entropy=7.954216,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.810975, edge=0.003339, neigh=2.410712, align=4.703566, entropy=7.950030,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.810931, edge=0.003337, neigh=2.414475, align=4.705824, entropy=7.947406,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.810901, edge=0.003337, neigh=2.417326, align=4.707424, entropy=7.945532,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.810879, edge=0.003336, neigh=2.419725, align=4.708659, entropy=7.944080,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.810860, edge=0.003336, neigh=2.421858, align=4.709666, entropy=7.942892,s=1.000000, s_hat=1.000000
Time for optimization: 10.76s
Test results:
Top-1: 0.994
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.997
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.016s
Time for attribute perturbation: 0.006s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 25.24it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 26.22it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 26.44it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 26.54it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 26.48it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 26.59it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:02, 26.68it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 26.58it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:02, 26.64it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 25.66it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  9.30it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  8.91it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  8.74it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:07,  6.57it/s]
Time for cost matrix: 2.55s
Iter 0: wasserstein=1.416180, edge=0.003761, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.852332, edge=0.003268, neigh=2.342648, align=4.128219, entropy=8.730026,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.819938, edge=0.003322, neigh=2.356083, align=4.623046, entropy=8.049015,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.817926, edge=0.003333, neigh=2.365427, align=4.668746, entropy=7.989595,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.817754, edge=0.003339, neigh=2.379255, align=4.677017, entropy=7.979493,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.817697, edge=0.003341, neigh=2.388632, align=4.681205, entropy=7.974517,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.817655, edge=0.003342, neigh=2.394887, align=4.684049, entropy=7.971120,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.817622, edge=0.003343, neigh=2.399465, align=4.686149, entropy=7.968586,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.817596, edge=0.003343, neigh=2.403107, align=4.687765, entropy=7.966614,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.817575, edge=0.003344, neigh=2.406181, align=4.689048, entropy=7.965030,s=1.000000, s_hat=1.000000
Time for optimization: 11.32s
Test results:
Top-1: 0.993
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.996
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.012s
Time for attribute perturbation: 0.004s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 26.55it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 27.55it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 27.87it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 27.90it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 28.00it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:02, 28.01it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:02, 28.01it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 28.13it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:00<00:02, 28.10it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 27.05it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:04,  9.93it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  9.38it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  9.20it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  6.93it/s]
Time for cost matrix: 2.44s
Iter 0: wasserstein=1.418181, edge=0.003757, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.850501, edge=0.003362, neigh=2.353049, align=4.146693, entropy=8.709277,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.817950, edge=0.003372, neigh=2.384382, align=4.630655, entropy=8.040660,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.815955, edge=0.003366, neigh=2.394663, align=4.676922, entropy=7.981271,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.815771, edge=0.003362, neigh=2.409853, align=4.685741, entropy=7.970662,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.815697, edge=0.003359, neigh=2.419746, align=4.690202, entropy=7.965401,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.815643, edge=0.003357, neigh=2.426153, align=4.693210, entropy=7.961840,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.815601, edge=0.003355, neigh=2.430729, align=4.695428, entropy=7.959194,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.815566, edge=0.003353, neigh=2.434297, align=4.697154, entropy=7.957121,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.815537, edge=0.003352, neigh=2.437215, align=4.698548, entropy=7.955438,s=1.000000, s_hat=1.000000
Time for optimization: 10.87s
Test results:
Top-1: 0.992
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.995
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.032s
Time for attribute perturbation: 0.036s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:04, 19.95it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:04, 22.20it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:04, 19.54it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:04, 19.20it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:04, 18.79it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:04, 20.49it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 21.52it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:03, 20.18it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:03, 20.31it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:03, 20.46it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:03, 19.97it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.93it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:06,  7.20it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:07,  6.32it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.62it/s]
Time for cost matrix: 3.46s
Iter 0: wasserstein=1.415210, edge=0.003760, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.851023, edge=0.003297, neigh=2.339337, align=4.128403, entropy=8.729503,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.818557, edge=0.003350, neigh=2.357282, align=4.622336, entropy=8.049449,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.816548, edge=0.003351, neigh=2.367099, align=4.670165, entropy=7.988291,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.816385, edge=0.003353, neigh=2.382776, align=4.679587, entropy=7.977157,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.816328, edge=0.003353, neigh=2.392824, align=4.684242, entropy=7.971765,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.816286, edge=0.003353, neigh=2.399514, align=4.687334, entropy=7.968146,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.816249, edge=0.003352, neigh=2.404494, align=4.689638, entropy=7.965414,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.816218, edge=0.003352, neigh=2.408475, align=4.691465, entropy=7.963227,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.816190, edge=0.003351, neigh=2.411796, align=4.692969, entropy=7.961414,s=1.000000, s_hat=1.000000
Time for optimization: 12.44s
Test results:
Top-1: 0.994
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.997
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.017s
Time for attribute perturbation: 0.016s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 25.83it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 26.62it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 26.99it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 26.69it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 25.73it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 25.62it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:03, 25.54it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 25.76it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:02, 25.90it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 25.15it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.62it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  8.20it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  8.02it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:07,  6.05it/s]
Time for cost matrix: 2.43s
Iter 0: wasserstein=1.423095, edge=0.003753, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.846504, edge=0.003315, neigh=2.349198, align=4.161832, entropy=8.682158,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.814165, edge=0.003343, neigh=2.385267, align=4.643271, entropy=8.024442,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.812297, edge=0.003357, neigh=2.394355, align=4.685569, entropy=7.970327,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.812113, edge=0.003350, neigh=2.406176, align=4.693733, entropy=7.960708,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.812048, edge=0.003346, neigh=2.413799, align=4.697722, entropy=7.956112,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.812006, edge=0.003345, neigh=2.419010, align=4.700368, entropy=7.953048,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.811973, edge=0.003343, neigh=2.422960, align=4.702328, entropy=7.950767,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.811946, edge=0.003342, neigh=2.426139, align=4.703863, entropy=7.948974,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.811923, edge=0.003342, neigh=2.428794, align=4.705105, entropy=7.947520,s=1.000000, s_hat=1.000000
Time for optimization: 11.46s
Test results:
Top-1: 0.994
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.996
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.018s
Time for attribute perturbation: 0.009s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 24.67it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 25.83it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 25.76it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 25.71it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 25.78it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 25.80it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:03, 25.68it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:03, 25.23it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:03, 22.76it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 23.75it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.55it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  8.01it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  7.88it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:07,  5.96it/s]
Time for cost matrix: 2.52s
Iter 0: wasserstein=1.423768, edge=0.003754, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.847691, edge=0.003343, neigh=2.338361, align=4.170068, entropy=8.680568,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.815056, edge=0.003383, neigh=2.384401, align=4.646367, entropy=8.024151,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.813064, edge=0.003374, neigh=2.395549, align=4.688066, entropy=7.969389,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.812860, edge=0.003362, neigh=2.409964, align=4.696336, entropy=7.959388,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.812777, edge=0.003355, neigh=2.419045, align=4.700287, entropy=7.954667,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.812720, edge=0.003351, neigh=2.424815, align=4.702818, entropy=7.951598,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.812677, edge=0.003349, neigh=2.428924, align=4.704625, entropy=7.949376,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.812643, edge=0.003347, neigh=2.432144, align=4.706002, entropy=7.947665,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.812615, edge=0.003346, neigh=2.434813, align=4.707100, entropy=7.946292,s=1.000000, s_hat=1.000000
Time for optimization: 11.18s
Test results:
Top-1: 0.993
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.996
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.027s
Time for attribute perturbation: 0.005s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:04, 23.83it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 24.94it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 25.37it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 25.39it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 25.63it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 25.59it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:03, 25.57it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 25.53it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:02, 25.69it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 24.74it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.30it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:06,  7.90it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  7.81it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:07,  5.88it/s]
Time for cost matrix: 2.48s
Iter 0: wasserstein=1.416412, edge=0.003757, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.849444, edge=0.003304, neigh=2.350212, align=4.133014, entropy=8.720640,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.817249, edge=0.003347, neigh=2.370066, align=4.626246, entropy=8.045860,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.815188, edge=0.003342, neigh=2.373931, align=4.674072, entropy=7.983961,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.814993, edge=0.003341, neigh=2.386490, align=4.682768, entropy=7.973313,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.814934, edge=0.003345, neigh=2.395897, align=4.686902, entropy=7.968378,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.814893, edge=0.003348, neigh=2.402630, align=4.689764, entropy=7.964974,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.814858, edge=0.003348, neigh=2.407567, align=4.691939, entropy=7.962375,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.814827, edge=0.003348, neigh=2.411344, align=4.693650, entropy=7.960317,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.814799, edge=0.003348, neigh=2.414368, align=4.695034, entropy=7.958645,s=1.000000, s_hat=1.000000
Time for optimization: 11.24s
Test results:
Top-1: 0.992
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.996
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.016s
Time for attribute perturbation: 0.005s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:04, 22.67it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 25.81it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 26.11it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 26.25it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 26.45it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 26.48it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:02, 26.48it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 26.46it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:02, 26.42it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 25.34it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:04,  9.86it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  9.35it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  9.24it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  6.94it/s]
Time for cost matrix: 2.39s
Iter 0: wasserstein=1.413409, edge=0.003436, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.898615, edge=0.002846, neigh=2.271531, align=3.836102, entropy=9.060807,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.868496, edge=0.002984, neigh=2.231723, align=4.412588, entropy=8.286064,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.866485, edge=0.003000, neigh=2.232613, align=4.499110, entropy=8.176893,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.866372, edge=0.003005, neigh=2.230706, align=4.522396, entropy=8.146998,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.866451, edge=0.003018, neigh=2.236462, align=4.532333, entropy=8.134005,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.866496, edge=0.003023, neigh=2.240757, align=4.538339, entropy=8.126061,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.866514, edge=0.003032, neigh=2.246489, align=4.542682, entropy=8.120225,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.866527, edge=0.003041, neigh=2.252523, align=4.546408, entropy=8.115327,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.866530, edge=0.003045, neigh=2.257273, align=4.549270, entropy=8.111516,s=1.000000, s_hat=1.000000
Time for optimization: 10.10s
Test results:
Top-1: 0.955
Top-10: 0.987
Top-30: 0.995
Top-50: 0.997
Top-100: 0.999
MRR: 0.967
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.022s
Time for attribute perturbation: 0.015s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:04, 23.24it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 23.87it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 24.18it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 24.67it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 25.01it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 25.13it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:03, 25.27it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 25.36it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:02, 25.43it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 24.23it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04,  9.85it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:04,  9.74it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  7.29it/s]
Time for cost matrix: 2.42s
Iter 0: wasserstein=1.410218, edge=0.003437, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.900580, edge=0.002812, neigh=2.273698, align=3.805870, entropy=9.095550,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.870678, edge=0.002984, neigh=2.227392, align=4.382628, entropy=8.317532,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.868752, edge=0.003004, neigh=2.226913, align=4.474354, entropy=8.202113,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.868694, edge=0.003008, neigh=2.225543, align=4.505264, entropy=8.164405,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.868744, edge=0.003013, neigh=2.228667, align=4.519702, entropy=8.146598,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.868783, edge=0.003017, neigh=2.230683, align=4.526884, entropy=8.137298,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.868822, edge=0.003028, neigh=2.234528, align=4.530946, entropy=8.131731,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.868872, edge=0.003042, neigh=2.239991, align=4.533749, entropy=8.127723,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.868887, edge=0.003045, neigh=2.244850, align=4.536764, entropy=8.123636,s=1.000000, s_hat=1.000000
Time for optimization: 10.25s
Test results:
Top-1: 0.956
Top-10: 0.986
Top-30: 0.995
Top-50: 0.996
Top-100: 0.998
MRR: 0.968
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.016s
Time for attribute perturbation: 0.008s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:03, 31.08it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:03, 30.61it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:02, 30.56it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:02, 30.57it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:00<00:02, 30.57it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 30.61it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:00<00:02, 30.71it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:00<00:02, 29.63it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04, 10.10it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  7.41it/s]
Time for cost matrix: 2.15s
Iter 0: wasserstein=1.412405, edge=0.003435, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.897216, edge=0.002851, neigh=2.280545, align=3.859875, entropy=9.035497,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.866939, edge=0.002969, neigh=2.244581, align=4.424340, entropy=8.272228,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.865199, edge=0.002992, neigh=2.245372, align=4.506313, entropy=8.169625,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.865209, edge=0.003010, neigh=2.248097, align=4.532030, entropy=8.137780,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.865294, edge=0.003025, neigh=2.255768, align=4.544898, entropy=8.121473,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.865353, edge=0.003038, neigh=2.267281, align=4.547867, entropy=8.116675,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.865388, edge=0.003046, neigh=2.277019, align=4.549524, entropy=8.113674,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.865400, edge=0.003049, neigh=2.284437, align=4.551026, entropy=8.111051,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.865395, edge=0.003050, neigh=2.289856, align=4.552355, entropy=8.108757,s=1.000000, s_hat=1.000000
Time for optimization: 9.61s
Test results:
Top-1: 0.962
Top-10: 0.991
Top-30: 0.996
Top-50: 0.997
Top-100: 1.000
MRR: 0.973
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.019s
Time for attribute perturbation: 0.005s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 28.33it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 27.98it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 27.78it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 27.62it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 27.60it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:02, 27.43it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:02, 27.41it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 27.32it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:00<00:02, 27.41it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 26.57it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04,  9.76it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:04,  9.61it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  7.21it/s]
Time for cost matrix: 2.29s
Iter 0: wasserstein=1.414806, edge=0.003435, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.896595, edge=0.002903, neigh=2.275327, align=3.860629, entropy=9.030308,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.866142, edge=0.003024, neigh=2.240611, align=4.442411, entropy=8.253484,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.864205, edge=0.003016, neigh=2.243504, align=4.524238, entropy=8.150248,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.864154, edge=0.003019, neigh=2.241708, align=4.547571, entropy=8.120918,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.864190, edge=0.003024, neigh=2.248264, align=4.558988, entropy=8.106354,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.864202, edge=0.003028, neigh=2.255323, align=4.566365, entropy=8.096934,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.864204, edge=0.003031, neigh=2.261536, align=4.571655, entropy=8.090183,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.864220, edge=0.003037, neigh=2.267351, align=4.575489, entropy=8.085207,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.864249, edge=0.003044, neigh=2.273278, align=4.578254, entropy=8.081498,s=1.000000, s_hat=1.000000
Time for optimization: 9.73s
Test results:
Top-1: 0.967
Top-10: 0.989
Top-30: 0.997
Top-50: 0.999
Top-100: 1.000
MRR: 0.975
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.013s
Time for attribute perturbation: 0.013s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 24.54it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 26.13it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 26.84it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 26.38it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 26.61it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 26.84it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:03, 26.28it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 26.24it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:02, 26.41it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 25.57it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04,  9.71it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:04,  9.53it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  7.12it/s]
Time for cost matrix: 2.35s
Iter 0: wasserstein=1.417195, edge=0.003434, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.894915, edge=0.002873, neigh=2.285421, align=3.901159, entropy=8.987360,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.864651, edge=0.003003, neigh=2.253018, align=4.463685, entropy=8.230528,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.862703, edge=0.003013, neigh=2.253611, align=4.542760, entropy=8.130404,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.862616, edge=0.003018, neigh=2.256783, align=4.563922, entropy=8.103496,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.862646, edge=0.003027, neigh=2.266220, align=4.574612, entropy=8.089817,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.862664, edge=0.003041, neigh=2.279493, align=4.578727, entropy=8.084085,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.862648, edge=0.003047, neigh=2.289620, align=4.581509, entropy=8.080031,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.862616, edge=0.003048, neigh=2.296998, align=4.583679, entropy=8.076784,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.862580, edge=0.003048, neigh=2.302482, align=4.585438, entropy=8.074106,s=1.000000, s_hat=1.000000
Time for optimization: 14.82s
Test results:
Top-1: 0.973
Top-10: 0.994
Top-30: 0.998
Top-50: 0.998
Top-100: 0.999
MRR: 0.980
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.015s
Time for attribute perturbation: 0.016s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 18.65it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:04, 19.92it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:04, 19.58it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:04, 19.42it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:04, 19.17it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:00<00:04, 19.09it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:04, 18.62it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:04, 18.12it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:04, 18.30it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:04, 17.06it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:04, 16.01it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:04, 16.77it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:03, 17.85it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:04, 17.56it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:06,  7.88it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:06,  7.26it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:07,  6.43it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  4.86it/s]
Time for cost matrix: 3.12s
Iter 0: wasserstein=1.409439, edge=0.003436, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.900793, edge=0.002876, neigh=2.267627, align=3.811883, entropy=9.099226,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.870370, edge=0.003004, neigh=2.221881, align=4.392882, entropy=8.313499,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.868223, edge=0.002996, neigh=2.224010, align=4.477365, entropy=8.202688,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.868143, edge=0.003008, neigh=2.223997, align=4.502242, entropy=8.170203,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.868235, edge=0.003026, neigh=2.231194, align=4.514134, entropy=8.154636,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.868286, edge=0.003039, neigh=2.241992, align=4.516403, entropy=8.150321,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.868274, edge=0.003047, neigh=2.249396, align=4.517579, entropy=8.147576,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.868253, edge=0.003051, neigh=2.255198, align=4.518560, entropy=8.145313,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.868233, edge=0.003054, neigh=2.260107, align=4.519467, entropy=8.143328,s=1.000000, s_hat=1.000000
Time for optimization: 20.56s
Test results:
Top-1: 0.953
Top-10: 0.985
Top-30: 0.996
Top-50: 0.997
Top-100: 0.999
MRR: 0.965
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.082s
Time for attribute perturbation: 0.075s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.60it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.62it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.86it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.65it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.43it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:18,  5.09it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.31it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.23it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.83it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  5.97it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:16,  5.49it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.17it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  4.93it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:17,  4.80it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:18,  4.62it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.51it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.44it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:18,  4.44it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:18,  4.24it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.24it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:18,  4.30it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:17,  4.42it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:17,  4.39it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.30it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.27it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:16,  4.32it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:16,  4.30it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.13it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.65it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.42it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:19,  2.40it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.72it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  1.99it/s]
Time for cost matrix: 9.89s
Iter 0: wasserstein=1.410207, edge=0.003436, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.898258, edge=0.002849, neigh=2.263740, align=3.814073, entropy=9.081646,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.868233, edge=0.002980, neigh=2.224497, align=4.399630, entropy=8.298750,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.866222, edge=0.002985, neigh=2.228464, align=4.491481, entropy=8.183231,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.866168, edge=0.003000, neigh=2.228248, align=4.517444, entropy=8.151064,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.866295, edge=0.003023, neigh=2.235714, align=4.529467, entropy=8.136204,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.866382, edge=0.003031, neigh=2.240417, align=4.536765, entropy=8.127041,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.866406, edge=0.003034, neigh=2.243370, align=4.541272, entropy=8.121092,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.866426, edge=0.003040, neigh=2.246179, align=4.543556, entropy=8.117668,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.866455, edge=0.003046, neigh=2.249683, align=4.545269, entropy=8.115001,s=1.000000, s_hat=1.000000
Time for optimization: 30.62s
Test results:
Top-1: 0.954
Top-10: 0.986
Top-30: 0.994
Top-50: 0.995
Top-100: 1.000
MRR: 0.966
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.064s
Time for attribute perturbation: 0.062s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:25,  3.89it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.22it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.27it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.60it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.46it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.33it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.29it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.37it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.21it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.35it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.36it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.33it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:17,  4.88it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:17,  4.89it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.59it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.50it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.50it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.51it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:17,  4.51it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.35it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.32it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:16,  4.75it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:15,  4.96it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.68it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.37it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.31it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.40it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.29it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.24it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.30it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.79it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.71it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.20it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.23it/s]
Time for cost matrix: 9.71s
Iter 0: wasserstein=1.411267, edge=0.003436, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.898133, edge=0.002823, neigh=2.267230, align=3.815745, entropy=9.082769,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.868426, edge=0.002999, neigh=2.231534, align=4.389779, entropy=8.311389,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.866403, edge=0.003018, neigh=2.241396, align=4.483691, entropy=8.194360,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.866257, edge=0.003022, neigh=2.242094, align=4.510924, entropy=8.159558,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.866259, edge=0.003022, neigh=2.245495, align=4.524472, entropy=8.141992,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.866276, edge=0.003031, neigh=2.254506, align=4.527247, entropy=8.137260,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.866289, edge=0.003039, neigh=2.262037, align=4.528552, entropy=8.134612,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.866295, edge=0.003046, neigh=2.268675, align=4.529736, entropy=8.132374,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.866299, edge=0.003050, neigh=2.274975, align=4.530842, entropy=8.130390,s=1.000000, s_hat=1.000000
Time for optimization: 31.02s
Test results:
Top-1: 0.961
Top-10: 0.987
Top-30: 0.996
Top-50: 0.997
Top-100: 0.998
MRR: 0.970
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.062s
Time for attribute perturbation: 0.058s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.73it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.38it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:16,  5.89it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.91it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.31it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:18,  4.98it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:18,  4.91it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.78it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:17,  5.10it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:16,  5.29it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.67it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.53it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.51it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:19,  4.51it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.38it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.33it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:16,  4.97it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:15,  5.22it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:15,  5.13it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:16,  4.75it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.53it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.45it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:17,  4.36it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.42it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.57it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:15,  4.76it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:12,  5.72it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.60it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.69it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:19,  2.56it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.84it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:15,  3.01it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.28it/s]
Time for cost matrix: 9.53s
Iter 0: wasserstein=1.414668, edge=0.003435, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.896027, edge=0.002792, neigh=2.272327, align=3.865353, entropy=9.023323,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.865843, edge=0.002942, neigh=2.239661, align=4.446272, entropy=8.247071,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.864026, edge=0.002960, neigh=2.240949, align=4.526387, entropy=8.145746,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.863988, edge=0.002982, neigh=2.241981, align=4.548867, entropy=8.117331,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.864068, edge=0.003004, neigh=2.251240, align=4.559359, entropy=8.104213,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.864143, edge=0.003023, neigh=2.263904, align=4.562784, entropy=8.099615,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.864179, edge=0.003033, neigh=2.273457, align=4.564985, entropy=8.096517,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.864189, edge=0.003039, neigh=2.280464, align=4.566722, entropy=8.093978,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.864185, edge=0.003042, neigh=2.285655, align=4.568171, entropy=8.091803,s=1.000000, s_hat=1.000000
Time for optimization: 44.75s
Test results:
Top-1: 0.964
Top-10: 0.990
Top-30: 0.997
Top-50: 0.997
Top-100: 1.000
MRR: 0.974
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.140s
Time for attribute perturbation: 0.130s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:25,  3.82it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:38,  2.54it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:39,  2.45it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:43,  2.20it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:36,  2.62it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:36,  2.61it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:36,  2.53it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:03<00:35,  2.62it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:31,  2.85it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:30,  2.99it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:04<00:30,  2.96it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:31,  2.83it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:34,  2.56it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:05<00:35,  2.45it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:37,  2.29it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:06<00:36,  2.29it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:06<00:37,  2.21it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:07<00:31,  2.59it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:07<00:24,  3.30it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:07<00:25,  3.18it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:29,  2.65it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:08<00:29,  2.65it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:08<00:27,  2.82it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:09<00:28,  2.68it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:09<00:28,  2.60it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:09<00:29,  2.54it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:10<00:24,  2.93it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:10<00:21,  3.32it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:19,  3.69it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:26,  2.68it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.87it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:20,  2.33it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.80it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  2.02it/s]
Time for cost matrix: 15.01s
Iter 0: wasserstein=1.412577, edge=0.003435, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.897599, edge=0.002896, neigh=2.262789, align=3.848942, entropy=9.048287,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.867008, edge=0.003008, neigh=2.243202, align=4.424947, entropy=8.273385,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.864937, edge=0.003011, neigh=2.247348, align=4.508769, entropy=8.166401,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.864847, edge=0.003017, neigh=2.248508, align=4.535091, entropy=8.133530,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.864880, edge=0.003029, neigh=2.255479, align=4.547545, entropy=8.117813,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.864902, edge=0.003040, neigh=2.267437, align=4.550569, entropy=8.113047,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.864895, edge=0.003046, neigh=2.276750, align=4.552131, entropy=8.110192,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.864878, edge=0.003049, neigh=2.283557, align=4.553216, entropy=8.108051,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.864859, edge=0.003051, neigh=2.288577, align=4.554017, entropy=8.106361,s=1.000000, s_hat=1.000000
Time for optimization: 50.81s
Test results:
Top-1: 0.960
Top-10: 0.989
Top-30: 0.995
Top-50: 0.997
Top-100: 0.999
MRR: 0.971
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.073s
Time for attribute perturbation: 0.078s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:26,  3.68it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:27,  3.57it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:26,  3.69it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:25,  3.72it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:24,  3.80it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.59it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.83it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.64it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.03it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.14it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.48it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:24,  3.64it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:26,  3.32it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:28,  2.97it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:30,  2.75it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:33,  2.53it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:31,  2.63it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:32,  2.55it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:35,  2.29it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:32,  2.49it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:27,  2.83it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:30,  2.54it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:33,  2.28it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:32,  2.37it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:28,  2.66it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:28,  2.56it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:09<00:28,  2.57it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:09<00:28,  2.50it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:25,  2.74it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:24,  2.90it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:21,  2.26it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:20,  2.36it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.11it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:28,  1.65it/s]
Time for cost matrix: 14.35s
Iter 0: wasserstein=1.403360, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.924871, edge=0.002741, neigh=2.168671, align=3.502915, entropy=9.453121,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.895517, edge=0.002891, neigh=2.126290, align=4.069632, entropy=8.664653,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.893741, edge=0.002936, neigh=2.129551, align=4.183307, entropy=8.519707,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.893808, edge=0.002964, neigh=2.130855, align=4.227807, entropy=8.463177,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.893861, edge=0.002970, neigh=2.134274, align=4.252740, entropy=8.430831,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.893833, edge=0.002969, neigh=2.136524, align=4.267821, entropy=8.410834,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.893767, edge=0.002971, neigh=2.141316, align=4.268940, entropy=8.406415,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.893716, edge=0.002972, neigh=2.145177, align=4.267835, entropy=8.405023,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.893686, edge=0.002974, neigh=2.148657, align=4.266480, entropy=8.404361,s=1.000000, s_hat=1.000000
Time for optimization: 40.94s
Test results:
Top-1: 0.889
Top-10: 0.956
Top-30: 0.979
Top-50: 0.985
Top-100: 0.992
MRR: 0.914
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.070s
Time for attribute perturbation: 0.065s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.44it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.54it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.64it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.25it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.54it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:16,  5.56it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.42it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  5.75it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.20it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.16it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:15,  5.56it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:16,  5.26it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:15,  5.66it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.37it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.21it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:15,  5.29it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:15,  5.23it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:14,  5.54it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.46it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:10,  7.57it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:11,  6.68it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:13,  5.65it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:14,  5.17it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:14,  5.04it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:14,  5.03it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:14,  4.98it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:12,  5.55it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.59it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.42it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.39it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:20,  2.39it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.20it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.90it/s]
Time for cost matrix: 8.53s
Iter 0: wasserstein=1.402233, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.928368, edge=0.002775, neigh=2.177035, align=3.459811, entropy=9.504263,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.899004, edge=0.002937, neigh=2.124223, align=4.033761, entropy=8.707423,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.896945, edge=0.002956, neigh=2.128052, align=4.146381, entropy=8.561153,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.896895, edge=0.002978, neigh=2.125811, align=4.187159, entropy=8.506402,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.896906, edge=0.002979, neigh=2.128542, align=4.212704, entropy=8.472082,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.896876, edge=0.002977, neigh=2.130621, align=4.228697, entropy=8.450383,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.896835, edge=0.002978, neigh=2.134512, align=4.238998, entropy=8.436088,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.896741, edge=0.002979, neigh=2.138920, align=4.239723, entropy=8.432594,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.896662, edge=0.002981, neigh=2.142122, align=4.238986, entropy=8.431196,s=1.000000, s_hat=1.000000
Time for optimization: 28.65s
Test results:
Top-1: 0.883
Top-10: 0.960
Top-30: 0.981
Top-50: 0.985
Top-100: 0.990
MRR: 0.913
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.073s
Time for attribute perturbation: 0.071s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:12,  8.01it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:08, 11.97it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:09, 10.34it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  8.20it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  7.07it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.47it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.47it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.37it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:13,  6.26it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:14,  6.01it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  5.76it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:10,  7.64it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.24it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.43it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:12,  6.52it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.91it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.45it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.71it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  7.14it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:10,  6.88it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.28it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.82it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.24it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.77it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.27it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.00it/s]
Time for cost matrix: 6.88s
Iter 0: wasserstein=1.397477, edge=0.003329, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.931297, edge=0.002807, neigh=2.157742, align=3.353509, entropy=9.623779,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.902287, edge=0.002975, neigh=2.087291, align=3.911679, entropy=8.839244,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.900349, edge=0.002983, neigh=2.091054, align=4.020683, entropy=8.696206,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.900177, edge=0.002984, neigh=2.086363, align=4.059550, entropy=8.642154,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.900139, edge=0.002990, neigh=2.085481, align=4.078884, entropy=8.612966,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.900164, edge=0.002999, neigh=2.085205, align=4.091558, entropy=8.593424,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.900140, edge=0.003002, neigh=2.086550, align=4.101531, entropy=8.578472,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.900037, edge=0.003003, neigh=2.090414, align=4.101393, entropy=8.574984,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.899953, edge=0.003004, neigh=2.093783, align=4.099789, entropy=8.573806,s=1.000000, s_hat=1.000000
Time for optimization: 28.00s
Test results:
Top-1: 0.832
Top-10: 0.936
Top-30: 0.965
Top-50: 0.973
Top-100: 0.980
MRR: 0.870
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.071s
Time for attribute perturbation: 0.031s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:12,  7.82it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:11,  8.66it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:11,  8.54it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.55it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  8.06it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  8.11it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:11,  8.30it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.56it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.76it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.63it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  7.10it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:13,  6.49it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.56it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:16,  5.13it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:16,  4.98it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:15,  5.17it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:16,  4.96it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:16,  4.81it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:17,  4.55it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:17,  4.47it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:17,  4.42it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:17,  4.29it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:18,  4.15it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:17,  4.13it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:17,  4.26it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:16,  4.34it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:16,  4.32it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.22it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.96it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.08it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:16,  2.90it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.16it/s]
Time for cost matrix: 9.03s
Iter 0: wasserstein=1.399985, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.927444, edge=0.002745, neigh=2.166999, align=3.441241, entropy=9.520809,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.898781, edge=0.002906, neigh=2.106735, align=3.999466, entropy=8.740899,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.896966, edge=0.002961, neigh=2.112788, align=4.115575, entropy=8.592555,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.896976, edge=0.002979, neigh=2.113304, align=4.161244, entropy=8.533772,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.896930, edge=0.002976, neigh=2.118100, align=4.186848, entropy=8.499466,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.896852, edge=0.002979, neigh=2.126427, align=4.188369, entropy=8.492690,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.896783, edge=0.002983, neigh=2.132274, align=4.186459, entropy=8.490822,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.896734, edge=0.002986, neigh=2.136954, align=4.184332, entropy=8.490024,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.896698, edge=0.002988, neigh=2.141373, align=4.182556, entropy=8.489435,s=1.000000, s_hat=1.000000
Time for optimization: 29.54s
Test results:
Top-1: 0.871
Top-10: 0.951
Top-30: 0.973
Top-50: 0.979
Top-100: 0.984
MRR: 0.900
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.070s
Time for attribute perturbation: 0.081s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.27it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.12it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.12it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:24,  3.86it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:24,  3.94it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.12it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.17it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.26it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.27it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  4.08it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:22,  3.94it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:23,  3.74it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:22,  3.83it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:21,  3.98it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.07it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.13it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.32it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.37it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.17it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.22it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:18,  4.31it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:17,  4.39it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.43it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.50it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.46it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.26it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.17it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.14it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.04it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.01it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:18,  2.66it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.73it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.74it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.20it/s]
Time for cost matrix: 10.77s
Iter 0: wasserstein=1.402889, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.924911, edge=0.002728, neigh=2.201388, align=3.510474, entropy=9.447107,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.895769, edge=0.002889, neigh=2.143868, align=4.076453, entropy=8.659418,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.894048, edge=0.002935, neigh=2.137834, align=4.188882, entropy=8.515768,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.894109, edge=0.002957, neigh=2.133456, align=4.231304, entropy=8.461415,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.894202, edge=0.002963, neigh=2.135730, align=4.254340, entropy=8.430845,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.894203, edge=0.002966, neigh=2.138929, align=4.267817, entropy=8.412137,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.894144, edge=0.002974, neigh=2.146905, align=4.268090, entropy=8.408344,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.894079, edge=0.002977, neigh=2.153289, align=4.266876, entropy=8.406799,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.894016, edge=0.002979, neigh=2.158160, align=4.265689, entropy=8.405718,s=1.000000, s_hat=1.000000
Time for optimization: 32.19s
Test results:
Top-1: 0.886
Top-10: 0.957
Top-30: 0.980
Top-50: 0.983
Top-100: 0.990
MRR: 0.912
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.062s
Time for attribute perturbation: 0.067s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.33it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.11it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.30it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.44it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.58it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.47it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.28it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.48it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.46it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.43it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.29it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.30it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.16it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.18it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.23it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.32it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:20,  4.12it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.29it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.32it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.34it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.37it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:15,  5.13it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:14,  5.33it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:15,  5.01it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.67it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:15,  4.63it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:15,  4.68it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.37it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.48it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.29it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:27,  1.78it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:18,  2.54it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.67it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.92it/s]
Time for cost matrix: 10.24s
Iter 0: wasserstein=1.402096, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.924668, edge=0.002702, neigh=2.188639, align=3.471586, entropy=9.477737,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.896506, edge=0.002885, neigh=2.120910, align=4.030634, entropy=8.704359,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.894943, edge=0.002938, neigh=2.125123, align=4.141568, entropy=8.563733,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.895045, edge=0.002961, neigh=2.122614, align=4.180929, entropy=8.512254,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.895152, edge=0.002976, neigh=2.127357, align=4.201634, entropy=8.483539,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.895137, edge=0.002975, neigh=2.128396, align=4.215306, entropy=8.464250,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.895067, edge=0.002975, neigh=2.129189, align=4.224147, entropy=8.451377,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.894998, edge=0.002977, neigh=2.130018, align=4.229672, entropy=8.442858,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.894945, edge=0.002979, neigh=2.131679, align=4.233468, entropy=8.436713,s=1.000000, s_hat=1.000000
Time for optimization: 30.55s
Test results:
Top-1: 0.884
Top-10: 0.956
Top-30: 0.976
Top-50: 0.982
Top-100: 0.989
MRR: 0.910
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.087s
Time for attribute perturbation: 0.071s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:28,  3.42it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:28,  3.40it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:30,  3.22it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:30,  3.12it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:29,  3.26it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:27,  3.44it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:26,  3.45it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:26,  3.45it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:25,  3.55it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:24,  3.62it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:25,  3.54it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:25,  3.43it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:25,  3.39it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:24,  3.55it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:23,  3.58it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:24,  3.39it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:24,  3.45it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:21,  3.76it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:22,  3.64it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:19,  4.00it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:20,  3.83it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:22,  3.48it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:21,  3.57it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:06<00:20,  3.65it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:06<00:18,  4.08it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:07<00:18,  4.10it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:17,  4.16it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:07<00:17,  4.20it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:18,  3.83it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:20,  3.54it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:21,  2.24it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:22,  2.11it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:33,  1.39it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:36,  1.28it/s]
Time for cost matrix: 12.91s
Iter 0: wasserstein=1.403219, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.926489, edge=0.002753, neigh=2.167020, align=3.481483, entropy=9.472673,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.897291, edge=0.002897, neigh=2.119853, align=4.057999, entropy=8.678041,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.895514, edge=0.002935, neigh=2.126675, align=4.162205, entropy=8.542667,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.895641, edge=0.002967, neigh=2.126461, align=4.200497, entropy=8.491974,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.895691, edge=0.002970, neigh=2.130806, align=4.223938, entropy=8.460357,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.895689, edge=0.002971, neigh=2.132922, align=4.238865, entropy=8.439862,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.895636, edge=0.002971, neigh=2.136093, align=4.249454, entropy=8.425386,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.895570, edge=0.002976, neigh=2.140861, align=4.249979, entropy=8.422216,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.895520, edge=0.002979, neigh=2.145057, align=4.249121, entropy=8.421021,s=1.000000, s_hat=1.000000
Time for optimization: 54.35s
Test results:
Top-1: 0.892
Top-10: 0.959
Top-30: 0.979
Top-50: 0.985
Top-100: 0.991
MRR: 0.916
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.105s
Time for attribute perturbation: 0.156s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:45,  2.19it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:36,  2.72it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:26,  3.68it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:22,  4.27it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  3.98it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:28,  3.31it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:32,  2.88it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:25,  3.54it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:23,  3.79it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  3.96it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:23,  3.76it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:24,  3.62it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:26,  3.34it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:24,  3.45it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:24,  3.49it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:23,  3.62it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:22,  3.64it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:22,  3.64it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:23,  3.51it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:22,  3.50it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:22,  3.56it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:24,  3.18it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:27,  2.76it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:29,  2.54it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:27,  2.73it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:29,  2.54it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:28,  2.57it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:25,  2.81it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:25,  2.78it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:23,  3.03it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:41,  1.17it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:37,  1.28it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:30,  1.53it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:40,  1.17it/s]
Time for cost matrix: 15.11s
Iter 0: wasserstein=1.404598, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.924833, edge=0.002733, neigh=2.181243, align=3.511744, entropy=9.435617,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.895922, edge=0.002896, neigh=2.129592, align=4.097674, entropy=8.634278,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.894174, edge=0.002948, neigh=2.133703, align=4.212649, entropy=8.489669,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.894242, edge=0.002968, neigh=2.132787, align=4.253807, entropy=8.437493,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.894305, edge=0.002969, neigh=2.135346, align=4.276086, entropy=8.408121,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.894333, edge=0.002971, neigh=2.136075, align=4.288643, entropy=8.390485,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.894315, edge=0.002972, neigh=2.137914, align=4.296602, entropy=8.378643,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.894234, edge=0.002973, neigh=2.142012, align=4.296777, entropy=8.375612,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.894163, edge=0.002974, neigh=2.145243, align=4.295771, entropy=8.374379,s=1.000000, s_hat=1.000000
Time for optimization: 52.17s
Test results:
Top-1: 0.898
Top-10: 0.965
Top-30: 0.982
Top-50: 0.988
Top-100: 0.993
MRR: 0.923
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.088s
Time for attribute perturbation: 0.085s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:27,  3.62it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.52it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.56it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:24,  3.88it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:26,  3.59it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:25,  3.67it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:26,  3.48it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:27,  3.38it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:24,  3.71it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  3.94it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.11it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:20,  4.24it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.23it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.29it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.24it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.32it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.31it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.52it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:16,  4.82it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.62it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:17,  4.44it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.29it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.31it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.29it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:06<00:17,  4.24it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.27it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.32it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.36it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.32it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.02it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  2.90it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.07it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.11it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.35it/s]
Time for cost matrix: 10.68s
Iter 0: wasserstein=1.404944, edge=0.003327, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.924175, edge=0.002776, neigh=2.180698, align=3.502768, entropy=9.442850,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.894755, edge=0.002916, neigh=2.129237, align=4.102061, entropy=8.627240,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.892781, edge=0.002931, neigh=2.134544, align=4.227152, entropy=8.472965,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.892742, edge=0.002948, neigh=2.135833, align=4.270122, entropy=8.418553,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.892801, edge=0.002959, neigh=2.140398, align=4.291601, entropy=8.390353,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.892772, edge=0.002966, neigh=2.148018, align=4.293030, entropy=8.384828,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.892722, edge=0.002971, neigh=2.153464, align=4.291723, entropy=8.383129,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.892684, edge=0.002973, neigh=2.157697, align=4.290151, entropy=8.382310,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.892655, edge=0.002976, neigh=2.161384, align=4.288772, entropy=8.381700,s=1.000000, s_hat=1.000000
Time for optimization: 28.18s
Test results:
Top-1: 0.897
Top-10: 0.964
Top-30: 0.984
Top-50: 0.988
Top-100: 0.993
MRR: 0.921
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.061s
Time for attribute perturbation: 0.066s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.81it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.39it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.26it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.34it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.36it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.35it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.52it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.27it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.20it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.29it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.32it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.29it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.23it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.13it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.14it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.21it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.21it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.15it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.27it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.09it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:19,  4.11it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.15it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.24it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.26it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.20it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.18it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.18it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.19it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.33it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.10it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  2.96it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:23,  2.03it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.54it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.09it/s]
Time for cost matrix: 10.52s
Iter 0: wasserstein=1.407839, edge=0.003327, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.923231, edge=0.002689, neigh=2.193281, align=3.566335, entropy=9.377634,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.893889, edge=0.002853, neigh=2.133853, align=4.153403, entropy=8.573202,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.892123, edge=0.002920, neigh=2.143899, align=4.269326, entropy=8.428321,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.892098, edge=0.002942, neigh=2.144456, align=4.310463, entropy=8.376285,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.892140, edge=0.002947, neigh=2.148003, align=4.330943, entropy=8.349309,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.892148, edge=0.002954, neigh=2.155789, align=4.333094, entropy=8.343377,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.892143, edge=0.002958, neigh=2.161494, align=4.332769, entropy=8.340925,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.892133, edge=0.002962, neigh=2.166286, align=4.332286, entropy=8.339180,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.892120, edge=0.002965, neigh=2.170853, align=4.331953, entropy=8.337656,s=1.000000, s_hat=1.000000
Time for optimization: 29.74s
Test results:
Top-1: 0.915
Top-10: 0.967
Top-30: 0.986
Top-50: 0.988
Top-100: 0.994
MRR: 0.934
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.030s
Time for attribute perturbation: 0.082s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.56it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:09,  9.75it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:09, 10.36it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  8.37it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:10,  8.38it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  8.17it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  8.02it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.39it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.85it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:11,  7.82it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:12,  6.79it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.93it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:09,  8.34it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  7.09it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:13,  6.12it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:14,  5.34it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:16,  4.78it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:16,  4.78it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:17,  4.45it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:17,  4.26it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:17,  4.21it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:17,  4.15it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:17,  4.11it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:17,  4.14it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.66it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:26,  1.84it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:29,  1.62it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.15it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:27,  1.71it/s]
Time for cost matrix: 8.94s
Iter 0: wasserstein=1.401090, edge=0.003273, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.939038, edge=0.002735, neigh=2.116784, align=3.287438, entropy=9.699724,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.910321, edge=0.002909, neigh=2.049196, align=3.826267, entropy=8.928378,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.908436, edge=0.002941, neigh=2.048849, align=3.936346, entropy=8.783251,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.908400, edge=0.002961, neigh=2.044654, align=3.975308, entropy=8.729453,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.908321, edge=0.002961, neigh=2.046345, align=3.997441, entropy=8.696981,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.908235, edge=0.002957, neigh=2.046421, align=4.012900, entropy=8.674134,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.908101, edge=0.002954, neigh=2.047283, align=4.023815, entropy=8.657791,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.907985, edge=0.002954, neigh=2.048529, align=4.031102, entropy=8.646428,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.907854, edge=0.002956, neigh=2.051496, align=4.030486, entropy=8.643955,s=1.000000, s_hat=1.000000
Time for optimization: 31.41s
Test results:
Top-1: 0.819
Top-10: 0.935
Top-30: 0.966
Top-50: 0.976
Top-100: 0.982
MRR: 0.864
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.078s
Time for attribute perturbation: 0.067s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.12it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.35it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.41it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.49it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.56it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.50it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.40it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.32it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.20it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.16it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.20it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.26it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.21it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.28it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.38it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.20it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.26it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.17it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.28it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.25it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.33it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.29it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.35it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:19,  3.94it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:18,  4.05it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:18,  4.01it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.14it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.28it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.27it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.11it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.43it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.49it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.99it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.05it/s]
Time for cost matrix: 10.75s
Iter 0: wasserstein=1.395868, edge=0.003274, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.944890, edge=0.002758, neigh=2.107560, align=3.158209, entropy=9.848575,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.916637, edge=0.002952, neigh=2.032243, align=3.647297, entropy=9.121796,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.914633, edge=0.002993, neigh=2.032920, align=3.740728, entropy=8.990003,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.914581, edge=0.003005, neigh=2.025207, align=3.773615, entropy=8.940348,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.914405, edge=0.002997, neigh=2.025812, align=3.793938, entropy=8.907613,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.914265, edge=0.002993, neigh=2.026977, align=3.806929, entropy=8.885363,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.914132, edge=0.002991, neigh=2.029047, align=3.816607, entropy=8.868836,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.913984, edge=0.002992, neigh=2.030830, align=3.824228, entropy=8.856137,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.913816, edge=0.002992, neigh=2.033907, align=3.823193, entropy=8.853450,s=1.000000, s_hat=1.000000
Time for optimization: 29.95s
Test results:
Top-1: 0.732
Top-10: 0.884
Top-30: 0.922
Top-50: 0.933
Top-100: 0.955
MRR: 0.787
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.045s
Time for attribute perturbation: 0.066s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.06it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.11it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.22it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.05it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.60it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:19,  4.77it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.74it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.65it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:18,  4.83it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:16,  5.49it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:16,  5.37it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  5.00it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.75it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:18,  4.53it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.57it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.49it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.40it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.32it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.45it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.33it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.25it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:18,  4.15it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.25it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.16it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.22it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.29it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.26it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.17it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.16it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.27it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.44it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.01it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.63it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.09it/s]
Time for cost matrix: 10.37s
Iter 0: wasserstein=1.398021, edge=0.003273, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.942762, edge=0.002721, neigh=2.118582, align=3.224993, entropy=9.779091,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.914066, edge=0.002913, neigh=2.044520, align=3.739303, entropy=9.026468,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.912209, edge=0.002954, neigh=2.045935, align=3.835267, entropy=8.892775,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.912286, edge=0.002973, neigh=2.039845, align=3.866939, entropy=8.844391,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.912271, edge=0.002977, neigh=2.041605, align=3.885682, entropy=8.813761,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.912169, edge=0.002977, neigh=2.041700, align=3.898747, entropy=8.792081,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.912023, edge=0.002975, neigh=2.042721, align=3.908455, entropy=8.776041,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.911890, edge=0.002975, neigh=2.043697, align=3.915028, entropy=8.764729,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.911806, edge=0.002977, neigh=2.045516, align=3.919146, entropy=8.756928,s=1.000000, s_hat=1.000000
Time for optimization: 29.61s
Test results:
Top-1: 0.763
Top-10: 0.905
Top-30: 0.945
Top-50: 0.957
Top-100: 0.970
MRR: 0.817
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.088s
Time for attribute perturbation: 0.066s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.55it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.71it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.50it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.47it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.60it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.62it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.78it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.81it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.69it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:17,  5.03it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.79it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.70it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.79it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:18,  4.67it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.51it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.46it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.49it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.33it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.34it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.44it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.44it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.43it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.41it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.44it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.46it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.45it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:17,  4.18it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.22it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.36it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.36it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.87it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:18,  2.54it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.66it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.14it/s]
Time for cost matrix: 10.16s
Iter 0: wasserstein=1.398863, edge=0.003273, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.940257, edge=0.002737, neigh=2.121888, align=3.256688, entropy=9.735647,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.911485, edge=0.002912, neigh=2.052245, align=3.783317, entropy=8.974189,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.909493, edge=0.002940, neigh=2.049779, align=3.885979, entropy=8.835716,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.909621, edge=0.002969, neigh=2.046170, align=3.918574, entropy=8.788411,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.909681, edge=0.002970, neigh=2.048106, align=3.937438, entropy=8.759411,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.909672, edge=0.002970, neigh=2.048904, align=3.949570, entropy=8.739736,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.909568, edge=0.002970, neigh=2.050319, align=3.958808, entropy=8.724777,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.909439, edge=0.002969, neigh=2.051432, align=3.965942, entropy=8.713235,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.909324, edge=0.002968, neigh=2.052936, align=3.971016, entropy=8.704710,s=1.000000, s_hat=1.000000
Time for optimization: 31.58s
Test results:
Top-1: 0.791
Top-10: 0.920
Top-30: 0.956
Top-50: 0.964
Top-100: 0.975
MRR: 0.840
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.077s
Time for attribute perturbation: 0.099s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:29,  3.38it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:30,  3.25it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:30,  3.16it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:30,  3.12it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:29,  3.25it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:27,  3.38it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:26,  3.57it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:25,  3.63it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:26,  3.43it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:26,  3.44it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:27,  3.24it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:27,  3.15it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:27,  3.17it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:26,  3.19it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:26,  3.24it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:24,  3.39it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:23,  3.51it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:20,  3.96it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:20,  4.05it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:20,  3.85it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:22,  3.57it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:23,  3.34it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:24,  3.19it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:24,  3.06it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:24,  3.06it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:07<00:20,  3.56it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:21,  3.42it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:20,  3.48it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:20,  3.40it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:21,  3.23it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:21,  2.31it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:41,  1.16it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:35,  1.31it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:51,  1.10s/it]
Time for cost matrix: 15.23s
Iter 0: wasserstein=1.393487, edge=0.003274, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.944172, edge=0.002723, neigh=2.127657, align=3.144610, entropy=9.861570,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.916212, edge=0.002940, neigh=2.039724, align=3.621538, entropy=9.144860,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.914437, edge=0.002995, neigh=2.038465, align=3.718241, entropy=9.012022,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.914435, edge=0.003007, neigh=2.030894, align=3.753256, entropy=8.960813,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.914351, edge=0.003007, neigh=2.031728, align=3.772483, entropy=8.929716,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.914251, edge=0.003004, neigh=2.032986, align=3.785512, entropy=8.907769,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.914082, edge=0.003000, neigh=2.035388, align=3.795852, entropy=8.890616,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.913879, edge=0.003001, neigh=2.039181, align=3.794565, entropy=8.886997,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.913711, edge=0.003001, neigh=2.042111, align=3.792020, entropy=8.885879,s=1.000000, s_hat=1.000000
Time for optimization: 57.39s
Test results:
Top-1: 0.691
Top-10: 0.885
Top-30: 0.924
Top-50: 0.938
Top-100: 0.953
MRR: 0.760
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.066s
Time for attribute perturbation: 0.083s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.03it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:26,  3.76it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:25,  3.81it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:26,  3.66it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:26,  3.55it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:25,  3.73it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:24,  3.82it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:25,  3.56it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:29,  3.13it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:32,  2.74it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:32,  2.71it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:34,  2.58it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:35,  2.45it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:31,  2.74it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:29,  2.92it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:34,  2.40it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:34,  2.41it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:33,  2.47it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:28,  2.85it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:25,  3.08it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:28,  2.82it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:29,  2.68it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:25,  3.04it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:08<00:22,  3.39it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:19,  3.85it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:19,  3.74it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:18,  3.93it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:19,  3.78it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:19,  3.65it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:23,  3.02it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.40it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.79it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  1.99it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:45,  1.03it/s]
Time for cost matrix: 14.94s
Iter 0: wasserstein=1.394808, edge=0.003274, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.944915, edge=0.002749, neigh=2.118829, align=3.146250, entropy=9.869958,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.916263, edge=0.002958, neigh=2.034472, align=3.630504, entropy=9.140685,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.914079, edge=0.003001, neigh=2.040031, align=3.728993, entropy=9.001879,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.913995, edge=0.003017, neigh=2.033310, align=3.764348, entropy=8.949180,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.913919, edge=0.003014, neigh=2.032862, align=3.785291, entropy=8.916008,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.913776, edge=0.003006, neigh=2.031883, align=3.799458, entropy=8.893097,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.913594, edge=0.003001, neigh=2.032659, align=3.809087, entropy=8.877006,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.913414, edge=0.003001, neigh=2.036285, align=3.807367, entropy=8.873931,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.913270, edge=0.003002, neigh=2.039299, align=3.804565, entropy=8.873112,s=1.000000, s_hat=1.000000
Time for optimization: 51.99s
Test results:
Top-1: 0.700
Top-10: 0.895
Top-30: 0.931
Top-50: 0.944
Top-100: 0.959
MRR: 0.773
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.072s
Time for attribute perturbation: 0.056s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:13,  7.25it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.72it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  7.04it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.76it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:14,  6.65it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.45it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.13it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  7.62it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.92it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.58it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.26it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:12,  7.11it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  7.06it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.04it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.13it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:10,  7.53it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:11,  6.68it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.82it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.26it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.50it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.73it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.21it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  7.27it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.42it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:07,  9.54it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  7.06it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:08,  5.81it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.67it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  2.95it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.64it/s]
Time for cost matrix: 6.82s
Iter 0: wasserstein=1.394640, edge=0.003274, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.945259, edge=0.002740, neigh=2.121446, align=3.158707, entropy=9.848277,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.917284, edge=0.002959, neigh=2.037350, align=3.650433, entropy=9.120129,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.915147, edge=0.002988, neigh=2.037990, align=3.748380, entropy=8.982847,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.915059, edge=0.003003, neigh=2.034274, align=3.780586, entropy=8.933367,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.914945, edge=0.003004, neigh=2.037383, align=3.799629, entropy=8.901982,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.914756, edge=0.003004, neigh=2.039149, align=3.812530, entropy=8.879895,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.914525, edge=0.003003, neigh=2.043991, align=3.810277, entropy=8.875544,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.914343, edge=0.003003, neigh=2.047872, align=3.806382, entropy=8.874553,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.914200, edge=0.003003, neigh=2.050713, align=3.803040, entropy=8.874164,s=1.000000, s_hat=1.000000
Time for optimization: 29.86s
Test results:
Top-1: 0.712
Top-10: 0.899
Top-30: 0.935
Top-50: 0.949
Top-100: 0.962
MRR: 0.779
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.065s
Time for attribute perturbation: 0.079s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.61it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  5.11it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.26it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.32it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.28it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:18,  5.21it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.19it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  5.89it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.45it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:17,  5.03it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.69it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.43it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:20,  4.32it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:20,  4.24it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.55it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.42it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.52it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.45it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.38it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:16,  4.79it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:16,  4.68it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.58it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:17,  4.41it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.54it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.50it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.62it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.59it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.62it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.56it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.54it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.95it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.95it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.11it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.83it/s]
Time for cost matrix: 9.42s
Iter 0: wasserstein=1.396377, edge=0.003274, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.942502, edge=0.002739, neigh=2.115659, align=3.192211, entropy=9.803506,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.914321, edge=0.002929, neigh=2.043864, align=3.705888, entropy=9.058015,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.912490, edge=0.002970, neigh=2.045407, align=3.804389, entropy=8.923369,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.912555, edge=0.002991, neigh=2.041140, align=3.839258, entropy=8.872501,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.912418, edge=0.002982, neigh=2.042495, align=3.861078, entropy=8.839400,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.912264, edge=0.002980, neigh=2.042658, align=3.873200, entropy=8.819007,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.912138, edge=0.002985, neigh=2.047497, align=3.869351, entropy=8.816949,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.912031, edge=0.002987, neigh=2.051730, align=3.864491, entropy=8.817294,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.911938, edge=0.002988, neigh=2.055145, align=3.860516, entropy=8.817674,s=1.000000, s_hat=1.000000
Time for optimization: 29.70s
Test results:
Top-1: 0.742
Top-10: 0.893
Top-30: 0.934
Top-50: 0.943
Top-100: 0.958
MRR: 0.798
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.055s
Time for attribute perturbation: 0.070s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.38it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.42it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.64it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  5.03it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:16,  5.64it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:14,  6.41it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.62it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.54it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  5.83it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:17,  5.01it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.82it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.69it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.34it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:15,  5.65it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.52it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.84it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:13,  6.05it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:15,  5.39it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.72it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.82it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:11,  6.50it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:13,  5.58it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:14,  5.34it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:14,  5.23it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:14,  4.98it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:15,  4.69it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.57it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:15,  4.64it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.11it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  3.06it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.28it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.65it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.23it/s]
Time for cost matrix: 9.03s
Iter 0: wasserstein=1.396029, edge=0.003273, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.941768, edge=0.002739, neigh=2.117332, align=3.210655, entropy=9.788114,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.913407, edge=0.002920, neigh=2.043519, align=3.721393, entropy=9.041895,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.911648, edge=0.002975, neigh=2.039761, align=3.825105, entropy=8.901532,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.911516, edge=0.002987, neigh=2.034864, align=3.869273, entropy=8.841049,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.911329, edge=0.002982, neigh=2.035791, align=3.893020, entropy=8.806233,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.911215, edge=0.002980, neigh=2.037060, align=3.905102, entropy=8.786383,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.911129, edge=0.002978, neigh=2.039545, align=3.911779, entropy=8.773708,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.911008, edge=0.002976, neigh=2.041663, align=3.916038, entropy=8.764709,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.910834, edge=0.002975, neigh=2.044129, align=3.914363, entropy=8.762781,s=1.000000, s_hat=1.000000
Time for optimization: 30.42s
Test results:
Top-1: 0.760
Top-10: 0.908
Top-30: 0.943
Top-50: 0.955
Top-100: 0.969
MRR: 0.812
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.069s
Time for attribute perturbation: 0.061s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  3.97it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.29it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.19it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.28it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.41it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.52it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.46it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.64it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.44it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:18,  4.76it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:15,  5.79it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.27it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  4.89it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.69it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:17,  4.74it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.64it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:17,  4.60it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.43it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.35it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.37it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.37it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.34it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.44it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.25it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.21it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:17,  4.25it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.30it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.43it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.39it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.07it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.14it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.01it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.17it/s]
Time for cost matrix: 10.23s
Iter 0: wasserstein=1.398981, edge=0.003273, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.941248, edge=0.002710, neigh=2.109927, align=3.231994, entropy=9.762465,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.912816, edge=0.002919, neigh=2.045034, align=3.745679, entropy=9.014724,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.911093, edge=0.002970, neigh=2.046534, align=3.852089, entropy=8.874211,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.911074, edge=0.002985, neigh=2.043080, align=3.891432, entropy=8.819142,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.910859, edge=0.002970, neigh=2.045053, align=3.913913, entropy=8.785213,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.910738, edge=0.002965, neigh=2.045242, align=3.925010, entropy=8.765641,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.910642, edge=0.002966, neigh=2.046544, align=3.931535, entropy=8.752714,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.910543, edge=0.002969, neigh=2.048156, align=3.936407, entropy=8.742985,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.910421, edge=0.002969, neigh=2.050126, align=3.940659, entropy=8.735016,s=1.000000, s_hat=1.000000
Time for optimization: 30.89s
Test results:
Top-1: 0.777
Top-10: 0.918
Top-30: 0.946
Top-50: 0.956
Top-100: 0.970
MRR: 0.830
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.063s
Time for attribute perturbation: 0.073s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.84it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:09, 10.57it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.44it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:10,  8.63it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  8.01it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:09,  9.35it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:10,  8.64it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.99it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:10,  8.01it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.64it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:12,  7.10it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:09,  8.49it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:09,  8.64it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:09,  8.87it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.57it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:13,  6.05it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:14,  5.31it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:15,  5.00it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:16,  4.74it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:16,  4.67it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:16,  4.48it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:17,  4.15it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:17,  4.22it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:16,  4.18it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.90it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:36,  1.35it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:28,  1.70it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.29it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:27,  1.74it/s]
Time for cost matrix: 8.63s
Iter 0: wasserstein=1.389785, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952683, edge=0.002819, neigh=2.129338, align=2.987633, entropy=10.053739,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.924424, edge=0.003016, neigh=2.036030, align=3.414049, entropy=9.375020,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922077, edge=0.003053, neigh=2.039501, align=3.487150, entropy=9.257014,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921720, edge=0.003056, neigh=2.033714, align=3.510800, entropy=9.212402,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921387, edge=0.003045, neigh=2.033622, align=3.525401, entropy=9.182844,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921088, edge=0.003035, neigh=2.033406, align=3.536349, entropy=9.161057,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920817, edge=0.003029, neigh=2.034760, align=3.545539, entropy=9.143930,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920577, edge=0.003026, neigh=2.036311, align=3.553160, entropy=9.130409,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920356, edge=0.003025, neigh=2.038603, align=3.551718, entropy=9.127536,s=1.000000, s_hat=1.000000
Time for optimization: 31.71s
Test results:
Top-1: 0.509
Top-10: 0.824
Top-30: 0.883
Top-50: 0.896
Top-100: 0.913
MRR: 0.616
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.027s
Time for attribute perturbation: 0.073s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.41it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.43it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.49it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.29it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.25it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.26it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.38it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.75it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.58it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:13,  6.39it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:15,  5.76it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  6.03it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  6.12it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.26it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.19it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:14,  5.78it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:14,  5.51it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:15,  5.26it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:16,  4.97it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:16,  4.71it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:16,  4.61it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:16,  4.58it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:17,  4.37it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.26it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.30it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:17,  4.22it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:17,  4.21it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:16,  4.21it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.65it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:18,  2.65it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.11it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.85it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.19it/s]
Time for cost matrix: 9.76s
Iter 0: wasserstein=1.387812, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950693, edge=0.002743, neigh=2.132498, align=2.985408, entropy=10.044101,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923896, edge=0.002981, neigh=2.033171, align=3.392608, entropy=9.394368,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921940, edge=0.003046, neigh=2.030498, align=3.457700, entropy=9.285688,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921693, edge=0.003049, neigh=2.022021, align=3.477867, entropy=9.244945,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921400, edge=0.003040, neigh=2.020636, align=3.488767, entropy=9.219133,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921121, edge=0.003034, neigh=2.021102, align=3.496810, entropy=9.200326,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920912, edge=0.003032, neigh=2.023111, align=3.502799, entropy=9.186562,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920674, edge=0.003025, neigh=2.024452, align=3.509056, entropy=9.174490,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920458, edge=0.003027, neigh=2.026885, align=3.507221, entropy=9.172026,s=1.000000, s_hat=1.000000
Time for optimization: 42.77s
Test results:
Top-1: 0.481
Top-10: 0.800
Top-30: 0.868
Top-50: 0.882
Top-100: 0.903
MRR: 0.589
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.056s
Time for attribute perturbation: 0.097s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:51,  1.93it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:38,  2.57it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:37,  2.59it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:39,  2.41it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:34,  2.74it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:29,  3.18it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:33,  2.79it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:31,  2.94it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:32,  2.79it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:33,  2.66it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:04<00:33,  2.65it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:35,  2.51it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:35,  2.42it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:05<00:31,  2.74it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:28,  3.00it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:22,  3.75it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:21,  3.79it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:27,  3.00it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:28,  2.86it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:07<00:30,  2.59it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:30,  2.58it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:08<00:31,  2.50it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:08<00:31,  2.44it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:08<00:30,  2.50it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:09<00:26,  2.87it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:09<00:26,  2.76it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:09<00:27,  2.62it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:10<00:28,  2.51it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:26,  2.70it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:26,  2.66it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.38it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:21,  2.22it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.39it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:26,  1.78it/s]
Time for cost matrix: 15.73s
Iter 0: wasserstein=1.388258, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.949130, edge=0.002737, neigh=2.139846, align=3.008634, entropy=10.020458,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.922226, edge=0.002961, neigh=2.039291, align=3.408268, entropy=9.376458,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920345, edge=0.003042, neigh=2.034675, align=3.465833, entropy=9.274755,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920062, edge=0.003051, neigh=2.026674, align=3.485180, entropy=9.235092,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919766, edge=0.003044, neigh=2.027224, align=3.496237, entropy=9.209742,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919481, edge=0.003035, neigh=2.028088, align=3.504307, entropy=9.191349,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.919270, edge=0.003031, neigh=2.030166, align=3.510135, entropy=9.178058,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.919068, edge=0.003031, neigh=2.033477, align=3.507183, entropy=9.175690,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918905, edge=0.003031, neigh=2.035863, align=3.503709, entropy=9.175174,s=1.000000, s_hat=1.000000
Time for optimization: 51.80s
Test results:
Top-1: 0.481
Top-10: 0.804
Top-30: 0.863
Top-50: 0.877
Top-100: 0.898
MRR: 0.587
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.088s
Time for attribute perturbation: 0.102s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:27,  3.60it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:25,  3.85it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.21it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:24,  3.99it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:25,  3.66it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  4.03it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.10it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:24,  3.71it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:24,  3.64it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.35it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:24,  3.60it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:28,  3.10it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:28,  3.05it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:31,  2.74it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:32,  2.60it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:29,  2.80it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:28,  2.95it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:31,  2.61it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:31,  2.54it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:29,  2.71it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:25,  3.10it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:23,  3.33it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:26,  2.93it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:28,  2.69it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:24,  3.01it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:22,  3.30it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:23,  3.16it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:22,  3.22it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:22,  3.16it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:22,  3.09it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:22,  2.18it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:20,  2.40it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.41it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:25,  1.85it/s]
Time for cost matrix: 13.45s
Iter 0: wasserstein=1.387984, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.951535, edge=0.002778, neigh=2.128168, align=2.977991, entropy=10.054592,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.924359, edge=0.003004, neigh=2.018996, align=3.386963, entropy=9.400786,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922127, edge=0.003055, neigh=2.022261, align=3.455048, entropy=9.288513,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921832, edge=0.003064, neigh=2.018969, align=3.475956, entropy=9.246998,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921468, edge=0.003046, neigh=2.021443, align=3.489050, entropy=9.219256,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921207, edge=0.003041, neigh=2.027019, align=3.481766, entropy=9.216374,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921029, edge=0.003039, neigh=2.030953, align=3.473872, entropy=9.216933,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920860, edge=0.003038, neigh=2.033667, align=3.468027, entropy=9.217238,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920703, edge=0.003037, neigh=2.035752, align=3.463755, entropy=9.217206,s=1.000000, s_hat=1.000000
Time for optimization: 46.24s
Test results:
Top-1: 0.451
Top-10: 0.796
Top-30: 0.863
Top-50: 0.874
Top-100: 0.891
MRR: 0.564
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.053s
Time for attribute perturbation: 0.106s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.65it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  5.12it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.77it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.41it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.23it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.13it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.06it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.26it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.35it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.32it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.54it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.61it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.47it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.62it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.70it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.62it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.43it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.41it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.42it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.55it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.47it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.34it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.25it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.37it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.36it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.21it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.20it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.13it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.27it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.26it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.42it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:19,  2.47it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.38it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  2.00it/s]
Time for cost matrix: 10.12s
Iter 0: wasserstein=1.389418, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950636, edge=0.002786, neigh=2.127714, align=2.996770, entropy=10.035197,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923102, edge=0.003004, neigh=2.026757, align=3.410706, entropy=9.373987,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920995, edge=0.003045, neigh=2.026002, align=3.480421, entropy=9.260946,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920776, edge=0.003047, neigh=2.019995, align=3.502818, entropy=9.219001,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.920525, edge=0.003036, neigh=2.019350, align=3.514022, entropy=9.193583,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920282, edge=0.003030, neigh=2.019409, align=3.520980, entropy=9.176199,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920076, edge=0.003029, neigh=2.022798, align=3.515811, entropy=9.173981,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.919878, edge=0.003028, neigh=2.025394, align=3.510908, entropy=9.173436,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.919708, edge=0.003027, neigh=2.027502, align=3.507147, entropy=9.173030,s=1.000000, s_hat=1.000000
Time for optimization: 31.36s
Test results:
Top-1: 0.513
Top-10: 0.813
Top-30: 0.882
Top-50: 0.895
Top-100: 0.916
MRR: 0.615
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.065s
Time for attribute perturbation: 0.062s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.15it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.17it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.12it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.11it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.26it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.30it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.38it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.40it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.17it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  4.04it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.14it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.18it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:21,  4.04it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:21,  4.07it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.24it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.15it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:20,  4.06it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:20,  4.02it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.20it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.32it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:19,  4.16it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.19it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.13it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.34it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.32it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.35it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.24it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.28it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.14it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.06it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:18,  2.63it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.80it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.69it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  2.03it/s]
Time for cost matrix: 10.73s
Iter 0: wasserstein=1.385342, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.951565, edge=0.002772, neigh=2.151457, align=2.961707, entropy=10.081872,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.924415, edge=0.003012, neigh=2.044575, align=3.351672, entropy=9.442562,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922117, edge=0.003077, neigh=2.045941, align=3.408574, entropy=9.338135,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921655, edge=0.003074, neigh=2.041487, align=3.428608, entropy=9.296365,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921233, edge=0.003062, neigh=2.042946, align=3.439677, entropy=9.269987,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920894, edge=0.003056, neigh=2.044912, align=3.446824, entropy=9.251698,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920618, edge=0.003055, neigh=2.049878, align=3.442271, entropy=9.248457,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920397, edge=0.003054, neigh=2.053301, align=3.437358, entropy=9.247691,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920224, edge=0.003054, neigh=2.055745, align=3.433451, entropy=9.247287,s=1.000000, s_hat=1.000000
Time for optimization: 28.92s
Test results:
Top-1: 0.385
Top-10: 0.767
Top-30: 0.854
Top-50: 0.867
Top-100: 0.887
MRR: 0.511
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.072s
Time for attribute perturbation: 0.066s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.58it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.26it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.25it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.29it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.26it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.29it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.25it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.29it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.34it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.28it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.38it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.63it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.56it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:17,  4.95it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:17,  4.82it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.64it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.46it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.42it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.29it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.19it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.26it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.24it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.19it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.17it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.29it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.32it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.31it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.45it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.31it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.20it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  2.91it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.07it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.17it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.43it/s]
Time for cost matrix: 10.10s
Iter 0: wasserstein=1.392053, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950991, edge=0.002759, neigh=2.122636, align=3.031755, entropy=9.993918,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923697, edge=0.002970, neigh=2.027504, align=3.460490, entropy=9.322940,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921775, edge=0.003022, neigh=2.029157, align=3.531377, entropy=9.210725,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921531, edge=0.003026, neigh=2.025004, align=3.553983, entropy=9.168669,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921259, edge=0.003019, neigh=2.026337, align=3.566361, entropy=9.141730,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921005, edge=0.003015, neigh=2.027643, align=3.575095, entropy=9.122135,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920772, edge=0.003014, neigh=2.031780, align=3.570714, entropy=9.118972,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920570, edge=0.003013, neigh=2.034864, align=3.565831, entropy=9.118330,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920401, edge=0.003013, neigh=2.037275, align=3.562030, entropy=9.117927,s=1.000000, s_hat=1.000000
Time for optimization: 30.27s
Test results:
Top-1: 0.556
Top-10: 0.823
Top-30: 0.880
Top-50: 0.890
Top-100: 0.909
MRR: 0.648
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.057s
Time for attribute perturbation: 0.082s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.04it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.38it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.30it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.34it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.18it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.17it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.32it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.23it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.24it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.32it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.68it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.59it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.41it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.37it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.43it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.40it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.46it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.45it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.30it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.40it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.33it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.30it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.25it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.18it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:18,  4.07it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:18,  3.92it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.11it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.07it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.03it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.12it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.32it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.01it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.89it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.19it/s]
Time for cost matrix: 10.55s
Iter 0: wasserstein=1.391723, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.949139, edge=0.002734, neigh=2.113793, align=3.049477, entropy=9.977802,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.921447, edge=0.002943, neigh=2.024792, align=3.479775, entropy=9.301798,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.919509, edge=0.003005, neigh=2.022808, align=3.552624, entropy=9.187940,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919393, edge=0.003021, neigh=2.016598, align=3.574184, entropy=9.147745,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919218, edge=0.003017, neigh=2.016013, align=3.584335, entropy=9.123351,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.918979, edge=0.003012, neigh=2.015476, align=3.591046, entropy=9.106030,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918795, edge=0.003009, neigh=2.016114, align=3.595860, entropy=9.093428,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918636, edge=0.003007, neigh=2.016800, align=3.600251, entropy=9.083245,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918440, edge=0.003007, neigh=2.019606, align=3.598315, entropy=9.080971,s=1.000000, s_hat=1.000000
Time for optimization: 32.30s
Test results:
Top-1: 0.579
Top-10: 0.836
Top-30: 0.884
Top-50: 0.896
Top-100: 0.916
MRR: 0.669
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.086s
Time for attribute perturbation: 0.061s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:26,  3.67it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:25,  3.88it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.06it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.18it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.24it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.29it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.28it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.39it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.44it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.50it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.40it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.24it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.22it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.26it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.29it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.27it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.18it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.16it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.29it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.17it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.21it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.26it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.21it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.61it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.63it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:16,  4.49it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:14,  5.05it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:14,  4.98it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.67it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.27it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.51it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.56it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  2.94it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.44it/s]
Time for cost matrix: 9.98s
Iter 0: wasserstein=1.389679, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.948979, edge=0.002731, neigh=2.120451, align=3.030302, entropy=9.994422,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.921914, edge=0.002959, neigh=2.023550, align=3.453218, entropy=9.330085,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920006, edge=0.003024, neigh=2.022317, align=3.522141, entropy=9.219384,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919871, edge=0.003041, neigh=2.017026, align=3.540954, entropy=9.181370,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919662, edge=0.003034, neigh=2.017722, align=3.550714, entropy=9.157353,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919396, edge=0.003028, neigh=2.019444, align=3.558385, entropy=9.139147,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.919176, edge=0.003026, neigh=2.024045, align=3.553206, entropy=9.136994,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.919008, edge=0.003025, neigh=2.027432, align=3.547603, entropy=9.137204,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918862, edge=0.003024, neigh=2.029869, align=3.543208, entropy=9.137450,s=1.000000, s_hat=1.000000
Time for optimization: 29.95s
Test results:
Top-1: 0.525
Top-10: 0.813
Top-30: 0.875
Top-50: 0.891
Top-100: 0.909
MRR: 0.622
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.099s
Time for attribute perturbation: 0.061s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.38it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.44it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.75it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.65it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.29it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.24it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.37it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.49it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.46it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.47it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.39it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.42it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:20,  4.23it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.14it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.08it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.49it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.40it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.48it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.38it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.25it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.50it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:17,  4.47it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.46it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.43it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.37it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.23it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.25it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.12it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.23it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.19it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:25,  1.92it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:18,  2.61it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:15,  2.99it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.09it/s]
Time for cost matrix: 10.43s
Iter 0: wasserstein=1.387271, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.951260, edge=0.002755, neigh=2.146943, align=2.982985, entropy=10.053690,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923905, edge=0.002987, neigh=2.050569, align=3.387864, entropy=9.399856,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921553, edge=0.003054, neigh=2.059960, align=3.455616, entropy=9.286740,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921214, edge=0.003062, neigh=2.059527, align=3.475469, entropy=9.246948,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.920933, edge=0.003055, neigh=2.063411, align=3.485180, entropy=9.222728,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920624, edge=0.003051, neigh=2.070070, align=3.478635, entropy=9.219074,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920380, edge=0.003049, neigh=2.074897, align=3.471726, entropy=9.218614,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920178, edge=0.003046, neigh=2.078227, align=3.466534, entropy=9.218281,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920011, edge=0.003044, neigh=2.080745, align=3.462699, entropy=9.217857,s=1.000000, s_hat=1.000000
Time for optimization: 48.71s
Test results:
Top-1: 0.450
Top-10: 0.796
Top-30: 0.864
Top-50: 0.876
Top-100: 0.896
MRR: 0.564
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.060s
Time for attribute perturbation: 0.114s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:29,  3.37it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.38it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.45it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.73it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:16,  5.63it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:15,  6.11it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.29it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:23,  3.84it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:27,  3.34it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:29,  3.02it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:28,  3.08it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:31,  2.82it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:33,  2.61it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:32,  2.63it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:30,  2.81it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:30,  2.76it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:31,  2.67it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:31,  2.64it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:29,  2.76it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:24,  3.23it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:22,  3.53it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:26,  2.98it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:29,  2.59it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:29,  2.58it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:26,  2.79it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:24,  2.99it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:22,  3.29it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:19,  3.79it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:16,  4.28it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:22,  3.19it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:24,  1.97it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:30,  1.58it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:32,  1.45it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:42,  1.09it/s]
Time for cost matrix: 14.56s
Iter 0: wasserstein=1.384677, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952544, edge=0.002749, neigh=2.164469, align=2.945255, entropy=10.098755,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925714, edge=0.003003, neigh=2.065999, align=3.315432, entropy=9.477427,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923534, edge=0.003074, neigh=2.069352, align=3.367543, entropy=9.378254,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923042, edge=0.003073, neigh=2.068328, align=3.384443, entropy=9.339501,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922601, edge=0.003060, neigh=2.071421, align=3.394115, entropy=9.314552,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922253, edge=0.003055, neigh=2.076831, align=3.387070, entropy=9.311075,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922013, edge=0.003052, neigh=2.080643, align=3.379556, entropy=9.310985,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921811, edge=0.003049, neigh=2.083420, align=3.374010, entropy=9.310837,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921636, edge=0.003048, neigh=2.085448, align=3.369952, entropy=9.310541,s=1.000000, s_hat=1.000000
Time for optimization: 49.44s
Test results:
Top-1: 0.308
Top-10: 0.723
Top-30: 0.827
Top-50: 0.846
Top-100: 0.866
MRR: 0.436
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.081s
Time for attribute perturbation: 0.068s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:39,  2.53it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:40,  2.40it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:45,  2.12it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:40,  2.37it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:02<00:37,  2.53it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:39,  2.40it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:39,  2.36it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:03<00:37,  2.43it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:31,  2.86it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:25,  3.51it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:04<00:27,  3.28it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:32,  2.74it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:05<00:34,  2.51it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:05<00:30,  2.84it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:27,  3.06it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:25,  3.25it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:06<00:23,  3.53it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:20,  4.03it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:18,  4.42it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:18,  4.23it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:20,  3.88it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:21,  3.59it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:22,  3.48it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:20,  3.74it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:19,  3.84it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:18,  3.91it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:17,  4.19it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:16,  4.43it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:18,  3.79it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:23,  3.08it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.39it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:35,  1.35it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:34,  1.37it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:44,  1.06it/s]
Time for cost matrix: 15.64s
Iter 0: wasserstein=1.385609, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.954471, edge=0.002768, neigh=2.158498, align=2.936066, entropy=10.113563,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.927311, edge=0.003010, neigh=2.057706, align=3.309116, entropy=9.487552,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.925157, edge=0.003076, neigh=2.060523, align=3.359181, entropy=9.390158,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.924713, edge=0.003070, neigh=2.056927, align=3.375528, entropy=9.352051,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.924296, edge=0.003054, neigh=2.057529, align=3.383877, entropy=9.328117,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923919, edge=0.003048, neigh=2.062298, align=3.375773, entropy=9.324923,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.923646, edge=0.003046, neigh=2.066158, align=3.367297, entropy=9.325241,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.923432, edge=0.003044, neigh=2.068994, align=3.360859, entropy=9.325635,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.923252, edge=0.003043, neigh=2.071012, align=3.356156, entropy=9.325732,s=1.000000, s_hat=1.000000
Time for optimization: 37.45s
Test results:
Top-1: 0.315
Top-10: 0.716
Top-30: 0.828
Top-50: 0.839
Top-100: 0.858
MRR: 0.442
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.080s
Time for attribute perturbation: 0.064s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:13,  7.19it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.13it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.20it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.17it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  6.81it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:12,  7.59it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.36it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.26it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  6.88it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:14,  6.25it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:17,  5.11it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  5.78it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.13it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.95it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.60it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:15,  5.18it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:16,  4.84it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:17,  4.61it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:17,  4.54it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:16,  4.60it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:16,  4.57it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:18,  4.22it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:18,  4.08it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:18,  4.03it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:17,  4.07it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:17,  4.18it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:15,  4.49it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  5.04it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.59it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.55it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.84it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.77it/s]
Time for cost matrix: 8.67s
Iter 0: wasserstein=1.383105, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952578, edge=0.002734, neigh=2.192377, align=2.948402, entropy=10.103326,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925734, edge=0.002968, neigh=2.089002, align=3.301631, entropy=9.496403,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923438, edge=0.003060, neigh=2.097584, align=3.345672, entropy=9.402258,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923047, edge=0.003076, neigh=2.096921, align=3.356654, entropy=9.368258,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922720, edge=0.003073, neigh=2.104166, align=3.344799, entropy=9.365275,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922413, edge=0.003066, neigh=2.110023, align=3.334009, entropy=9.365629,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922176, edge=0.003062, neigh=2.114352, align=3.325665, entropy=9.366362,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921986, edge=0.003059, neigh=2.117607, align=3.319536, entropy=9.366746,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921824, edge=0.003058, neigh=2.120066, align=3.315010, entropy=9.366823,s=1.000000, s_hat=1.000000
Time for optimization: 30.35s
Test results:
Top-1: 0.274
Top-10: 0.695
Top-30: 0.820
Top-50: 0.834
Top-100: 0.850
MRR: 0.402
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.084s
Time for attribute perturbation: 0.061s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.71it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.70it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.78it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.26it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.04it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:14,  6.39it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.61it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.36it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.60it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.69it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:17,  5.07it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:16,  5.27it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:17,  5.03it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:19,  4.49it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:19,  4.33it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.34it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.18it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.39it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:18,  4.40it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.64it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:15,  5.06it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:14,  5.30it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:12,  5.99it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:13,  5.66it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:13,  5.43it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:15,  4.87it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.64it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.72it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  5.03it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  4.93it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.38it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.02it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.81it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  2.03it/s]
Time for cost matrix: 8.99s
Iter 0: wasserstein=1.384548, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953557, edge=0.002768, neigh=2.169093, align=2.938597, entropy=10.112160,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926222, edge=0.002988, neigh=2.073093, align=3.311459, entropy=9.485199,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924029, edge=0.003076, neigh=2.083069, align=3.356536, entropy=9.391944,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923595, edge=0.003080, neigh=2.082357, align=3.368457, entropy=9.357836,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923163, edge=0.003066, neigh=2.085803, align=3.374658, entropy=9.335788,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922778, edge=0.003060, neigh=2.091340, align=3.366644, entropy=9.332843,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922508, edge=0.003057, neigh=2.095569, align=3.358413, entropy=9.333205,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922298, edge=0.003055, neigh=2.098648, align=3.352246, entropy=9.333525,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922121, edge=0.003054, neigh=2.100794, align=3.347758, entropy=9.333554,s=1.000000, s_hat=1.000000
Time for optimization: 32.74s
Test results:
Top-1: 0.294
Top-10: 0.717
Top-30: 0.821
Top-50: 0.838
Top-100: 0.856
MRR: 0.424
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.061s
Time for attribute perturbation: 0.087s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.47it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.51it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.53it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.42it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.49it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.19it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.15it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.24it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.07it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  4.00it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.65it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.73it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.78it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.50it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.53it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.35it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.68it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:17,  4.79it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:16,  4.85it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.64it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.50it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.48it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.28it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.31it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.41it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.27it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.26it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.20it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.10it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.23it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.45it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.82it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.51it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  1.96it/s]
Time for cost matrix: 10.34s
Iter 0: wasserstein=1.385761, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953291, edge=0.002773, neigh=2.140926, align=2.946294, entropy=10.099469,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926099, edge=0.003005, neigh=2.041944, align=3.330256, entropy=9.465150,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923887, edge=0.003061, neigh=2.042469, align=3.382949, entropy=9.364810,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923412, edge=0.003060, neigh=2.040997, align=3.399662, entropy=9.325829,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922996, edge=0.003047, neigh=2.043616, align=3.408077, entropy=9.301846,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922637, edge=0.003044, neigh=2.049123, align=3.400245, entropy=9.298731,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922378, edge=0.003042, neigh=2.053294, align=3.392354, entropy=9.298788,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922169, edge=0.003040, neigh=2.056197, align=3.386450, entropy=9.298882,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921996, edge=0.003039, neigh=2.058320, align=3.382037, entropy=9.298860,s=1.000000, s_hat=1.000000
Time for optimization: 30.46s
Test results:
Top-1: 0.332
Top-10: 0.741
Top-30: 0.835
Top-50: 0.846
Top-100: 0.863
MRR: 0.460
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.056s
Time for attribute perturbation: 0.063s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.11it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.35it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.26it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.17it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.25it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.19it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.07it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:23,  3.97it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.10it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  4.09it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.23it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.19it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.22it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.24it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.62it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:13,  6.29it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:14,  5.74it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:15,  5.30it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:16,  4.91it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:16,  4.70it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.50it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:16,  4.58it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.53it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.51it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.15it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.15it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.13it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.14it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.26it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.80it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.76it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.60it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.08it/s]
Time for cost matrix: 10.31s
Iter 0: wasserstein=1.386938, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.954208, edge=0.002750, neigh=2.155287, align=2.940836, entropy=10.100481,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.927256, edge=0.002980, neigh=2.057131, align=3.316345, entropy=9.474636,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.925024, edge=0.003062, neigh=2.068339, align=3.372936, entropy=9.371115,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.924624, edge=0.003067, neigh=2.071494, align=3.392239, entropy=9.331054,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.924256, edge=0.003056, neigh=2.077842, align=3.402582, entropy=9.306158,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923919, edge=0.003051, neigh=2.084666, align=3.395869, entropy=9.302550,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.923666, edge=0.003048, neigh=2.089572, align=3.388417, entropy=9.302515,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.923474, edge=0.003045, neigh=2.093228, align=3.382500, entropy=9.302821,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.923315, edge=0.003043, neigh=2.095840, align=3.377981, entropy=9.303003,s=1.000000, s_hat=1.000000
Time for optimization: 30.34s
Test results:
Top-1: 0.319
Top-10: 0.744
Top-30: 0.846
Top-50: 0.856
Top-100: 0.869
MRR: 0.454
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.060s
Time for attribute perturbation: 0.063s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.12it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  4.02it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.09it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.10it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  4.09it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.17it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.25it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.31it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.16it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.39it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:17,  5.17it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  5.12it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:17,  4.84it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.60it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.44it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.48it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.21it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.31it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.42it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.57it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.64it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.59it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:16,  4.65it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.49it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.43it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.35it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.19it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.17it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.28it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.26it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:29,  1.66it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:22,  2.10it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.70it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:26,  1.74it/s]
Time for cost matrix: 10.28s
Iter 0: wasserstein=1.384039, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953558, edge=0.002765, neigh=2.182262, align=2.922185, entropy=10.123868,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926447, edge=0.002989, neigh=2.080573, align=3.299500, entropy=9.495885,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924281, edge=0.003070, neigh=2.087294, align=3.347288, entropy=9.400549,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923874, edge=0.003079, neigh=2.087624, align=3.361045, entropy=9.365053,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923493, edge=0.003070, neigh=2.091743, align=3.367531, entropy=9.343024,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923108, edge=0.003065, neigh=2.098843, align=3.359599, entropy=9.339714,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922831, edge=0.003062, neigh=2.104170, align=3.351694, entropy=9.339597,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922609, edge=0.003060, neigh=2.107737, align=3.345837, entropy=9.339533,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922426, edge=0.003058, neigh=2.110206, align=3.341521, entropy=9.339346,s=1.000000, s_hat=1.000000
Time for optimization: 30.18s
Test results:
Top-1: 0.284
Top-10: 0.713
Top-30: 0.822
Top-50: 0.837
Top-100: 0.854
MRR: 0.417
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.062s
Time for attribute perturbation: 0.075s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.24it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  4.03it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.06it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.04it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  4.06it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  4.04it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:23,  4.02it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.24it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.14it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.15it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.17it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.03it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:21,  4.13it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.44it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.26it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.29it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.33it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.29it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.19it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.51it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:15,  5.20it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:13,  5.64it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:13,  5.62it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:14,  5.33it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:15,  4.87it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:15,  4.76it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:15,  4.82it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:13,  5.23it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:13,  5.17it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.39it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  4.06it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.16it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.93it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.38it/s]
Time for cost matrix: 9.84s
Iter 0: wasserstein=1.386565, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952888, edge=0.002758, neigh=2.158239, align=2.953454, entropy=10.095839,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925566, edge=0.002987, neigh=2.053041, align=3.327127, entropy=9.467511,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923265, edge=0.003058, neigh=2.057940, align=3.380442, entropy=9.366169,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922833, edge=0.003066, neigh=2.055174, align=3.399004, entropy=9.325825,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922433, edge=0.003054, neigh=2.057324, align=3.410803, entropy=9.298817,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922083, edge=0.003050, neigh=2.062096, align=3.404346, entropy=9.294778,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921852, edge=0.003048, neigh=2.065682, align=3.396827, entropy=9.294804,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921671, edge=0.003046, neigh=2.068413, align=3.391104, entropy=9.294900,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921511, edge=0.003044, neigh=2.070476, align=3.386898, entropy=9.294738,s=1.000000, s_hat=1.000000
Time for optimization: 51.31s
Test results:
Top-1: 0.333
Top-10: 0.745
Top-30: 0.841
Top-50: 0.857
Top-100: 0.876
MRR: 0.462
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.074s
Time for attribute perturbation: 0.088s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:57,  1.73it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:40,  2.39it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:41,  2.34it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:40,  2.37it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:02<00:37,  2.55it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:32,  2.89it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:33,  2.77it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:03<00:35,  2.61it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:35,  2.57it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:25,  3.47it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:26,  3.36it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:27,  3.13it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:05<00:32,  2.65it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:29,  2.85it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:27,  3.02it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:24,  3.32it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:21,  3.82it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:17,  4.65it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:16,  4.72it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:18,  4.19it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:20,  3.84it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:22,  3.44it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:22,  3.38it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:22,  3.33it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:20,  3.54it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:19,  3.67it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:18,  3.87it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:19,  3.70it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:22,  3.11it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:40,  1.21it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:28,  1.69it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:34,  1.36it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:42,  1.10it/s]
Time for cost matrix: 15.25s
Iter 0: wasserstein=1.381778, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953540, edge=0.002777, neigh=2.195388, align=2.917409, entropy=10.135886,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926579, edge=0.003023, neigh=2.099059, align=3.281904, entropy=9.517942,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924147, edge=0.003093, neigh=2.111179, align=3.329649, entropy=9.419670,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923519, edge=0.003092, neigh=2.114825, align=3.346293, entropy=9.379554,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923071, edge=0.003084, neigh=2.123110, align=3.337108, entropy=9.373742,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922691, edge=0.003075, neigh=2.128227, align=3.327743, entropy=9.372526,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922411, edge=0.003070, neigh=2.131964, align=3.319984, entropy=9.372515,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922208, edge=0.003068, neigh=2.135121, align=3.313880, entropy=9.372722,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922029, edge=0.003066, neigh=2.137413, align=3.309445, entropy=9.372584,s=1.000000, s_hat=1.000000
Time for optimization: 51.35s
Test results:
Top-1: 0.233
Top-10: 0.674
Top-30: 0.812
Top-50: 0.826
Top-100: 0.842
MRR: 0.368
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.075s
Time for attribute perturbation: 0.075s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:31,  3.19it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:29,  3.36it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:27,  3.49it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:28,  3.34it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:24,  3.95it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  3.97it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.31it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:16,  5.38it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:15,  5.71it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.79it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.34it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:22,  3.93it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:23,  3.71it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:23,  3.69it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:25,  3.30it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:29,  2.82it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:28,  2.92it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:28,  2.85it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:31,  2.54it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:29,  2.67it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:23,  3.37it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:21,  3.58it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:06<00:23,  3.17it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:25,  2.89it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:07<00:26,  2.77it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:24,  2.97it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:22,  3.25it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:25,  2.82it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:22,  3.18it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  3.00it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:19,  2.52it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.37it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:28,  1.64it/s]
Time for cost matrix: 13.42s
Iter 0: wasserstein=1.382884, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.954324, edge=0.002807, neigh=2.182405, align=2.909874, entropy=10.140696,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.927117, edge=0.003031, neigh=2.085801, align=3.284592, entropy=9.513008,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924669, edge=0.003092, neigh=2.096927, align=3.334374, entropy=9.413598,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.924164, edge=0.003087, neigh=2.098629, align=3.349926, entropy=9.375395,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923735, edge=0.003077, neigh=2.106835, align=3.340517, entropy=9.369967,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923347, edge=0.003068, neigh=2.112446, align=3.330836, entropy=9.368958,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.923065, edge=0.003063, neigh=2.116470, align=3.322915, entropy=9.369066,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922855, edge=0.003060, neigh=2.119684, align=3.317005, entropy=9.369096,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922677, edge=0.003057, neigh=2.122137, align=3.312740, entropy=9.368834,s=1.000000, s_hat=1.000000
Time for optimization: 36.23s
Test results:
Top-1: 0.250
Top-10: 0.682
Top-30: 0.810
Top-50: 0.823
Top-100: 0.837
MRR: 0.380
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.065s
Time for attribute perturbation: 0.048s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  5.18it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  4.96it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.20it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:14,  6.59it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  8.29it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:09,  9.14it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  8.05it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.10it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.52it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:11,  7.34it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.43it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:10,  7.79it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:10,  7.74it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.13it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.78it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:10,  7.22it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.23it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.24it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.79it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.35it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  7.79it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.84it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.98it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.16it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.91it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.46it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.68it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.73it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.92it/s]
Time for cost matrix: 7.50s
Iter 0: wasserstein=1.378387, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953441, edge=0.002791, neigh=2.252976, align=2.907535, entropy=10.155574,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926417, edge=0.003028, neigh=2.159687, align=3.263653, entropy=9.541120,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923825, edge=0.003094, neigh=2.176086, align=3.309841, entropy=9.442315,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923233, edge=0.003102, neigh=2.193792, align=3.295810, entropy=9.433462,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922784, edge=0.003093, neigh=2.204000, align=3.280640, entropy=9.433419,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922391, edge=0.003082, neigh=2.210484, align=3.269262, entropy=9.433518,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922096, edge=0.003076, neigh=2.215355, align=3.260462, entropy=9.433914,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921851, edge=0.003072, neigh=2.219174, align=3.254182, entropy=9.433828,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921647, edge=0.003069, neigh=2.222198, align=3.249461, entropy=9.433630,s=1.000000, s_hat=1.000000
Time for optimization: 31.72s
Test results:
Top-1: 0.148
Top-10: 0.593
Top-30: 0.768
Top-50: 0.783
Top-100: 0.796
MRR: 0.276
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.088s
Time for attribute perturbation: 0.078s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.14it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:26,  3.76it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.07it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.18it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:17,  5.33it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:16,  5.53it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:18,  5.06it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.43it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.09it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  4.04it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.10it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.18it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.77it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:17,  4.96it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:17,  5.00it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:17,  4.75it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.60it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:17,  4.59it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:16,  4.84it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:16,  4.85it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.64it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.34it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.27it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.18it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.18it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.20it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.18it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.14it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.12it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.29it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.22it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:20,  2.37it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.25it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.91it/s]
Time for cost matrix: 10.37s
Iter 0: wasserstein=1.377463, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953248, edge=0.002807, neigh=2.261736, align=2.891542, entropy=10.168649,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926194, edge=0.003040, neigh=2.164635, align=3.250945, entropy=9.552590,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923632, edge=0.003101, neigh=2.183049, align=3.296659, entropy=9.454738,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923084, edge=0.003107, neigh=2.202832, align=3.282884, entropy=9.445943,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922614, edge=0.003095, neigh=2.214339, align=3.268938, entropy=9.444732,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922186, edge=0.003083, neigh=2.221585, align=3.258633, entropy=9.443894,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921870, edge=0.003078, neigh=2.226914, align=3.250345, entropy=9.443933,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921643, edge=0.003075, neigh=2.231434, align=3.243863, entropy=9.444189,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921450, edge=0.003073, neigh=2.234928, align=3.239142, entropy=9.444101,s=1.000000, s_hat=1.000000
Time for optimization: 30.91s
Test results:
Top-1: 0.138
Top-10: 0.577
Top-30: 0.754
Top-50: 0.773
Top-100: 0.789
MRR: 0.264
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.051s
Time for attribute perturbation: 0.027s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.88it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.40it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:16,  5.71it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.36it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  8.18it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  7.95it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.57it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.33it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.82it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.07it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.54it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:11,  7.29it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.61it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:10,  8.10it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  7.43it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:12,  6.49it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:13,  5.74it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:14,  5.28it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:14,  5.30it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:14,  5.16it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:15,  4.91it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:16,  4.66it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:15,  4.76it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:13,  5.31it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:13,  5.26it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.74it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.00it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.58it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:18,  2.65it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.28it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.90it/s]
Time for cost matrix: 8.58s
Iter 0: wasserstein=1.381602, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953910, edge=0.002791, neigh=2.214906, align=2.918188, entropy=10.144770,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926510, edge=0.003025, neigh=2.119410, align=3.279136, entropy=9.524305,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923940, edge=0.003086, neigh=2.130570, align=3.326757, entropy=9.424321,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923211, edge=0.003078, neigh=2.132853, align=3.345223, entropy=9.381982,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922737, edge=0.003074, neigh=2.142122, align=3.335104, entropy=9.376757,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922340, edge=0.003067, neigh=2.148753, align=3.325183, entropy=9.375823,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922051, edge=0.003063, neigh=2.153624, align=3.317319, entropy=9.375801,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921841, edge=0.003060, neigh=2.157499, align=3.311346, entropy=9.375821,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921658, edge=0.003058, neigh=2.160327, align=3.307044, entropy=9.375518,s=1.000000, s_hat=1.000000
Time for optimization: 29.51s
Test results:
Top-1: 0.190
Top-10: 0.634
Top-30: 0.791
Top-50: 0.808
Top-100: 0.826
MRR: 0.318
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.088s
Time for attribute perturbation: 0.078s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.86it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.84it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.50it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.51it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.47it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:15,  6.01it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  6.73it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.78it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.42it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.10it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.65it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:13,  6.53it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:12,  6.90it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  6.09it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.21it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:15,  5.55it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.44it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:14,  5.56it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  5.88it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:14,  5.43it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:13,  5.81it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.67it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:13,  5.82it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:13,  5.82it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:14,  5.27it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:14,  5.02it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:15,  4.79it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.73it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:15,  4.46it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.23it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  3.03it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.23it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.64it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.24it/s]
Time for cost matrix: 8.97s
Iter 0: wasserstein=1.378013, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953284, edge=0.002804, neigh=2.255490, align=2.904943, entropy=10.161618,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926039, edge=0.003033, neigh=2.167461, align=3.262265, entropy=9.544517,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923439, edge=0.003095, neigh=2.188180, align=3.307140, entropy=9.446960,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922820, edge=0.003100, neigh=2.207493, align=3.292864, entropy=9.437872,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922310, edge=0.003089, neigh=2.218778, align=3.277620, entropy=9.437196,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921866, edge=0.003079, neigh=2.225920, align=3.266550, entropy=9.436678,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921538, edge=0.003074, neigh=2.231064, align=3.258072, entropy=9.436654,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921295, edge=0.003071, neigh=2.235144, align=3.251652, entropy=9.436668,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921084, edge=0.003068, neigh=2.238189, align=3.247077, entropy=9.436301,s=1.000000, s_hat=1.000000
Time for optimization: 33.41s
Test results:
Top-1: 0.140
Top-10: 0.596
Top-30: 0.766
Top-50: 0.781
Top-100: 0.792
MRR: 0.272
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.055s
Time for attribute perturbation: 0.083s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.10it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.47it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.44it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.31it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.26it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.42it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.24it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.42it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.53it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.51it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.47it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.29it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:20,  4.28it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.60it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:17,  4.74it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:17,  4.75it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.78it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:17,  4.63it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.45it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.40it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.37it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.35it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.28it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.39it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:18,  4.16it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.26it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.18it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.11it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.13it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.21it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.92it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.64it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.30it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.47it/s]
Time for cost matrix: 10.15s
Iter 0: wasserstein=1.381108, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.954627, edge=0.002783, neigh=2.216455, align=2.907914, entropy=10.150615,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.927655, edge=0.003022, neigh=2.119998, align=3.263493, entropy=9.538876,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.925184, edge=0.003084, neigh=2.131567, align=3.310006, entropy=9.441758,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.924512, edge=0.003080, neigh=2.135851, align=3.326099, entropy=9.402093,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.924080, edge=0.003075, neigh=2.146228, align=3.315009, entropy=9.397999,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923691, edge=0.003068, neigh=2.153133, align=3.303994, entropy=9.397825,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.923390, edge=0.003064, neigh=2.158131, align=3.295351, entropy=9.398153,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.923158, edge=0.003061, neigh=2.162060, align=3.289027, entropy=9.398224,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922958, edge=0.003059, neigh=2.164855, align=3.284514, entropy=9.397956,s=1.000000, s_hat=1.000000
Time for optimization: 30.63s
Test results:
Top-1: 0.174
Top-10: 0.622
Top-30: 0.778
Top-50: 0.798
Top-100: 0.817
MRR: 0.307
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.077s
Time for attribute perturbation: 0.073s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.24it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.27it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.63it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.97it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:18,  5.21it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:17,  5.37it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  5.98it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:16,  5.69it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:20,  4.48it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  3.95it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:24,  3.66it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:23,  3.71it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:22,  3.81it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:21,  3.93it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.10it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:21,  3.83it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:23,  3.57it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:23,  3.42it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:24,  3.29it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:24,  3.25it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:21,  3.61it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:20,  3.76it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:21,  3.64it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:06<00:21,  3.58it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:06<00:22,  3.40it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:22,  3.24it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:22,  3.27it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:07<00:22,  3.14it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:22,  3.10it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:19,  3.62it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:28,  1.75it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:28,  1.66it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:27,  1.74it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:33,  1.40it/s]
Time for cost matrix: 12.63s
Iter 0: wasserstein=1.379903, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.954907, edge=0.002790, neigh=2.243676, align=2.902225, entropy=10.161570,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.927653, edge=0.003031, neigh=2.153408, align=3.257402, entropy=9.547494,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.925027, edge=0.003090, neigh=2.170791, align=3.301585, entropy=9.450952,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.924446, edge=0.003099, neigh=2.189225, align=3.286493, entropy=9.443018,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923964, edge=0.003090, neigh=2.199576, align=3.271842, entropy=9.442236,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923532, edge=0.003079, neigh=2.206128, align=3.261320, entropy=9.441450,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.923217, edge=0.003073, neigh=2.211200, align=3.253039, entropy=9.441376,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922975, edge=0.003070, neigh=2.215317, align=3.246818, entropy=9.441271,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922767, edge=0.003067, neigh=2.218363, align=3.242287, entropy=9.440928,s=1.000000, s_hat=1.000000
Time for optimization: 58.98s
Test results:
Top-1: 0.162
Top-10: 0.613
Top-30: 0.773
Top-50: 0.789
Top-100: 0.804
MRR: 0.294
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.086s
Time for attribute perturbation: 0.090s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:26,  3.72it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.51it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.24it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.55it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:16,  5.73it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:18,  5.08it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.49it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:24,  3.73it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:30,  2.94it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:34,  2.59it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:31,  2.82it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:33,  2.61it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:34,  2.51it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:30,  2.86it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:28,  2.96it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:31,  2.69it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:30,  2.69it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:28,  2.89it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:29,  2.79it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:31,  2.51it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:33,  2.34it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:29,  2.61it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:27,  2.78it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:25,  2.99it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:23,  3.23it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:21,  3.44it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:21,  3.41it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:21,  3.32it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:21,  3.34it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:23,  3.03it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:01<01:05,  1.35s/it]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:43,  1.10it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:43,  1.07it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:53,  1.15s/it]
Time for cost matrix: 15.31s
Iter 0: wasserstein=1.378273, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953758, edge=0.002786, neigh=2.232762, align=2.899689, entropy=10.160067,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926983, edge=0.003028, neigh=2.135984, align=3.256408, entropy=9.548952,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924403, edge=0.003095, neigh=2.151274, align=3.301405, entropy=9.451880,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923763, edge=0.003100, neigh=2.170855, align=3.287783, entropy=9.442536,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923283, edge=0.003090, neigh=2.182189, align=3.272679, entropy=9.442257,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922859, edge=0.003079, neigh=2.189472, align=3.261503, entropy=9.442028,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922534, edge=0.003073, neigh=2.194787, align=3.252846, entropy=9.442184,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922300, edge=0.003071, neigh=2.199141, align=3.246010, entropy=9.442570,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922095, edge=0.003068, neigh=2.202459, align=3.241181, entropy=9.442404,s=1.000000, s_hat=1.000000
Time for optimization: 51.91s
Test results:
Top-1: 0.160
Top-10: 0.605
Top-30: 0.774
Top-50: 0.789
Top-100: 0.802
MRR: 0.287
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.134s
Time for attribute perturbation: 0.146s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:30,  3.25it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:28,  3.47it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:33,  2.89it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:37,  2.55it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:34,  2.75it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:32,  2.89it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:30,  3.05it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:28,  3.19it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:27,  3.34it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:27,  3.27it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:26,  3.38it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:22,  3.96it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:23,  3.72it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:24,  3.54it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:25,  3.37it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:24,  3.47it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:23,  3.48it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:21,  3.78it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:18,  4.30it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:17,  4.53it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:19,  4.15it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:18,  4.12it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:18,  4.20it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:06<00:17,  4.35it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:06<00:17,  4.37it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:07<00:17,  4.28it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:16,  4.35it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:07<00:16,  4.43it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:16,  4.35it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:19,  3.59it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  2.98it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.91it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.87it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.24it/s]
Time for cost matrix: 11.64s
Iter 0: wasserstein=1.380855, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.954755, edge=0.002782, neigh=2.215252, align=2.905292, entropy=10.153160,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.927656, edge=0.003019, neigh=2.121762, align=3.263586, entropy=9.538611,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.925268, edge=0.003090, neigh=2.132730, align=3.304823, entropy=9.446367,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.924618, edge=0.003084, neigh=2.134123, align=3.318682, entropy=9.409055,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.924183, edge=0.003078, neigh=2.142952, align=3.306954, entropy=9.405559,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923818, edge=0.003070, neigh=2.149674, align=3.295972, entropy=9.405624,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.923538, edge=0.003065, neigh=2.154333, align=3.287394, entropy=9.406155,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.923321, edge=0.003062, neigh=2.157947, align=3.280939, entropy=9.406499,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.923129, edge=0.003060, neigh=2.160541, align=3.276298, entropy=9.406413,s=1.000000, s_hat=1.000000
Time for optimization: 32.13s
Test results:
Top-1: 0.184
Top-10: 0.643
Top-30: 0.787
Top-50: 0.803
Top-100: 0.817
MRR: 0.318
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.075s
Time for attribute perturbation: 0.060s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.38it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  4.01it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.11it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.09it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.15it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  4.06it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:23,  3.90it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:23,  3.95it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.09it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  3.96it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.11it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.16it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.34it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.40it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.44it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.54it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:18,  4.44it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.20it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:20,  4.00it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.10it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:18,  4.30it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.32it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.29it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.43it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.37it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.20it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.18it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.24it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.58it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.10it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  3.05it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.26it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.06it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.23it/s]
Time for cost matrix: 10.42s
Iter 0: wasserstein=1.378668, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.954107, edge=0.002781, neigh=2.246835, align=2.905461, entropy=10.157091,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.927020, edge=0.003026, neigh=2.145235, align=3.260547, entropy=9.542887,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924406, edge=0.003095, neigh=2.163286, align=3.304381, entropy=9.445891,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923900, edge=0.003102, neigh=2.183786, align=3.290350, entropy=9.437821,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923493, edge=0.003092, neigh=2.196684, align=3.275930, entropy=9.437677,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923104, edge=0.003081, neigh=2.204448, align=3.265301, entropy=9.437320,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922785, edge=0.003075, neigh=2.209777, align=3.257130, entropy=9.437130,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922536, edge=0.003072, neigh=2.213819, align=3.251028, entropy=9.436933,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922324, edge=0.003069, neigh=2.216856, align=3.246625, entropy=9.436506,s=1.000000, s_hat=1.000000
Time for optimization: 33.35s
Test results:
Top-1: 0.156
Top-10: 0.601
Top-30: 0.770
Top-50: 0.787
Top-100: 0.797
MRR: 0.282
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.072s
Time for attribute perturbation: 0.072s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.34it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.49it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.53it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.49it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.36it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.46it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.40it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:22,  4.02it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.08it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  4.08it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.11it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.09it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:21,  4.03it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.33it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.31it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.10it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:20,  3.96it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:20,  4.01it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:20,  3.99it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.11it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:18,  4.16it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.24it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.27it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.19it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.28it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:16,  4.38it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.27it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.28it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.25it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.07it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:24,  1.98it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.75it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.79it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.06it/s]
Time for cost matrix: 10.69s
Iter 0: wasserstein=1.380640, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.954409, edge=0.002772, neigh=2.238254, align=2.912962, entropy=10.146501,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.927516, edge=0.003014, neigh=2.136598, align=3.261834, entropy=9.540151,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.925094, edge=0.003088, neigh=2.149415, align=3.305860, entropy=9.444880,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.924412, edge=0.003085, neigh=2.153921, align=3.321649, entropy=9.405101,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923969, edge=0.003077, neigh=2.163637, align=3.311804, entropy=9.399880,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923597, edge=0.003070, neigh=2.170072, align=3.301862, entropy=9.399086,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.923320, edge=0.003065, neigh=2.174644, align=3.293963, entropy=9.399091,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.923094, edge=0.003062, neigh=2.177930, align=3.288193, entropy=9.398897,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922903, edge=0.003060, neigh=2.180249, align=3.283899, entropy=9.398585,s=1.000000, s_hat=1.000000
Time for optimization: 32.13s
Test results:
Top-1: 0.175
Top-10: 0.625
Top-30: 0.783
Top-50: 0.798
Top-100: 0.817
MRR: 0.306
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.054s
Time for attribute perturbation: 0.063s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:12,  7.62it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.29it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.80it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  6.86it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:10,  9.22it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:10,  8.78it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:11,  7.86it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  8.09it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:09,  9.08it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  9.60it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:09,  9.13it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:10,  8.39it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.79it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.75it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.80it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  6.09it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:14,  5.39it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:16,  4.68it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:17,  4.43it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:17,  4.29it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:17,  4.22it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:18,  4.15it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:17,  4.25it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:16,  4.36it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:17,  4.09it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:17,  4.14it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.55it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:32,  1.53it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:24,  1.93it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.35it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:26,  1.79it/s]
Time for cost matrix: 9.00s
Iter 0: wasserstein=1.374674, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.951856, edge=0.002787, neigh=2.294319, align=2.904543, entropy=10.163001,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.924863, edge=0.003025, neigh=2.196888, align=3.252529, entropy=9.554620,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922208, edge=0.003092, neigh=2.214574, align=3.294925, entropy=9.458757,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921606, edge=0.003099, neigh=2.233836, align=3.279380, entropy=9.451092,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921142, edge=0.003088, neigh=2.244745, align=3.263708, entropy=9.451179,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920723, edge=0.003077, neigh=2.251559, align=3.252500, entropy=9.450875,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920404, edge=0.003071, neigh=2.256388, align=3.243836, entropy=9.451006,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920158, edge=0.003068, neigh=2.260176, align=3.237371, entropy=9.451037,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.919943, edge=0.003065, neigh=2.263057, align=3.232836, entropy=9.450614,s=1.000000, s_hat=1.000000
Time for optimization: 32.72s
Test results:
Top-1: 0.094
Top-10: 0.528
Top-30: 0.736
Top-50: 0.761
Top-100: 0.774
MRR: 0.215
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.067s
Time for attribute perturbation: 0.065s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.24it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  3.93it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.07it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.03it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  4.12it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  4.07it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:23,  3.90it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:23,  3.98it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.02it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.14it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.14it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.16it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.20it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.14it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.14it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.07it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.30it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.20it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.19it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.09it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:18,  4.23it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.11it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.10it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.10it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:06<00:17,  4.17it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:16,  4.46it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.52it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.25it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.15it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.02it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.27it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.68it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.47it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  2.02it/s]
Time for cost matrix: 10.73s
Iter 0: wasserstein=1.373250, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.951549, edge=0.002786, neigh=2.311649, align=2.903408, entropy=10.167413,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.924401, edge=0.003027, neigh=2.215981, align=3.249990, entropy=9.557852,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921685, edge=0.003090, neigh=2.234870, align=3.295695, entropy=9.458151,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921033, edge=0.003099, neigh=2.254791, align=3.282189, entropy=9.448630,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.920544, edge=0.003088, neigh=2.266255, align=3.267654, entropy=9.447767,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920107, edge=0.003077, neigh=2.273565, align=3.257006, entropy=9.446943,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.919782, edge=0.003071, neigh=2.278868, align=3.248530, entropy=9.446871,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.919535, edge=0.003068, neigh=2.283028, align=3.242079, entropy=9.446868,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.919319, edge=0.003065, neigh=2.286147, align=3.237486, entropy=9.446484,s=1.000000, s_hat=1.000000
Time for optimization: 31.83s
Test results:
Top-1: 0.090
Top-10: 0.506
Top-30: 0.718
Top-50: 0.740
Top-100: 0.756
MRR: 0.206
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.037s
Time for attribute perturbation: 0.054s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.13it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.22it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.32it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.16it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  4.12it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  4.02it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:23,  4.03it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:22,  4.12it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.03it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  4.06it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.14it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.31it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.35it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.48it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.49it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.43it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.33it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.31it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.26it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.40it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.61it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:17,  4.38it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.20it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.15it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.22it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:18,  4.02it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.30it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.32it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.03it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.09it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:23,  2.08it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:26,  1.81it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.07it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:29,  1.60it/s]
Time for cost matrix: 11.17s
Iter 0: wasserstein=1.374836, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952717, edge=0.002770, neigh=2.317659, align=2.917819, entropy=10.151187,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925855, edge=0.003012, neigh=2.215554, align=3.256162, entropy=9.551090,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923319, edge=0.003090, neigh=2.237862, align=3.299018, entropy=9.455064,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922739, edge=0.003100, neigh=2.260764, align=3.284887, entropy=9.445982,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922237, edge=0.003087, neigh=2.272711, align=3.270510, entropy=9.444660,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921790, edge=0.003075, neigh=2.279530, align=3.259752, entropy=9.443865,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921463, edge=0.003069, neigh=2.284382, align=3.250971, entropy=9.444060,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921219, edge=0.003067, neigh=2.288244, align=3.244148, entropy=9.444366,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921008, edge=0.003064, neigh=2.291158, align=3.239183, entropy=9.444290,s=1.000000, s_hat=1.000000
Time for optimization: 54.43s
Test results:
Top-1: 0.100
Top-10: 0.517
Top-30: 0.734
Top-50: 0.758
Top-100: 0.771
MRR: 0.218
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.084s
Time for attribute perturbation: 0.071s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:43,  2.30it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:43,  2.24it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:36,  2.65it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:27,  3.48it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  4.06it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:28,  3.28it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:33,  2.76it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:32,  2.83it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:30,  3.01it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:26,  3.42it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:30,  2.92it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:33,  2.61it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:26,  3.31it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:23,  3.63it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:22,  3.80it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:20,  4.02it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:18,  4.56it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:19,  4.19it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:21,  3.71it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:22,  3.52it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:21,  3.65it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:21,  3.63it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:21,  3.58it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:20,  3.77it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:16,  4.44it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:07<00:16,  4.39it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:18,  4.00it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:07<00:17,  4.15it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:21,  3.33it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:21,  3.26it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:21,  2.31it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:50,  1.06s/it]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:38,  1.21it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:51,  1.10s/it]
Time for cost matrix: 15.46s
Iter 0: wasserstein=1.373676, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952311, edge=0.002781, neigh=2.314998, align=2.906456, entropy=10.164009,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925278, edge=0.003029, neigh=2.217094, align=3.248966, entropy=9.558633,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922587, edge=0.003095, neigh=2.239421, align=3.292697, entropy=9.461011,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921932, edge=0.003100, neigh=2.261289, align=3.279664, entropy=9.451062,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921451, edge=0.003090, neigh=2.273936, align=3.265012, entropy=9.450412,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921021, edge=0.003079, neigh=2.281537, align=3.253653, entropy=9.450159,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920688, edge=0.003073, neigh=2.286835, align=3.244792, entropy=9.450280,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920426, edge=0.003069, neigh=2.290823, align=3.238388, entropy=9.450134,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920203, edge=0.003066, neigh=2.293742, align=3.233846, entropy=9.449676,s=1.000000, s_hat=1.000000
Time for optimization: 55.43s
Test results:
Top-1: 0.092
Top-10: 0.507
Top-30: 0.727
Top-50: 0.749
Top-100: 0.762
MRR: 0.207
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.092s
Time for attribute perturbation: 0.089s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:30,  3.22it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:26,  3.69it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:25,  3.86it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:25,  3.73it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  4.11it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.24it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:26,  3.57it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:29,  3.12it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:32,  2.79it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:33,  2.72it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:35,  2.50it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:33,  2.65it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:28,  3.02it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:28,  3.07it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:30,  2.82it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:32,  2.59it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:30,  2.68it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:29,  2.80it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:28,  2.85it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:29,  2.68it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:30,  2.55it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:27,  2.84it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:25,  3.06it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:21,  3.61it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:19,  3.81it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:19,  3.73it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:20,  3.58it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:09<00:21,  3.42it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:20,  3.52it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:23,  3.03it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:26,  1.86it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:42,  1.12it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:44,  1.07it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:56,  1.20s/it]
Time for cost matrix: 15.60s
Iter 0: wasserstein=1.376980, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953136, edge=0.002781, neigh=2.270986, align=2.903007, entropy=10.159902,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926294, edge=0.003023, neigh=2.166767, align=3.254937, entropy=9.551412,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923767, edge=0.003089, neigh=2.179135, align=3.296776, entropy=9.457353,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923195, edge=0.003095, neigh=2.198137, align=3.281605, entropy=9.449405,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922731, edge=0.003083, neigh=2.209584, align=3.266434, entropy=9.449193,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922318, edge=0.003072, neigh=2.216636, align=3.254926, entropy=9.449202,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922003, edge=0.003066, neigh=2.221697, align=3.245868, entropy=9.449601,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921751, edge=0.003063, neigh=2.225574, align=3.239243, entropy=9.449659,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921532, edge=0.003060, neigh=2.228553, align=3.234508, entropy=9.449331,s=1.000000, s_hat=1.000000
Time for optimization: 34.45s
Test results:
Top-1: 0.115
Top-10: 0.555
Top-30: 0.749
Top-50: 0.768
Top-100: 0.782
MRR: 0.240
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.074s
Time for attribute perturbation: 0.072s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 19.02it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:05, 18.18it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:06, 13.44it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:10,  8.38it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.57it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  6.22it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:14,  6.19it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:14,  6.20it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:13,  6.42it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.62it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:15,  5.36it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:16,  5.06it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:16,  4.95it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:15,  5.33it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:14,  5.38it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:15,  4.97it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:16,  4.81it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:15,  5.02it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:16,  4.54it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:16,  4.43it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:16,  4.54it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:16,  4.51it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:15,  4.51it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:15,  4.53it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.42it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  2.93it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.79it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.76it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  2.04it/s]
Time for cost matrix: 8.81s
Iter 0: wasserstein=1.374582, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952402, edge=0.002778, neigh=2.320248, align=2.907853, entropy=10.157340,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925529, edge=0.003015, neigh=2.222421, align=3.253306, entropy=9.552912,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923007, edge=0.003091, neigh=2.241592, align=3.293971, entropy=9.459508,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922402, edge=0.003099, neigh=2.262242, align=3.279061, entropy=9.451217,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921915, edge=0.003089, neigh=2.274251, align=3.264261, entropy=9.450563,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921484, edge=0.003078, neigh=2.281750, align=3.253188, entropy=9.450121,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921150, edge=0.003072, neigh=2.287005, align=3.244594, entropy=9.450116,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920906, edge=0.003069, neigh=2.291049, align=3.237943, entropy=9.450326,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920705, edge=0.003067, neigh=2.294117, align=3.233061, entropy=9.450280,s=1.000000, s_hat=1.000000
Time for optimization: 30.36s
Test results:
Top-1: 0.092
Top-10: 0.515
Top-30: 0.730
Top-50: 0.751
Top-100: 0.768
MRR: 0.212
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.078s
Time for attribute perturbation: 0.078s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.74it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.33it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.62it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.09it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:19,  4.98it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:17,  5.43it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  6.06it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.77it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.25it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.68it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.36it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:16,  5.33it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.70it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:18,  4.54it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:18,  4.64it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.53it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.54it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.37it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:17,  4.51it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:16,  4.82it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.56it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:16,  4.86it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:16,  4.65it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:17,  4.40it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.54it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.55it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.68it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:13,  5.35it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.54it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  4.85it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.83it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.15it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.60it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:25,  1.82it/s]
Time for cost matrix: 9.47s
Iter 0: wasserstein=1.374943, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952614, edge=0.002781, neigh=2.299251, align=2.906559, entropy=10.159388,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925675, edge=0.003019, neigh=2.200033, align=3.252792, entropy=9.552669,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923147, edge=0.003093, neigh=2.218536, align=3.294440, entropy=9.458178,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922588, edge=0.003101, neigh=2.238492, align=3.279229, entropy=9.450365,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922077, edge=0.003088, neigh=2.249248, align=3.264856, entropy=9.449218,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921634, edge=0.003076, neigh=2.255914, align=3.253963, entropy=9.448603,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921314, edge=0.003070, neigh=2.260901, align=3.245343, entropy=9.448710,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921076, edge=0.003067, neigh=2.264942, align=3.238906, entropy=9.448781,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920874, edge=0.003064, neigh=2.268061, align=3.234280, entropy=9.448543,s=1.000000, s_hat=1.000000
Time for optimization: 32.15s
Test results:
Top-1: 0.102
Top-10: 0.524
Top-30: 0.727
Top-50: 0.749
Top-100: 0.766
MRR: 0.220
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.057s
Time for attribute perturbation: 0.062s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:25,  3.94it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  4.08it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:24,  4.03it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.02it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.20it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.23it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.35it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.32it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.40it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.24it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.30it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.26it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.35it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.28it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.31it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.30it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:16,  4.97it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:14,  5.67it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:15,  5.31it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:15,  5.03it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:15,  5.03it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:15,  4.84it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.52it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.47it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.33it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:16,  4.50it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.38it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.14it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.28it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.53it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.49it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.41it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.47it/s]
Time for cost matrix: 9.93s
Iter 0: wasserstein=1.372311, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950904, edge=0.002782, neigh=2.322118, align=2.908946, entropy=10.157635,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923990, edge=0.003023, neigh=2.221644, align=3.251879, entropy=9.552695,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921275, edge=0.003094, neigh=2.242721, align=3.297791, entropy=9.453381,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920666, edge=0.003101, neigh=2.264317, align=3.285297, entropy=9.443464,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.920200, edge=0.003089, neigh=2.276741, align=3.271653, entropy=9.442331,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919790, edge=0.003078, neigh=2.284105, align=3.261023, entropy=9.441905,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.919479, edge=0.003072, neigh=2.289387, align=3.252306, entropy=9.442154,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.919243, edge=0.003069, neigh=2.293491, align=3.245767, entropy=9.442335,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.919044, edge=0.003066, neigh=2.296643, align=3.241039, entropy=9.442207,s=1.000000, s_hat=1.000000
Time for optimization: 32.32s
Test results:
Top-1: 0.096
Top-10: 0.494
Top-30: 0.718
Top-50: 0.745
Top-100: 0.760
MRR: 0.208
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.064s
Time for attribute perturbation: 0.078s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.14it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.41it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.24it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.10it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.21it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.35it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.67it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.78it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.43it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.21it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.09it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.09it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:21,  4.13it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:21,  4.07it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.15it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.15it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:20,  4.08it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:20,  4.10it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.16it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.17it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.28it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:17,  4.39it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.30it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.29it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:18,  4.06it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.15it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.52it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.51it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.61it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.15it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.82it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.78it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:15,  3.03it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.14it/s]
Time for cost matrix: 10.58s
Iter 0: wasserstein=1.373311, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952099, edge=0.002790, neigh=2.320960, align=2.910309, entropy=10.161168,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925175, edge=0.003033, neigh=2.227058, align=3.255482, entropy=9.554041,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922441, edge=0.003095, neigh=2.250708, align=3.300095, entropy=9.454805,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921733, edge=0.003100, neigh=2.273278, align=3.286560, entropy=9.444703,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921222, edge=0.003090, neigh=2.286189, align=3.271373, entropy=9.444173,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920787, edge=0.003079, neigh=2.293992, align=3.260336, entropy=9.443698,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920459, edge=0.003072, neigh=2.299255, align=3.251854, entropy=9.443635,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920222, edge=0.003069, neigh=2.303396, align=3.245206, entropy=9.443807,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920013, edge=0.003066, neigh=2.306468, align=3.240490, entropy=9.443506,s=1.000000, s_hat=1.000000
Time for optimization: 33.19s
Test results:
Top-1: 0.099
Top-10: 0.517
Top-30: 0.731
Top-50: 0.752
Top-100: 0.768
MRR: 0.217
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.072s
Time for attribute perturbation: 0.068s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.59it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.77it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.62it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.59it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.61it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.44it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.23it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.35it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.31it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.41it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.39it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.32it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:20,  4.19it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.29it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.45it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.39it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.29it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.26it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.33it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.31it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.32it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.46it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.47it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.34it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.21it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.27it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.34it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.30it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.28it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.22it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.22it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.15it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.31it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.28it/s]
Time for cost matrix: 10.35s
Iter 0: wasserstein=1.374741, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952399, edge=0.002787, neigh=2.304773, align=2.905973, entropy=10.163363,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925421, edge=0.003026, neigh=2.206360, align=3.252685, entropy=9.555856,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922663, edge=0.003094, neigh=2.228749, align=3.295915, entropy=9.458206,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921994, edge=0.003099, neigh=2.248267, align=3.281921, entropy=9.448674,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921477, edge=0.003089, neigh=2.258720, align=3.267380, entropy=9.447494,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921049, edge=0.003078, neigh=2.265505, align=3.256646, entropy=9.446886,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920742, edge=0.003072, neigh=2.270580, align=3.248150, entropy=9.447007,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920502, edge=0.003068, neigh=2.274588, align=3.241848, entropy=9.446956,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920293, edge=0.003066, neigh=2.277662, align=3.237253, entropy=9.446620,s=1.000000, s_hat=1.000000
Time for optimization: 37.81s
Test results:
Top-1: 0.104
Top-10: 0.517
Top-30: 0.730
Top-50: 0.751
Top-100: 0.769
MRR: 0.220
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.085s
Time for attribute perturbation: 0.122s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:45,  2.16it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:42,  2.32it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:40,  2.39it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:40,  2.37it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:02<00:36,  2.58it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:34,  2.73it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:31,  2.94it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:29,  3.16it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:28,  3.15it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:27,  3.25it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:27,  3.20it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:26,  3.28it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:26,  3.29it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:29,  2.95it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:32,  2.62it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:31,  2.70it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:06<00:30,  2.76it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:29,  2.79it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:27,  2.90it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:07<00:27,  2.88it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:23,  3.30it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:24,  3.24it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:21,  3.57it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:18,  4.03it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:21,  3.50it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:23,  3.12it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:09<00:23,  3.04it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:09<00:25,  2.81it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:25,  2.80it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:25,  2.83it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:19,  2.48it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:20,  2.33it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.94it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:32,  1.45it/s]
Time for cost matrix: 14.97s
Iter 0: wasserstein=1.370228, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950713, edge=0.002788, neigh=2.358851, align=2.905221, entropy=10.168176,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923542, edge=0.003031, neigh=2.260895, align=3.248409, entropy=9.559682,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920778, edge=0.003086, neigh=2.284711, align=3.293272, entropy=9.460740,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920103, edge=0.003091, neigh=2.307497, align=3.279327, entropy=9.451221,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919618, edge=0.003083, neigh=2.320825, align=3.264268, entropy=9.450708,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919191, edge=0.003073, neigh=2.329174, align=3.253151, entropy=9.450279,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918869, edge=0.003067, neigh=2.335017, align=3.244489, entropy=9.450355,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918618, edge=0.003063, neigh=2.339402, align=3.238144, entropy=9.450267,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918406, edge=0.003061, neigh=2.342677, align=3.233582, entropy=9.449914,s=1.000000, s_hat=1.000000
Time for optimization: 52.89s
Test results:
Top-1: 0.071
Top-10: 0.441
Top-30: 0.686
Top-50: 0.714
Top-100: 0.731
MRR: 0.176
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.109s
Time for attribute perturbation: 0.133s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:29,  3.39it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:31,  3.14it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:29,  3.26it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:31,  3.06it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:31,  3.00it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:30,  3.07it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:30,  3.08it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:29,  3.13it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:28,  3.17it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:26,  3.38it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:26,  3.37it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:25,  3.45it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:24,  3.50it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:25,  3.39it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:26,  3.25it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:26,  3.18it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:25,  3.31it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:23,  3.55it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:22,  3.53it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:23,  3.45it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:23,  3.34it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:21,  3.60it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:23,  3.29it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:27,  2.76it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:30,  2.49it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:28,  2.55it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:27,  2.63it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:09<00:27,  2.58it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:26,  2.66it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:23,  2.97it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:38,  1.28it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:32,  1.46it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:28,  1.66it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:37,  1.26it/s]
Time for cost matrix: 14.96s
Iter 0: wasserstein=1.368061, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950013, edge=0.002795, neigh=2.386229, align=2.905376, entropy=10.169105,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923006, edge=0.003033, neigh=2.283561, align=3.246542, entropy=9.563428,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920191, edge=0.003091, neigh=2.306765, align=3.289970, entropy=9.464724,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919479, edge=0.003095, neigh=2.331338, align=3.276350, entropy=9.454579,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.918957, edge=0.003085, neigh=2.344803, align=3.261787, entropy=9.453482,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.918509, edge=0.003074, neigh=2.352762, align=3.250782, entropy=9.452943,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918181, edge=0.003069, neigh=2.358289, align=3.242050, entropy=9.453128,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.917944, edge=0.003066, neigh=2.362654, align=3.235310, entropy=9.453428,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.917736, edge=0.003064, neigh=2.365975, align=3.230578, entropy=9.453188,s=1.000000, s_hat=1.000000
Time for optimization: 45.35s
Test results:
Top-1: 0.061
Top-10: 0.419
Top-30: 0.676
Top-50: 0.705
Top-100: 0.723
MRR: 0.162
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.079s
Time for attribute perturbation: 0.037s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.23it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.69it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.40it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.41it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.29it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.54it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.40it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.14it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:16,  5.41it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:15,  5.60it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:14,  6.04it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  6.07it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.41it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:10,  7.72it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.03it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:14,  5.71it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.56it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:14,  5.51it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.25it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:11,  6.54it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:13,  5.91it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:12,  6.18it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:11,  6.78it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:11,  6.20it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:10,  6.65it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:10,  7.20it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.79it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.91it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.39it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.71it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.95it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.91it/s]
Time for cost matrix: 7.84s
Iter 0: wasserstein=1.367810, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.949550, edge=0.002793, neigh=2.385083, align=2.909207, entropy=10.164510,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.922662, edge=0.003031, neigh=2.279809, align=3.253513, entropy=9.557803,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.919915, edge=0.003092, neigh=2.302047, align=3.295899, entropy=9.460562,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919181, edge=0.003096, neigh=2.326105, align=3.281597, entropy=9.450654,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.918650, edge=0.003085, neigh=2.339863, align=3.266327, entropy=9.449877,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.918201, edge=0.003075, neigh=2.348432, align=3.254843, entropy=9.449533,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.917873, edge=0.003069, neigh=2.354264, align=3.245843, entropy=9.449785,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.917615, edge=0.003066, neigh=2.358536, align=3.239312, entropy=9.449744,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.917394, edge=0.003063, neigh=2.361654, align=3.234647, entropy=9.449349,s=1.000000, s_hat=1.000000
Time for optimization: 29.03s
Test results:
Top-1: 0.061
Top-10: 0.413
Top-30: 0.675
Top-50: 0.704
Top-100: 0.723
MRR: 0.162
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.069s
Time for attribute perturbation: 0.061s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.49it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.81it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:12,  7.47it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.61it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.01it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:14,  6.36it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:09,  9.20it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:10,  8.50it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:10,  8.78it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.61it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  9.31it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:10,  7.90it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:11,  7.23it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.21it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.52it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:08,  9.00it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:09,  8.17it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:09,  8.44it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:10,  7.46it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.87it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:12,  5.81it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:12,  5.96it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:12,  5.94it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:11,  6.40it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.24it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.96it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:23,  2.11it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.90it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.27it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.34it/s]
Time for cost matrix: 7.02s
Iter 0: wasserstein=1.368560, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950090, edge=0.002789, neigh=2.377360, align=2.908820, entropy=10.164906,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923093, edge=0.003023, neigh=2.275430, align=3.248625, entropy=9.561109,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920364, edge=0.003089, neigh=2.297373, align=3.290324, entropy=9.464633,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919665, edge=0.003095, neigh=2.321431, align=3.276190, entropy=9.455002,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919161, edge=0.003086, neigh=2.335356, align=3.261212, entropy=9.454356,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.918722, edge=0.003075, neigh=2.343950, align=3.250266, entropy=9.453772,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918388, edge=0.003069, neigh=2.349948, align=3.241783, entropy=9.453670,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918140, edge=0.003066, neigh=2.354668, align=3.235321, entropy=9.453651,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.917922, edge=0.003063, neigh=2.358179, align=3.230783, entropy=9.453191,s=1.000000, s_hat=1.000000
Time for optimization: 27.42s
Test results:
Top-1: 0.066
Top-10: 0.425
Top-30: 0.676
Top-50: 0.704
Top-100: 0.726
MRR: 0.167
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.058s
Time for attribute perturbation: 0.071s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.81it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  4.98it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.33it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.49it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  8.13it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:11,  8.03it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  7.87it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.67it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.63it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.30it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:15,  5.74it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.26it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:20,  4.17it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:19,  4.20it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:14,  5.82it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  6.01it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  6.13it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.77it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.34it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.28it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:13,  5.81it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:12,  5.91it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:10,  7.03it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:10,  7.05it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.60it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  5.96it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.68it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.19it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.67it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.71it/s]
Time for cost matrix: 7.60s
Iter 0: wasserstein=1.369713, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950718, edge=0.002799, neigh=2.362122, align=2.902555, entropy=10.169435,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923699, edge=0.003034, neigh=2.262293, align=3.249494, entropy=9.559927,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920921, edge=0.003090, neigh=2.282922, align=3.293162, entropy=9.461874,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920196, edge=0.003094, neigh=2.304786, align=3.279765, entropy=9.451559,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919680, edge=0.003083, neigh=2.317661, align=3.264998, entropy=9.450732,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919243, edge=0.003072, neigh=2.325570, align=3.253711, entropy=9.450416,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918911, edge=0.003067, neigh=2.331003, align=3.244763, entropy=9.450625,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918655, edge=0.003063, neigh=2.335091, align=3.238123, entropy=9.450691,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918437, edge=0.003061, neigh=2.338120, align=3.233349, entropy=9.450428,s=1.000000, s_hat=1.000000
Time for optimization: 28.47s
Test results:
Top-1: 0.067
Top-10: 0.431
Top-30: 0.688
Top-50: 0.714
Top-100: 0.731
MRR: 0.171
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.073s
Time for attribute perturbation: 0.044s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.12it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.36it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.15it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.25it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:18,  5.25it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:18,  5.02it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.28it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.10it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:16,  5.44it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:16,  5.46it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:16,  5.38it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:17,  5.06it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.17it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.21it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:12,  6.56it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:13,  6.03it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  6.23it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:09,  8.01it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:10,  7.60it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:10,  7.40it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.31it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:09,  7.61it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:09,  7.97it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:10,  6.63it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.86it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.91it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.26it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.64it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.46it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.40it/s]
Time for cost matrix: 7.80s
Iter 0: wasserstein=1.370155, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950443, edge=0.002788, neigh=2.367863, align=2.907133, entropy=10.164889,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923576, edge=0.003025, neigh=2.265684, align=3.250585, entropy=9.559708,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920877, edge=0.003092, neigh=2.290898, align=3.291002, entropy=9.464521,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920184, edge=0.003096, neigh=2.315927, align=3.275958, entropy=9.455433,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919660, edge=0.003085, neigh=2.329140, align=3.261031, entropy=9.454480,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919205, edge=0.003073, neigh=2.336742, align=3.249966, entropy=9.453809,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918861, edge=0.003067, neigh=2.341913, align=3.241294, entropy=9.453743,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918608, edge=0.003064, neigh=2.345881, align=3.234707, entropy=9.453801,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918394, edge=0.003062, neigh=2.348899, align=3.230064, entropy=9.453454,s=1.000000, s_hat=1.000000
Time for optimization: 28.20s
Test results:
Top-1: 0.067
Top-10: 0.431
Top-30: 0.693
Top-50: 0.720
Top-100: 0.735
MRR: 0.172
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.059s
Time for attribute perturbation: 0.033s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:28,  3.52it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.68it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  7.03it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.36it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.69it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  6.68it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.29it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.67it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.85it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.56it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:15,  5.61it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.43it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:15,  5.55it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.43it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.37it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:10,  7.61it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:09,  8.73it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:10,  7.50it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:11,  6.94it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.86it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  6.97it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  8.54it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:08,  8.25it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:08,  8.39it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.67it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.62it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.59it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.69it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.67it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.39it/s]
Time for cost matrix: 7.45s
Iter 0: wasserstein=1.369453, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950495, edge=0.002786, neigh=2.364851, align=2.909332, entropy=10.165751,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923411, edge=0.003026, neigh=2.264146, align=3.249294, entropy=9.560170,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920668, edge=0.003088, neigh=2.286550, align=3.292805, entropy=9.462181,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919963, edge=0.003093, neigh=2.309237, align=3.278607, entropy=9.452679,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919465, edge=0.003084, neigh=2.322626, align=3.263288, entropy=9.452341,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919032, edge=0.003073, neigh=2.330820, align=3.251861, entropy=9.452106,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918702, edge=0.003067, neigh=2.336491, align=3.242972, entropy=9.452266,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918447, edge=0.003064, neigh=2.340742, align=3.236462, entropy=9.452234,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918230, edge=0.003061, neigh=2.343850, align=3.231802, entropy=9.451883,s=1.000000, s_hat=1.000000
Time for optimization: 28.94s
Test results:
Top-1: 0.066
Top-10: 0.439
Top-30: 0.687
Top-50: 0.711
Top-100: 0.727
MRR: 0.172
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.056s
Time for attribute perturbation: 0.059s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.06it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.64it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.16it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.20it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.33it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:19,  4.83it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.70it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.39it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.65it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:17,  5.29it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:14,  6.16it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:12,  6.93it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:11,  7.46it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:12,  6.93it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.18it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.84it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.35it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:11,  7.30it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:10,  7.86it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:09,  8.30it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.90it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.89it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:13,  5.61it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:12,  5.92it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:10,  7.06it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:09,  7.54it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.24it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.40it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.15it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:24,  2.01it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.99it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:14,  3.20it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.36it/s]
Time for cost matrix: 7.93s
Iter 0: wasserstein=1.368903, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950310, edge=0.002795, neigh=2.363484, align=2.904283, entropy=10.169820,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923240, edge=0.003036, neigh=2.259150, align=3.247971, entropy=9.561477,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920418, edge=0.003089, neigh=2.281017, align=3.293473, entropy=9.461194,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919692, edge=0.003092, neigh=2.303530, align=3.280091, entropy=9.450867,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919188, edge=0.003083, neigh=2.316590, align=3.265036, entropy=9.450347,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.918755, edge=0.003073, neigh=2.324512, align=3.253767, entropy=9.450086,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918423, edge=0.003068, neigh=2.330057, align=3.245024, entropy=9.450199,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918178, edge=0.003065, neigh=2.334445, align=3.238387, entropy=9.450345,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.917962, edge=0.003062, neigh=2.337691, align=3.233791, entropy=9.449955,s=1.000000, s_hat=1.000000
Time for optimization: 29.36s
Test results:
Top-1: 0.067
Top-10: 0.429
Top-30: 0.685
Top-50: 0.709
Top-100: 0.731
MRR: 0.169
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.072s
Time for attribute perturbation: 0.065s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.34it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.40it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:16,  5.84it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.72it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.56it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:14,  6.32it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  6.84it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.45it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.97it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.43it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.69it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:13,  6.51it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:13,  6.58it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.17it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.41it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:13,  6.27it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  6.98it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  5.89it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  6.01it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.80it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.97it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.29it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:12,  6.23it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:12,  5.87it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:13,  5.62it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:10,  7.03it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.24it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.28it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:18,  2.68it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:24,  1.94it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.48it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  1.96it/s]
Time for cost matrix: 7.84s
Iter 0: wasserstein=1.367857, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.949105, edge=0.002787, neigh=2.382868, align=2.914896, entropy=10.159894,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.922125, edge=0.003022, neigh=2.279063, align=3.254040, entropy=9.556148,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.919374, edge=0.003088, neigh=2.300729, align=3.295243, entropy=9.459784,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.918688, edge=0.003095, neigh=2.324474, align=3.280722, entropy=9.450533,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.918187, edge=0.003085, neigh=2.338180, align=3.265652, entropy=9.450042,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.917756, edge=0.003074, neigh=2.346581, align=3.254136, entropy=9.449933,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.917429, edge=0.003068, neigh=2.352489, align=3.245019, entropy=9.450279,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.917178, edge=0.003065, neigh=2.357002, align=3.238336, entropy=9.450401,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.916961, edge=0.003063, neigh=2.360347, align=3.233676, entropy=9.450048,s=1.000000, s_hat=1.000000
Time for optimization: 28.27s
Test results:
Top-1: 0.066
Top-10: 0.419
Top-30: 0.675
Top-50: 0.699
Top-100: 0.722
MRR: 0.167
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.027s
Time for attribute perturbation: 0.074s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:14,  6.92it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:12,  8.07it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:11,  8.45it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  7.27it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:16,  5.65it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  5.91it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.15it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.32it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.25it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.79it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:09,  8.53it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.18it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:10,  7.84it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:10,  7.86it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.45it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:11,  6.66it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:10,  7.21it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:09,  7.76it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.57it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.26it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:11,  6.47it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  6.93it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.42it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.87it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.78it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.65it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.81it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.77it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.70it/s]
Time for cost matrix: 7.24s
Iter 0: wasserstein=1.370096, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950742, edge=0.002790, neigh=2.363917, align=2.905479, entropy=10.166121,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923819, edge=0.003026, neigh=2.266126, align=3.251887, entropy=9.558311,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921116, edge=0.003088, neigh=2.288614, align=3.295526, entropy=9.460247,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920389, edge=0.003093, neigh=2.312085, align=3.281382, entropy=9.450293,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919862, edge=0.003084, neigh=2.325597, align=3.266184, entropy=9.449577,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919417, edge=0.003073, neigh=2.333987, align=3.254949, entropy=9.449082,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.919082, edge=0.003067, neigh=2.339644, align=3.246220, entropy=9.449108,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918828, edge=0.003064, neigh=2.343904, align=3.239687, entropy=9.449098,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918610, edge=0.003062, neigh=2.347065, align=3.235112, entropy=9.448650,s=1.000000, s_hat=1.000000
Time for optimization: 29.01s
Test results:
Top-1: 0.067
Top-10: 0.444
Top-30: 0.691
Top-50: 0.719
Top-100: 0.736
MRR: 0.173
Loading datasets/cora.mat...
Run 1/1
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.056s
Time for attribute perturbation: 0.015s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Iter 0: wasserstein=1.418259, edge=0.017033, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.612121, edge=0.016261, neigh=2.304153, align=4.299660, entropy=8.509909,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.571554, edge=0.016164, neigh=2.463545, align=4.708391, entropy=7.950091,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.569515, edge=0.016165, neigh=2.531291, align=4.736318, entropy=7.914471,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.569381, edge=0.016154, neigh=2.586796, align=4.738366, entropy=7.911967,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.569358, edge=0.016148, neigh=2.626565, align=4.738638, entropy=7.911623,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.569348, edge=0.016145, neigh=2.649164, align=4.738740, entropy=7.911481,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.569341, edge=0.016143, neigh=2.658733, align=4.738802, entropy=7.911388,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.569337, edge=0.016142, neigh=2.661147, align=4.738846, entropy=7.911319,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.569333, edge=0.016141, neigh=2.661930, align=4.738879, entropy=7.911265,s=1.000000, s_hat=1.000000
Time for optimization: 28.62s
Test results:
Top-1: 0.996
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.998
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.060s
Time for attribute perturbation: 0.009s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.80it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.83it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  7.01it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:14,  6.58it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:13,  6.99it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  7.01it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.89it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.04it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.50it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.17it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.02it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:10,  8.33it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.55it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.78it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:13,  6.17it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:12,  6.29it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:11,  6.74it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.79it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.40it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.12it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:12,  5.91it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:13,  5.36it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:14,  4.99it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:13,  5.48it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:13,  5.47it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:14,  5.03it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.04it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.99it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.08it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:16,  2.91it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  1.97it/s]
Time for cost matrix: 8.12s
Iter 0: wasserstein=1.419959, edge=0.003756, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.848448, edge=0.003381, neigh=2.354015, align=4.149485, entropy=8.699962,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.816026, edge=0.003373, neigh=2.377255, align=4.639170, entropy=8.031056,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.814080, edge=0.003373, neigh=2.390508, align=4.686161, entropy=7.971397,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.813898, edge=0.003364, neigh=2.405948, align=4.695116, entropy=7.960816,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.813820, edge=0.003358, neigh=2.415388, align=4.699132, entropy=7.956062,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.813763, edge=0.003355, neigh=2.421684, align=4.701664, entropy=7.952993,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.813718, edge=0.003352, neigh=2.426371, align=4.703498, entropy=7.950729,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.813681, edge=0.003351, neigh=2.430111, align=4.704925, entropy=7.948948,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.813650, edge=0.003349, neigh=2.433224, align=4.706081, entropy=7.947496,s=1.000000, s_hat=1.000000
Time for optimization: 27.49s
Test results:
Top-1: 0.994
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.997
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.036s
Time for attribute perturbation: 0.094s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  4.98it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.17it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:26,  3.70it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.16it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.66it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.43it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.43it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.07it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.06it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:15,  5.79it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:14,  6.21it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:11,  7.63it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.88it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.86it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:14,  5.57it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  6.18it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.75it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:10,  7.17it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.56it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:12,  5.92it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:12,  6.22it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:10,  6.80it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:10,  7.21it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.34it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.40it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.71it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.73it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.30it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.21it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.91it/s]
Time for cost matrix: 8.06s
Iter 0: wasserstein=1.423660, edge=0.003752, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.845840, edge=0.003334, neigh=2.341366, align=4.165517, entropy=8.684147,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.812930, edge=0.003333, neigh=2.370852, align=4.645382, entropy=8.023234,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.810936, edge=0.003343, neigh=2.381083, align=4.688487, entropy=7.967739,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.810753, edge=0.003344, neigh=2.391835, align=4.696041, entropy=7.958680,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.810690, edge=0.003344, neigh=2.398889, align=4.699705, entropy=7.954408,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.810646, edge=0.003343, neigh=2.403734, align=4.702163, entropy=7.951537,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.810610, edge=0.003342, neigh=2.407367, align=4.703964, entropy=7.949415,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.810580, edge=0.003341, neigh=2.410268, align=4.705354, entropy=7.947765,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.810555, edge=0.003341, neigh=2.412684, align=4.706470, entropy=7.946433,s=1.000000, s_hat=1.000000
Time for optimization: 35.50s
Test results:
Top-1: 0.996
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.997
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.076s
Time for attribute perturbation: 0.128s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:40,  2.47it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:36,  2.69it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:41,  2.36it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:39,  2.45it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:02<00:37,  2.51it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:30,  3.05it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:30,  3.04it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:30,  2.98it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:31,  2.89it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:31,  2.90it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:29,  3.03it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:33,  2.63it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:35,  2.43it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:05<00:35,  2.45it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:30,  2.82it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:30,  2.73it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:06<00:30,  2.69it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:29,  2.81it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:27,  2.90it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:07<00:28,  2.86it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:26,  2.97it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:27,  2.88it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:08<00:27,  2.85it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:08<00:27,  2.80it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:09<00:26,  2.87it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:09<00:26,  2.81it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:09<00:23,  3.04it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:09<00:22,  3.17it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:23,  2.97it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:26,  2.72it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:24,  1.97it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:24,  1.95it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:26,  1.78it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:32,  1.42it/s]
Time for cost matrix: 15.52s
Iter 0: wasserstein=1.424919, edge=0.003751, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.844668, edge=0.003290, neigh=2.334438, align=4.181288, entropy=8.664700,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.811988, edge=0.003336, neigh=2.379753, align=4.654667, entropy=8.012793,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.810025, edge=0.003347, neigh=2.390923, align=4.697216, entropy=7.958274,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.809831, edge=0.003339, neigh=2.402238, align=4.705036, entropy=7.949098,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.809766, edge=0.003335, neigh=2.409524, align=4.708675, entropy=7.944942,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.809725, edge=0.003334, neigh=2.414460, align=4.711043, entropy=7.942222,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.809692, edge=0.003334, neigh=2.418136, align=4.712770, entropy=7.940219,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.809665, edge=0.003334, neigh=2.421049, align=4.714110, entropy=7.938654,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.809642, edge=0.003334, neigh=2.423449, align=4.715189, entropy=7.937385,s=1.000000, s_hat=1.000000
Time for optimization: 53.62s
Test results:
Top-1: 0.996
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.998
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.071s
Time for attribute perturbation: 0.084s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:44,  2.21it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:45,  2.13it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:44,  2.20it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:39,  2.42it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:02<00:37,  2.52it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:34,  2.73it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:29,  3.11it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:03<00:31,  2.95it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:31,  2.87it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:27,  3.28it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:27,  3.27it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:32,  2.73it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:35,  2.44it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:05<00:34,  2.50it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:34,  2.50it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:06<00:33,  2.51it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:06<00:32,  2.57it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:29,  2.81it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:26,  3.03it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:07<00:24,  3.24it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:24,  3.26it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:22,  3.46it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:08<00:22,  3.42it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:08<00:21,  3.52it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:20,  3.73it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:19,  3.88it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:09<00:19,  3.73it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:09<00:21,  3.39it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:24,  2.95it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:25,  2.80it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:25,  1.89it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:27,  1.72it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:34,  1.36it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:51,  1.10s/it]
Time for cost matrix: 16.29s
Iter 0: wasserstein=1.418379, edge=0.003758, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.850265, edge=0.003299, neigh=2.339321, align=4.148505, entropy=8.702809,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.817923, edge=0.003335, neigh=2.373722, align=4.637531, entropy=8.032626,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.815944, edge=0.003346, neigh=2.384107, align=4.682041, entropy=7.974608,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.815742, edge=0.003344, neigh=2.396873, align=4.690817, entropy=7.963992,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.815671, edge=0.003343, neigh=2.404658, align=4.695182, entropy=7.958929,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.815628, edge=0.003342, neigh=2.409766, align=4.698008, entropy=7.955663,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.815597, edge=0.003342, neigh=2.413570, align=4.700041, entropy=7.953304,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.815573, edge=0.003342, neigh=2.416625, align=4.701609, entropy=7.951477,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.815553, edge=0.003342, neigh=2.419184, align=4.702880, entropy=7.949993,s=1.000000, s_hat=1.000000
Time for optimization: 43.04s
Test results:
Top-1: 0.994
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.996
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.043s
Time for attribute perturbation: 0.024s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.82it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.60it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:16,  5.92it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.11it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.33it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:16,  5.74it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.24it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.16it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.68it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:16,  5.36it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.30it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:16,  5.28it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  5.99it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:13,  6.16it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.18it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.35it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  6.93it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  6.85it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:10,  7.47it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:10,  7.98it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:10,  7.51it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:10,  7.22it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.68it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.46it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:12,  6.25it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:12,  6.05it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:12,  5.83it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:11,  6.35it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.35it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.14it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:21,  2.23it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:24,  1.97it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.66it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  2.01it/s]
Time for cost matrix: 7.81s
Iter 0: wasserstein=1.419566, edge=0.003756, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.848917, edge=0.003341, neigh=2.356702, align=4.154661, entropy=8.699737,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.816405, edge=0.003365, neigh=2.372646, align=4.638797, entropy=8.033800,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.814340, edge=0.003357, neigh=2.378704, align=4.681328, entropy=7.977334,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.814141, edge=0.003350, neigh=2.389598, align=4.688240, entropy=7.968462,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.814076, edge=0.003350, neigh=2.398154, align=4.691532, entropy=7.964312,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.814033, edge=0.003350, neigh=2.404410, align=4.693871, entropy=7.961383,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.813998, edge=0.003350, neigh=2.409353, align=4.695693, entropy=7.959098,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.813968, edge=0.003350, neigh=2.413460, align=4.697167, entropy=7.957243,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.813941, edge=0.003350, neigh=2.416946, align=4.698384, entropy=7.955704,s=1.000000, s_hat=1.000000
Time for optimization: 29.41s
Test results:
Top-1: 0.994
Top-10: 0.999
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.996
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.030s
Time for attribute perturbation: 0.022s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.86it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.45it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  4.88it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.19it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:19,  4.84it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:17,  5.51it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:16,  5.79it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.49it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  6.04it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.12it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.64it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:15,  5.76it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:15,  5.61it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.08it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:19,  4.45it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.18it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:16,  4.93it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:15,  5.21it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.50it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  6.14it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:09,  7.90it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:10,  7.61it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:11,  6.44it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:11,  6.70it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:09,  7.66it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.76it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.88it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.75it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.89it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.89it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.77it/s]
Time for cost matrix: 7.76s
Iter 0: wasserstein=1.415245, edge=0.003760, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.851624, edge=0.003258, neigh=2.344769, align=4.125870, entropy=8.728444,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.819570, edge=0.003329, neigh=2.359482, align=4.618891, entropy=8.053453,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.817577, edge=0.003330, neigh=2.363010, align=4.664624, entropy=7.994076,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.817425, edge=0.003342, neigh=2.377415, align=4.673109, entropy=7.983862,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.817372, edge=0.003348, neigh=2.387447, align=4.677556, entropy=7.978662,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.817325, edge=0.003351, neigh=2.394155, align=4.680675, entropy=7.974964,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.817282, edge=0.003352, neigh=2.398970, align=4.683023, entropy=7.972133,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.817245, edge=0.003351, neigh=2.402665, align=4.684861, entropy=7.969891,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.817212, edge=0.003351, neigh=2.405643, align=4.686344, entropy=7.968066,s=1.000000, s_hat=1.000000
Time for optimization: 27.04s
Test results:
Top-1: 0.992
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.996
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.061s
Time for attribute perturbation: 0.070s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.80it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  3.96it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.81it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.43it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.71it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:11,  8.16it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.57it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.95it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.48it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  8.01it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  7.16it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  7.24it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:12,  6.84it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  7.04it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.28it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  7.12it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  7.18it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:12,  6.48it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.24it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:10,  7.07it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  6.91it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.36it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:11,  6.48it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  6.74it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:10,  6.80it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.67it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.86it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.53it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.14it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.37it/s]
Time for cost matrix: 7.41s
Iter 0: wasserstein=1.417825, edge=0.003757, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.848136, edge=0.003285, neigh=2.345062, align=4.140021, entropy=8.711725,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.816027, edge=0.003344, neigh=2.357332, align=4.625748, entropy=8.046703,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.814024, edge=0.003340, neigh=2.362461, align=4.672343, entropy=7.986445,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.813869, edge=0.003342, neigh=2.377833, align=4.681096, entropy=7.975620,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.813813, edge=0.003343, neigh=2.388509, align=4.685432, entropy=7.970312,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.813767, edge=0.003343, neigh=2.395570, align=4.688331, entropy=7.966718,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.813729, edge=0.003343, neigh=2.400614, align=4.690493, entropy=7.964017,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.813697, edge=0.003343, neigh=2.404497, align=4.692204, entropy=7.961879,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.813671, edge=0.003343, neigh=2.407632, align=4.693605, entropy=7.960133,s=1.000000, s_hat=1.000000
Time for optimization: 27.66s
Test results:
Top-1: 0.995
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.997
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.039s
Time for attribute perturbation: 0.066s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.26it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:10,  9.64it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.57it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.54it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:14,  6.55it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:14,  6.37it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.34it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.13it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:15,  5.93it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:17,  5.01it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:17,  4.87it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:15,  5.41it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.43it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.61it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.33it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  5.95it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:14,  5.58it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:13,  5.72it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.69it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:14,  5.36it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:13,  5.76it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:13,  5.51it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:09,  7.46it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.83it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.03it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.40it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.85it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.53it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.78it/s]
Time for cost matrix: 7.53s
Iter 0: wasserstein=1.418508, edge=0.003757, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.850276, edge=0.003328, neigh=2.355399, align=4.142987, entropy=8.709545,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.817890, edge=0.003362, neigh=2.377228, align=4.631566, entropy=8.039058,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.815900, edge=0.003360, neigh=2.389354, align=4.677959, entropy=7.979719,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.815708, edge=0.003352, neigh=2.402177, align=4.686758, entropy=7.969158,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.815633, edge=0.003348, neigh=2.409934, align=4.691140, entropy=7.964014,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.815582, edge=0.003346, neigh=2.414924, align=4.694083, entropy=7.960552,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.815543, edge=0.003344, neigh=2.418424, align=4.696250, entropy=7.957988,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.815513, edge=0.003343, neigh=2.421033, align=4.697928, entropy=7.955991,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.815489, edge=0.003342, neigh=2.423081, align=4.699270, entropy=7.954386,s=1.000000, s_hat=1.000000
Time for optimization: 28.12s
Test results:
Top-1: 0.993
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.996
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.068s
Time for attribute perturbation: 0.059s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.51it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.79it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  7.34it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.49it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.14it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  6.91it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.69it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.22it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.78it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.43it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.58it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.73it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:12,  6.69it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.10it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.14it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.14it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  7.39it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:10,  7.90it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:12,  6.46it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:13,  6.01it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.03it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.40it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:12,  5.96it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:12,  5.76it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:12,  5.64it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.48it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.44it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.60it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.52it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.76it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.35it/s]
Time for cost matrix: 7.42s
Iter 0: wasserstein=1.417483, edge=0.003757, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.848791, edge=0.003285, neigh=2.341295, align=4.142963, entropy=8.709278,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.816540, edge=0.003331, neigh=2.369568, align=4.630168, entropy=8.041211,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.814573, edge=0.003333, neigh=2.377892, align=4.674856, entropy=7.982946,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.814409, edge=0.003339, neigh=2.392003, align=4.683771, entropy=7.972199,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.814360, edge=0.003343, neigh=2.402245, align=4.688487, entropy=7.966706,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.814322, edge=0.003344, neigh=2.409114, align=4.691785, entropy=7.962878,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.814288, edge=0.003345, neigh=2.413911, align=4.694218, entropy=7.960035,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.814259, edge=0.003345, neigh=2.417548, align=4.696088, entropy=7.957833,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.814233, edge=0.003344, neigh=2.420481, align=4.697578, entropy=7.956066,s=1.000000, s_hat=1.000000
Time for optimization: 28.30s
Test results:
Top-1: 0.993
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.996
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.066s
Time for attribute perturbation: 0.076s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.56it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.67it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.70it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.74it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:18,  5.18it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:19,  4.75it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.32it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:17,  5.19it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.12it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.84it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.03it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:12,  6.87it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.54it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.20it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.43it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:14,  5.85it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.78it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.90it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:14,  5.53it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:15,  4.93it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:14,  5.23it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:12,  6.19it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:11,  6.23it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:12,  5.76it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:12,  5.62it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.16it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.82it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.40it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.96it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.77it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.27it/s]
Time for cost matrix: 8.19s
Iter 0: wasserstein=1.421087, edge=0.003754, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.847071, edge=0.003345, neigh=2.336726, align=4.152669, entropy=8.695958,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.814542, edge=0.003340, neigh=2.363840, align=4.637382, entropy=8.032249,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.812589, edge=0.003348, neigh=2.375601, align=4.680980, entropy=7.976240,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.812413, edge=0.003348, neigh=2.390081, align=4.689591, entropy=7.966003,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.812348, edge=0.003347, neigh=2.399803, align=4.694072, entropy=7.960815,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.812298, edge=0.003347, neigh=2.406092, align=4.697110, entropy=7.957276,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.812256, edge=0.003346, neigh=2.410659, align=4.699352, entropy=7.954642,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.812221, edge=0.003345, neigh=2.414259, align=4.701089, entropy=7.952589,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.812192, edge=0.003344, neigh=2.417230, align=4.702479, entropy=7.950936,s=1.000000, s_hat=1.000000
Time for optimization: 29.50s
Test results:
Top-1: 0.994
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 0.997
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.054s
Time for attribute perturbation: 0.056s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:13,  7.58it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.62it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  4.98it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.56it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.13it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.14it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:23,  4.04it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:22,  4.14it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.09it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  3.93it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:23,  3.71it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:23,  3.78it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:22,  3.93it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:22,  3.89it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:21,  3.93it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:21,  3.87it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:22,  3.69it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:22,  3.64it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:21,  3.84it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.04it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:20,  3.94it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:19,  3.97it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.06it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:19,  3.84it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:06<00:20,  3.71it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:21,  3.50it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:21,  3.40it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:07<00:19,  3.68it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.09it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:18,  3.90it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.12it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:20,  2.30it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.72it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.18it/s]
Time for cost matrix: 10.60s
Iter 0: wasserstein=1.406590, edge=0.003439, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.905230, edge=0.002841, neigh=2.272044, align=3.742023, entropy=9.170472,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.875654, edge=0.003001, neigh=2.214253, align=4.320851, entropy=8.387959,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.873609, edge=0.003020, neigh=2.217209, align=4.423461, entropy=8.259156,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.873557, edge=0.003028, neigh=2.212838, align=4.455300, entropy=8.219485,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.873593, edge=0.003034, neigh=2.216643, align=4.470698, entropy=8.199853,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.873604, edge=0.003040, neigh=2.221560, align=4.479750, entropy=8.188050,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.873594, edge=0.003045, neigh=2.227335, align=4.485659, entropy=8.180105,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.873572, edge=0.003051, neigh=2.233156, align=4.486930, entropy=8.177369,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.873551, edge=0.003054, neigh=2.238046, align=4.487413, entropy=8.175727,s=1.000000, s_hat=1.000000
Time for optimization: 27.45s
Test results:
Top-1: 0.940
Top-10: 0.982
Top-30: 0.995
Top-50: 0.996
Top-100: 0.998
MRR: 0.956
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.076s
Time for attribute perturbation: 0.062s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  3.99it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.31it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.69it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.21it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.73it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:18,  5.03it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  5.92it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:16,  5.72it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  5.94it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.05it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:13,  6.37it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  5.96it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:15,  5.72it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  5.84it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:15,  5.33it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:16,  5.00it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:15,  5.41it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  5.90it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.47it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.24it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.80it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:11,  6.89it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:12,  6.08it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:11,  6.48it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:11,  6.29it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:12,  5.57it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.84it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.66it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.24it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.77it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.84it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.78it/s]
Time for cost matrix: 8.11s
Iter 0: wasserstein=1.406736, edge=0.003437, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.901478, edge=0.002804, neigh=2.260263, align=3.780732, entropy=9.125865,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.871594, edge=0.002934, neigh=2.214887, align=4.363193, entropy=8.339521,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.869730, edge=0.002970, neigh=2.217589, align=4.460503, entropy=8.218058,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.869815, edge=0.003004, neigh=2.219410, align=4.492275, entropy=8.179381,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.869940, edge=0.003027, neigh=2.225257, align=4.506959, entropy=8.161078,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.869981, edge=0.003032, neigh=2.229316, align=4.515732, entropy=8.149996,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.869984, edge=0.003038, neigh=2.233702, align=4.521141, entropy=8.142892,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.869986, edge=0.003045, neigh=2.238794, align=4.524960, entropy=8.137729,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.870006, edge=0.003051, neigh=2.243648, align=4.527654, entropy=8.133911,s=1.000000, s_hat=1.000000
Time for optimization: 28.14s
Test results:
Top-1: 0.961
Top-10: 0.989
Top-30: 0.996
Top-50: 0.996
Top-100: 0.998
MRR: 0.971
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.070s
Time for attribute perturbation: 0.057s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:27,  3.64it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  4.99it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.41it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.71it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.53it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:19,  4.73it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:16,  5.68it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  6.03it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.87it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:15,  5.66it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:12,  6.96it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.92it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.34it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.74it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  4.88it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:18,  4.50it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:17,  4.50it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:17,  4.60it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:15,  4.88it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:13,  5.51it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:12,  5.86it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:11,  6.34it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:11,  6.26it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:11,  6.54it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:10,  7.00it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:10,  6.50it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.41it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.35it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.20it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.77it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.25it/s]
Time for cost matrix: 8.96s
Iter 0: wasserstein=1.408973, edge=0.003436, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.900081, edge=0.002846, neigh=2.261102, align=3.791305, entropy=9.112305,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.869939, edge=0.002971, neigh=2.209369, align=4.382673, entropy=8.319144,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.867923, edge=0.002984, neigh=2.211655, align=4.475024, entropy=8.202951,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.867886, edge=0.003000, neigh=2.213045, align=4.500684, entropy=8.170300,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.867970, edge=0.003017, neigh=2.219123, align=4.513880, entropy=8.153564,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.868022, edge=0.003031, neigh=2.226104, align=4.522130, entropy=8.142930,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.868037, edge=0.003040, neigh=2.233301, align=4.527654, entropy=8.135592,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.868032, edge=0.003043, neigh=2.239182, align=4.531778, entropy=8.130061,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.868012, edge=0.003043, neigh=2.242914, align=4.534782, entropy=8.125943,s=1.000000, s_hat=1.000000
Time for optimization: 27.99s
Test results:
Top-1: 0.952
Top-10: 0.986
Top-30: 0.995
Top-50: 0.997
Top-100: 1.000
MRR: 0.965
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.057s
Time for attribute perturbation: 0.069s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:13,  7.26it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:12,  7.90it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.32it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.12it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:14,  6.58it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.33it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  6.13it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:18,  5.03it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:18,  4.83it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:19,  4.74it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:17,  5.02it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  4.98it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.39it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.45it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.01it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.50it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  6.97it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:09,  8.18it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.78it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.02it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.37it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.78it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:11,  6.36it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:12,  5.73it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:12,  5.64it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:12,  5.54it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.73it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.81it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.22it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.20it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.34it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:15,  2.95it/s]
Time for cost matrix: 7.93s
Iter 0: wasserstein=1.412223, edge=0.003436, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.898122, edge=0.002852, neigh=2.265110, align=3.828919, entropy=9.067063,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.868043, edge=0.002985, neigh=2.228473, align=4.412661, entropy=8.287457,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.866083, edge=0.002986, neigh=2.232520, align=4.501581, entropy=8.175902,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.866038, edge=0.003009, neigh=2.235145, align=4.526437, entropy=8.143816,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.866131, edge=0.003024, neigh=2.241106, align=4.537442, entropy=8.129336,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.866178, edge=0.003038, neigh=2.251856, align=4.539749, entropy=8.125231,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.866185, edge=0.003045, neigh=2.260143, align=4.540884, entropy=8.122797,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.866178, edge=0.003049, neigh=2.266714, align=4.541747, entropy=8.120881,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.866174, edge=0.003052, neigh=2.272727, align=4.542451, entropy=8.119280,s=1.000000, s_hat=1.000000
Time for optimization: 26.83s
Test results:
Top-1: 0.957
Top-10: 0.990
Top-30: 0.995
Top-50: 0.997
Top-100: 0.999
MRR: 0.969
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.056s
Time for attribute perturbation: 0.069s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.11it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.89it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  7.00it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.83it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.61it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:13,  7.13it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  5.97it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:18,  4.87it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:17,  5.09it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.84it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  6.07it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:14,  6.21it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.42it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.15it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.40it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:16,  5.21it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.26it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:13,  5.99it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.70it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:15,  5.10it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:15,  5.14it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:14,  5.57it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:13,  5.75it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:13,  5.68it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:13,  5.39it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:13,  5.52it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:12,  5.62it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:12,  5.67it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.85it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.54it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.06it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.93it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.58it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.79it/s]
Time for cost matrix: 8.15s
Iter 0: wasserstein=1.414648, edge=0.003435, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.898605, edge=0.002877, neigh=2.278922, align=3.863133, entropy=9.033737,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.868111, edge=0.002991, neigh=2.246325, align=4.432349, entropy=8.264412,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.866112, edge=0.002998, neigh=2.250886, align=4.512893, entropy=8.161769,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.866028, edge=0.003007, neigh=2.251537, align=4.535472, entropy=8.133190,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.866053, edge=0.003017, neigh=2.257971, align=4.547307, entropy=8.118337,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.866059, edge=0.003030, neigh=2.268507, align=4.550700, entropy=8.113240,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.866049, edge=0.003038, neigh=2.276799, align=4.552577, entropy=8.110100,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.866035, edge=0.003043, neigh=2.283378, align=4.554036, entropy=8.107611,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.866018, edge=0.003045, neigh=2.288321, align=4.555203, entropy=8.105571,s=1.000000, s_hat=1.000000
Time for optimization: 27.00s
Test results:
Top-1: 0.959
Top-10: 0.988
Top-30: 0.995
Top-50: 0.997
Top-100: 1.000
MRR: 0.969
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.074s
Time for attribute perturbation: 0.022s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.63it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.72it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.69it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.35it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  4.03it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  3.92it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.52it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.58it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:18,  4.79it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.52it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.79it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  5.10it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:15,  5.67it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  6.11it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.30it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:15,  5.52it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:14,  5.72it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:12,  6.54it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  5.98it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:14,  5.36it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:16,  4.78it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.39it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:15,  4.99it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:14,  5.38it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:13,  5.68it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:13,  5.45it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:12,  6.06it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:11,  6.14it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.76it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.11it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.91it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.28it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.38it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.63it/s]
Time for cost matrix: 8.77s
Iter 0: wasserstein=1.409779, edge=0.003436, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.897775, edge=0.002759, neigh=2.252691, align=3.804710, entropy=9.091035,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.868409, edge=0.002943, neigh=2.217016, align=4.381559, entropy=8.319317,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.866681, edge=0.002998, neigh=2.220752, align=4.474977, entropy=8.203742,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.866711, edge=0.003009, neigh=2.222909, align=4.503676, entropy=8.168713,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.866803, edge=0.003022, neigh=2.228367, align=4.517537, entropy=8.151561,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.866860, edge=0.003035, neigh=2.234706, align=4.525877, entropy=8.140927,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.866856, edge=0.003042, neigh=2.241144, align=4.531634, entropy=8.133279,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.866827, edge=0.003046, neigh=2.246727, align=4.535736, entropy=8.127611,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.866788, edge=0.003048, neigh=2.250991, align=4.538684, entropy=8.123358,s=1.000000, s_hat=1.000000
Time for optimization: 32.57s
Test results:
Top-1: 0.959
Top-10: 0.989
Top-30: 0.995
Top-50: 0.996
Top-100: 0.999
MRR: 0.971
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.088s
Time for attribute perturbation: 0.113s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:45,  2.18it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:33,  2.97it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:33,  2.94it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:35,  2.73it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:34,  2.79it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:29,  3.22it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:31,  2.95it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:35,  2.62it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:39,  2.33it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:35,  2.55it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:04<00:35,  2.51it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:36,  2.41it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:32,  2.65it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:05<00:32,  2.64it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:28,  2.95it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:27,  3.02it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:06<00:31,  2.66it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:32,  2.52it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:07<00:33,  2.39it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:07<00:33,  2.39it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:29,  2.67it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:08<00:30,  2.55it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:08<00:31,  2.46it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:09<00:28,  2.69it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:09<00:25,  2.94it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:09<00:27,  2.71it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:10<00:29,  2.48it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:10<00:26,  2.69it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:25,  2.81it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:11<00:27,  2.56it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:01<00:58,  1.19s/it]Computing product RWR scores:   4%|▍         | 2/50 [00:02<01:01,  1.27s/it]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:43,  1.08it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:59,  1.27s/it]
Time for cost matrix: 17.99s
Iter 0: wasserstein=1.417169, edge=0.003435, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.895834, edge=0.002903, neigh=2.292665, align=3.881042, entropy=9.009015,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.865256, edge=0.003029, neigh=2.253093, align=4.455651, entropy=8.238807,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.863151, edge=0.003021, neigh=2.254347, align=4.537465, entropy=8.135038,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.862933, edge=0.003010, neigh=2.253359, align=4.559661, entropy=8.106738,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.862917, edge=0.003016, neigh=2.260893, align=4.569601, entropy=8.093939,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.862931, edge=0.003033, neigh=2.273164, align=4.572566, entropy=8.089466,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.862927, edge=0.003042, neigh=2.282451, align=4.574430, entropy=8.086504,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.862917, edge=0.003046, neigh=2.289170, align=4.575892, entropy=8.084173,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.862904, edge=0.003048, neigh=2.294208, align=4.577110, entropy=8.082242,s=1.000000, s_hat=1.000000
Time for optimization: 55.20s
Test results:
Top-1: 0.966
Top-10: 0.994
Top-30: 0.998
Top-50: 0.998
Top-100: 1.000
MRR: 0.977
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.071s
Time for attribute perturbation: 0.101s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.41it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  3.98it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:25,  3.73it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:24,  3.93it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:28,  3.28it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:34,  2.74it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:36,  2.52it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:39,  2.33it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:40,  2.26it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:33,  2.69it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:28,  3.12it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:29,  2.99it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:31,  2.74it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:31,  2.75it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:29,  2.89it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:29,  2.80it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:06<00:33,  2.45it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:34,  2.36it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:30,  2.62it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:07<00:28,  2.83it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:24,  3.29it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:23,  3.26it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:23,  3.23it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:08<00:23,  3.22it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:24,  3.06it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:24,  3.01it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:09<00:20,  3.48it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:09<00:17,  4.12it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:16,  4.22it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:24,  2.95it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:01<00:55,  1.14s/it]Computing product RWR scores:   4%|▍         | 2/50 [00:02<00:49,  1.02s/it]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:41,  1.14it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:48,  1.04s/it]
Time for cost matrix: 15.51s
Iter 0: wasserstein=1.410867, edge=0.003436, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.898678, edge=0.002841, neigh=2.266528, align=3.829092, entropy=9.071217,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.868443, edge=0.002999, neigh=2.239428, align=4.418634, entropy=8.281920,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.866379, edge=0.003003, neigh=2.241408, align=4.506671, entropy=8.170391,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.866220, edge=0.002999, neigh=2.241486, align=4.531559, entropy=8.138631,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.866299, edge=0.003017, neigh=2.248132, align=4.542208, entropy=8.124411,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.866344, edge=0.003027, neigh=2.252583, align=4.549332, entropy=8.114895,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.866350, edge=0.003034, neigh=2.256714, align=4.554389, entropy=8.108031,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.866338, edge=0.003041, neigh=2.260998, align=4.558144, entropy=8.102902,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.866321, edge=0.003044, neigh=2.265097, align=4.561307, entropy=8.098669,s=1.000000, s_hat=1.000000
Time for optimization: 44.65s
Test results:
Top-1: 0.970
Top-10: 0.990
Top-30: 0.996
Top-50: 0.997
Top-100: 0.999
MRR: 0.977
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.070s
Time for attribute perturbation: 0.039s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  6.02it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.73it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.21it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.30it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.37it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:18,  5.17it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.34it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.52it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.08it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:15,  5.90it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  5.00it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:15,  5.77it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.18it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.64it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.63it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:13,  6.07it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.51it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  6.12it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:13,  5.84it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.60it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.18it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:10,  6.96it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:13,  5.60it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:15,  4.65it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:17,  4.12it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:16,  4.47it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.44it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.93it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.44it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.31it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.38it/s]
Time for cost matrix: 8.49s
Iter 0: wasserstein=1.407052, edge=0.003437, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.900898, edge=0.002824, neigh=2.266729, align=3.778870, entropy=9.125949,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.870933, edge=0.002975, neigh=2.218807, align=4.379002, entropy=8.325495,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.868876, edge=0.002999, neigh=2.229065, align=4.473714, entropy=8.206436,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.868754, edge=0.003007, neigh=2.230915, align=4.501500, entropy=8.171131,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.868812, edge=0.003016, neigh=2.234834, align=4.514283, entropy=8.154298,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.868856, edge=0.003032, neigh=2.244139, align=4.516148, entropy=8.150054,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.868867, edge=0.003043, neigh=2.252211, align=4.517224, entropy=8.147253,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.868860, edge=0.003049, neigh=2.258987, align=4.518495, entropy=8.144656,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.868845, edge=0.003052, neigh=2.264414, align=4.519746, entropy=8.142337,s=1.000000, s_hat=1.000000
Time for optimization: 26.39s
Test results:
Top-1: 0.953
Top-10: 0.987
Top-30: 0.996
Top-50: 0.996
Top-100: 0.999
MRR: 0.966
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.078s
Time for attribute perturbation: 0.067s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.57it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:12,  7.74it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:12,  7.57it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  7.29it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  7.84it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:13,  6.92it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.43it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.71it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.16it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.47it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:16,  5.24it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:17,  4.88it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  4.84it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:17,  4.95it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.66it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:14,  5.69it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  5.92it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.83it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:15,  5.21it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.90it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.49it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.61it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:10,  7.13it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:10,  7.09it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:11,  6.49it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:12,  5.98it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:13,  5.46it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.81it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.47it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.79it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.03it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.53it/s]
Time for cost matrix: 7.84s
Iter 0: wasserstein=1.414705, edge=0.003436, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.898940, edge=0.002852, neigh=2.265013, align=3.853266, entropy=9.041321,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.868475, edge=0.002998, neigh=2.234862, align=4.433550, entropy=8.262659,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.866576, edge=0.003009, neigh=2.237454, align=4.511576, entropy=8.162157,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.866536, edge=0.003019, neigh=2.240214, align=4.534214, entropy=8.133330,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.866628, edge=0.003030, neigh=2.246369, align=4.545074, entropy=8.119373,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.866663, edge=0.003039, neigh=2.254147, align=4.547873, entropy=8.115018,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.866665, edge=0.003044, neigh=2.260255, align=4.549469, entropy=8.112305,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.866654, edge=0.003048, neigh=2.265545, align=4.550867, entropy=8.109987,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.866635, edge=0.003050, neigh=2.269897, align=4.552139, entropy=8.107927,s=1.000000, s_hat=1.000000
Time for optimization: 27.91s
Test results:
Top-1: 0.964
Top-10: 0.989
Top-30: 0.996
Top-50: 0.998
Top-100: 0.999
MRR: 0.973
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.026s
Time for attribute perturbation: 0.043s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  6.04it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  4.99it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  7.26it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:09, 10.03it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:06, 13.52it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:05, 15.48it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:06, 12.70it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:07, 11.02it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:08,  9.42it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:08,  8.89it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:09,  8.17it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:10,  7.59it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:10,  7.08it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:11,  6.72it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:11,  6.30it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.33it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.43it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.12it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.16it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:18,  2.59it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:23,  2.00it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  1.99it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:29,  1.59it/s]
Time for cost matrix: 7.16s
Iter 0: wasserstein=1.405969, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.926285, edge=0.002719, neigh=2.174646, align=3.506341, entropy=9.444465,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.897172, edge=0.002883, neigh=2.124947, align=4.103330, entropy=8.632283,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.895127, edge=0.002935, neigh=2.132791, align=4.221029, entropy=8.481579,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.895074, edge=0.002958, neigh=2.135004, align=4.258946, entropy=8.430812,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.895154, edge=0.002963, neigh=2.141816, align=4.278411, entropy=8.403732,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.895123, edge=0.002967, neigh=2.149907, align=4.279606, entropy=8.398206,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.895082, edge=0.002970, neigh=2.155113, align=4.278057, entropy=8.396698,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.895054, edge=0.002973, neigh=2.159012, align=4.276393, entropy=8.395988,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.895032, edge=0.002975, neigh=2.162355, align=4.275019, entropy=8.395418,s=1.000000, s_hat=1.000000
Time for optimization: 28.12s
Test results:
Top-1: 0.904
Top-10: 0.965
Top-30: 0.983
Top-50: 0.988
Top-100: 0.993
MRR: 0.924
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.072s
Time for attribute perturbation: 0.061s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  4.96it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:16,  5.79it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.43it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  7.22it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:14,  6.71it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:13,  6.98it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.59it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  5.91it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.53it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.73it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:15,  5.87it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:16,  5.24it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.59it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:18,  4.77it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:18,  4.70it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:16,  5.07it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:12,  6.32it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  6.09it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  6.10it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.22it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.66it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:13,  5.85it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:13,  5.43it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:15,  4.77it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:14,  4.94it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:13,  5.26it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:13,  5.23it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  5.05it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.38it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.81it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.64it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.47it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.70it/s]
Time for cost matrix: 8.58s
Iter 0: wasserstein=1.407655, edge=0.003327, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.923432, edge=0.002718, neigh=2.200192, align=3.555845, entropy=9.388954,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.893778, edge=0.002872, neigh=2.142126, align=4.151211, entropy=8.576757,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.891974, edge=0.002923, neigh=2.144895, align=4.264561, entropy=8.433881,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.892027, edge=0.002951, neigh=2.145064, align=4.305674, entropy=8.381906,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.892058, edge=0.002952, neigh=2.148282, align=4.327794, entropy=8.353017,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.892029, edge=0.002952, neigh=2.150596, align=4.341190, entropy=8.334923,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.891971, edge=0.002955, neigh=2.153363, align=4.349426, entropy=8.323238,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.891921, edge=0.002959, neigh=2.156280, align=4.354419, entropy=8.315570,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.891885, edge=0.002962, neigh=2.159633, align=4.357403, entropy=8.310448,s=1.000000, s_hat=1.000000
Time for optimization: 27.14s
Test results:
Top-1: 0.919
Top-10: 0.968
Top-30: 0.984
Top-50: 0.988
Top-100: 0.992
MRR: 0.938
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.055s
Time for attribute perturbation: 0.047s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.30it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.58it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.69it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.68it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:16,  5.83it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:15,  5.98it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  6.04it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:16,  5.68it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  5.84it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.03it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  6.24it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:14,  6.04it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  6.13it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:13,  6.17it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.19it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:16,  5.13it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.51it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:13,  6.27it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.74it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:15,  5.04it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.16it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.02it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:12,  5.87it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:11,  6.35it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:10,  6.99it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:11,  6.25it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:13,  5.29it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  4.89it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.55it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.47it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.09it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.95it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.86it/s]
Time for cost matrix: 8.19s
Iter 0: wasserstein=1.401434, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.927725, edge=0.002753, neigh=2.163469, align=3.439158, entropy=9.520853,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.898611, edge=0.002917, neigh=2.113327, align=4.013582, entropy=8.724067,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.896766, edge=0.002966, neigh=2.126178, align=4.132888, entropy=8.574787,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.896736, edge=0.002977, neigh=2.126633, align=4.174400, entropy=8.521116,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.896732, edge=0.002977, neigh=2.129824, align=4.194588, entropy=8.492904,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.896765, edge=0.002978, neigh=2.130330, align=4.206076, entropy=8.475854,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.896762, edge=0.002980, neigh=2.131237, align=4.213702, entropy=8.464087,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.896738, edge=0.002984, neigh=2.131872, align=4.219038, entropy=8.455567,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.896706, edge=0.002986, neigh=2.132983, align=4.222936, entropy=8.449133,s=1.000000, s_hat=1.000000
Time for optimization: 27.87s
Test results:
Top-1: 0.879
Top-10: 0.947
Top-30: 0.975
Top-50: 0.980
Top-100: 0.989
MRR: 0.905
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.068s
Time for attribute perturbation: 0.055s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  5.01it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.99it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  6.99it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.32it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  6.93it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:13,  7.02it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.38it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.41it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  5.85it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.81it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:15,  5.66it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  4.94it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.35it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:18,  4.62it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:19,  4.30it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.30it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:16,  5.06it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:17,  4.79it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:15,  5.10it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:14,  5.50it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:14,  5.42it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:15,  5.18it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:15,  4.87it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:15,  5.02it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:14,  5.01it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:15,  4.77it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:13,  5.57it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:12,  6.00it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:11,  6.42it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.26it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.18it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.41it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.83it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.78it/s]
Time for cost matrix: 8.54s
Iter 0: wasserstein=1.404205, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.925744, edge=0.002722, neigh=2.180408, align=3.500081, entropy=9.444760,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.896942, edge=0.002882, neigh=2.130348, align=4.073454, entropy=8.657325,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.895190, edge=0.002932, neigh=2.137977, align=4.191820, entropy=8.508663,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.895232, edge=0.002962, neigh=2.136622, align=4.238056, entropy=8.450582,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.895253, edge=0.002965, neigh=2.138938, align=4.262160, entropy=8.419451,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.895240, edge=0.002965, neigh=2.139835, align=4.275222, entropy=8.401728,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.895203, edge=0.002967, neigh=2.142377, align=4.283019, entropy=8.390528,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.895151, edge=0.002968, neigh=2.145278, align=4.288345, entropy=8.382606,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.895114, edge=0.002971, neigh=2.148317, align=4.291948, entropy=8.376948,s=1.000000, s_hat=1.000000
Time for optimization: 27.79s
Test results:
Top-1: 0.899
Top-10: 0.963
Top-30: 0.981
Top-50: 0.987
Top-100: 0.992
MRR: 0.923
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.051s
Time for attribute perturbation: 0.043s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.63it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.21it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.72it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.83it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:19,  4.92it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:16,  5.72it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:16,  5.53it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:16,  5.70it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.38it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:18,  4.96it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:15,  5.67it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:14,  5.87it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.13it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  5.02it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.27it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.76it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:16,  5.05it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:14,  5.62it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.74it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.98it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.35it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:13,  5.93it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:12,  6.18it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:12,  5.88it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:14,  5.18it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:15,  4.66it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:16,  4.46it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.78it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  4.83it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.09it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.34it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.72it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.90it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.30it/s]
Time for cost matrix: 8.90s
Iter 0: wasserstein=1.397727, edge=0.003329, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.929871, edge=0.002799, neigh=2.173475, align=3.384878, entropy=9.584187,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.901024, edge=0.002959, neigh=2.104227, align=3.946908, entropy=8.799053,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.899006, edge=0.002974, neigh=2.105691, align=4.063544, entropy=8.648675,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.898991, edge=0.002987, neigh=2.102428, align=4.102779, entropy=8.596272,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.898992, edge=0.002990, neigh=2.106400, align=4.122954, entropy=8.567492,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.898936, edge=0.002989, neigh=2.108149, align=4.134778, entropy=8.549225,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.898858, edge=0.002989, neigh=2.110766, align=4.142810, entropy=8.536235,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.898785, edge=0.002989, neigh=2.113387, align=4.148360, entropy=8.526876,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.898691, edge=0.002992, neigh=2.116890, align=4.147476, entropy=8.525030,s=1.000000, s_hat=1.000000
Time for optimization: 28.00s
Test results:
Top-1: 0.853
Top-10: 0.942
Top-30: 0.970
Top-50: 0.978
Top-100: 0.986
MRR: 0.887
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.027s
Time for attribute perturbation: 0.095s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  6.13it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.66it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.23it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.41it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:18,  5.20it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.27it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.80it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:17,  5.18it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  5.92it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.77it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  6.04it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:15,  5.62it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  5.99it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.30it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.38it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  7.28it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  5.93it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:15,  5.21it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:14,  5.59it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.89it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:13,  5.87it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:13,  5.61it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:14,  5.25it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:12,  5.99it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:11,  6.59it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:10,  7.07it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.89it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.78it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:22,  2.17it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.92it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.28it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.39it/s]
Time for cost matrix: 8.03s
Iter 0: wasserstein=1.403251, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.925275, edge=0.002710, neigh=2.192901, align=3.492396, entropy=9.456907,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.896831, edge=0.002887, neigh=2.123585, align=4.053620, entropy=8.679970,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.895178, edge=0.002935, neigh=2.123691, align=4.166726, entropy=8.536617,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.895311, edge=0.002961, neigh=2.121312, align=4.206067, entropy=8.486181,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.895427, edge=0.002976, neigh=2.123932, align=4.226713, entropy=8.458432,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.895469, edge=0.002981, neigh=2.126031, align=4.239921, entropy=8.440079,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.895384, edge=0.002981, neigh=2.130512, align=4.240313, entropy=8.435900,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.895304, edge=0.002980, neigh=2.134154, align=4.238757, entropy=8.434509,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.895243, edge=0.002981, neigh=2.137298, align=4.237138, entropy=8.433765,s=1.000000, s_hat=1.000000
Time for optimization: 26.69s
Test results:
Top-1: 0.871
Top-10: 0.955
Top-30: 0.979
Top-50: 0.983
Top-100: 0.988
MRR: 0.902
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.067s
Time for attribute perturbation: 0.082s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.94it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:16,  6.02it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.43it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.20it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:16,  5.82it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  6.75it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.35it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.89it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  6.95it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.38it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:12,  6.95it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:13,  6.32it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  5.78it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:16,  5.21it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.23it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  6.05it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.74it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:14,  5.42it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:15,  5.05it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:14,  5.42it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:14,  5.22it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:15,  4.82it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:15,  4.80it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:13,  5.28it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:13,  5.28it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.09it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.50it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.22it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.64it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.24it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.12it/s]
Time for cost matrix: 8.48s
Iter 0: wasserstein=1.402885, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.925704, edge=0.002755, neigh=2.192175, align=3.477906, entropy=9.473446,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.896794, edge=0.002915, neigh=2.121935, align=4.064066, entropy=8.671152,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.894934, edge=0.002956, neigh=2.124640, align=4.181046, entropy=8.523025,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.894907, edge=0.002968, neigh=2.122366, align=4.220229, entropy=8.471665,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.894945, edge=0.002973, neigh=2.124276, align=4.238440, entropy=8.445644,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.894977, edge=0.002975, neigh=2.125187, align=4.249801, entropy=8.428958,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.894939, edge=0.002974, neigh=2.127538, align=4.258168, entropy=8.416725,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.894874, edge=0.002975, neigh=2.132191, align=4.258371, entropy=8.413935,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.894827, edge=0.002977, neigh=2.136487, align=4.257372, entropy=8.412921,s=1.000000, s_hat=1.000000
Time for optimization: 27.30s
Test results:
Top-1: 0.886
Top-10: 0.961
Top-30: 0.977
Top-50: 0.985
Top-100: 0.990
MRR: 0.914
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.046s
Time for attribute perturbation: 0.046s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  4.97it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.81it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.57it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.74it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.74it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.67it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.76it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:18,  4.99it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:20,  4.48it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.53it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.73it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  5.13it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.19it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:15,  5.65it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.44it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:14,  5.87it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:13,  5.95it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  5.04it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:16,  4.89it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:16,  4.89it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:16,  4.66it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.38it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:17,  4.51it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:15,  4.79it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:15,  4.98it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:14,  5.02it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:14,  5.21it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:12,  5.86it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:11,  6.03it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  4.88it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.80it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.90it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.70it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.77it/s]
Time for cost matrix: 8.94s
Iter 0: wasserstein=1.401834, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.928465, edge=0.002775, neigh=2.177525, align=3.434793, entropy=9.525969,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.899089, edge=0.002926, neigh=2.108543, align=4.019672, entropy=8.718343,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.897273, edge=0.002970, neigh=2.112129, align=4.132485, entropy=8.573821,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.897339, edge=0.002980, neigh=2.110999, align=4.172546, entropy=8.521878,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.897375, edge=0.002976, neigh=2.112975, align=4.192766, entropy=8.493755,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.897323, edge=0.002977, neigh=2.119418, align=4.193017, entropy=8.488398,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.897262, edge=0.002978, neigh=2.124379, align=4.190571, entropy=8.487021,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.897217, edge=0.002979, neigh=2.128075, align=4.188016, entropy=8.486596,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.897184, edge=0.002981, neigh=2.131263, align=4.185739, entropy=8.486474,s=1.000000, s_hat=1.000000
Time for optimization: 27.39s
Test results:
Top-1: 0.869
Top-10: 0.948
Top-30: 0.976
Top-50: 0.982
Top-100: 0.985
MRR: 0.898
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.024s
Time for attribute perturbation: 0.077s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.33it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  5.04it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:16,  5.80it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.43it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.45it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:18,  5.00it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.57it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.27it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:21,  4.28it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.52it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:17,  5.17it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  4.96it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.16it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.33it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.38it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:15,  5.33it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:16,  4.92it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:14,  5.56it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:15,  5.14it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.55it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.42it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:16,  4.64it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:15,  5.11it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:11,  6.71it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:11,  6.42it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:12,  6.01it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:11,  6.38it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:11,  5.92it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.12it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.22it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.85it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.74it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.24it/s]
Time for cost matrix: 8.86s
Iter 0: wasserstein=1.403996, edge=0.003328, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.926892, edge=0.002767, neigh=2.172624, align=3.467141, entropy=9.487029,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.897984, edge=0.002940, neigh=2.117107, align=4.050194, entropy=8.687585,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.896019, edge=0.002970, neigh=2.119911, align=4.166020, entropy=8.540104,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.896048, edge=0.002987, neigh=2.119533, align=4.209450, entropy=8.484302,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.896078, edge=0.002982, neigh=2.122213, align=4.233193, entropy=8.452831,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.896027, edge=0.002974, neigh=2.122177, align=4.247035, entropy=8.433676,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.895959, edge=0.002972, neigh=2.122760, align=4.254882, entropy=8.421919,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.895913, edge=0.002974, neigh=2.124687, align=4.259793, entropy=8.413947,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.895882, edge=0.002976, neigh=2.127389, align=4.263143, entropy=8.408065,s=1.000000, s_hat=1.000000
Time for optimization: 28.87s
Test results:
Top-1: 0.889
Top-10: 0.958
Top-30: 0.980
Top-50: 0.987
Top-100: 0.992
MRR: 0.916
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.059s
Time for attribute perturbation: 0.034s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.27it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.28it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.54it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.17it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:14,  6.50it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:16,  5.69it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.41it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  5.97it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.53it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.77it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.47it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.65it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:12,  6.79it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:12,  6.70it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.63it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.95it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.13it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.62it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:11,  7.18it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.70it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.08it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.08it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.68it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  6.91it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:11,  6.49it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:11,  6.02it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.09it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.20it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.79it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.32it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.75it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.76it/s]
Time for cost matrix: 7.65s
Iter 0: wasserstein=1.400606, edge=0.003329, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.929305, edge=0.002774, neigh=2.164628, align=3.408056, entropy=9.554017,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.900274, edge=0.002937, neigh=2.104957, align=3.979534, entropy=8.761000,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.898423, edge=0.002952, neigh=2.108513, align=4.096802, entropy=8.613356,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.898607, edge=0.002979, neigh=2.107074, align=4.137036, entropy=8.561172,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.898782, edge=0.002989, neigh=2.110602, align=4.158799, entropy=8.531074,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.898840, edge=0.002990, neigh=2.112402, align=4.172838, entropy=8.510865,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.898776, edge=0.002986, neigh=2.114613, align=4.183102, entropy=8.495978,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.898638, edge=0.002987, neigh=2.118153, align=4.183390, entropy=8.492344,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.898537, edge=0.002988, neigh=2.120989, align=4.181975, entropy=8.491198,s=1.000000, s_hat=1.000000
Time for optimization: 24.88s
Test results:
Top-1: 0.863
Top-10: 0.947
Top-30: 0.972
Top-50: 0.976
Top-100: 0.985
MRR: 0.894
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.016s
Time for attribute perturbation: 0.023s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:06, 15.23it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:05, 17.44it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:05, 17.99it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:04, 18.47it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:06, 13.60it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:06, 12.58it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:06, 12.58it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:05, 14.18it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:05, 15.59it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:04, 16.63it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:04, 17.12it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:04, 17.87it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:04, 18.05it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:04, 17.15it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:04, 15.57it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.13it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:07,  6.00it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:07,  6.43it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.69it/s]
Time for cost matrix: 3.52s
Iter 0: wasserstein=1.396122, edge=0.003274, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.944294, edge=0.002750, neigh=2.123609, align=3.161761, entropy=9.839167,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.916178, edge=0.002957, neigh=2.034770, align=3.667753, entropy=9.100268,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.914323, edge=0.002992, neigh=2.032442, align=3.766217, entropy=8.964388,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.914384, edge=0.003002, neigh=2.023413, align=3.796956, entropy=8.916915,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.914357, edge=0.002993, neigh=2.022496, align=3.814095, entropy=8.887512,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.914234, edge=0.002988, neigh=2.021788, align=3.826591, entropy=8.865732,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.914076, edge=0.002986, neigh=2.022942, align=3.836357, entropy=8.849110,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.913914, edge=0.002985, neigh=2.024563, align=3.843697, entropy=8.836787,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.913744, edge=0.002987, neigh=2.027868, align=3.842528, entropy=8.834352,s=1.000000, s_hat=1.000000
Time for optimization: 27.38s
Test results:
Top-1: 0.728
Top-10: 0.893
Top-30: 0.932
Top-50: 0.944
Top-100: 0.955
MRR: 0.788
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.104s
Time for attribute perturbation: 0.096s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:07, 13.21it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:11,  8.49it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.51it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:16,  5.68it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:11,  7.87it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.76it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:20,  4.43it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:25,  3.50it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:24,  3.59it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:21,  3.93it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.05it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:22,  3.79it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:25,  3.22it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:26,  3.11it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:28,  2.80it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:30,  2.59it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:31,  2.48it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:32,  2.40it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:32,  2.38it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:06<00:28,  2.68it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:29,  2.56it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:07<00:31,  2.38it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:30,  2.37it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:27,  2.59it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:26,  2.63it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:22,  3.17it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:19,  2.54it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:29,  1.62it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:25,  1.83it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:30,  1.52it/s]
Time for cost matrix: 13.66s
Iter 0: wasserstein=1.396137, edge=0.003273, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.942935, edge=0.002760, neigh=2.114513, align=3.182658, entropy=9.819752,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.914181, edge=0.002951, neigh=2.032150, align=3.704652, entropy=9.059266,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.912127, edge=0.002977, neigh=2.031830, align=3.817449, entropy=8.909308,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.912271, edge=0.003002, neigh=2.027011, align=3.855447, entropy=8.855634,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.912188, edge=0.002991, neigh=2.029352, align=3.877528, entropy=8.822050,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.912042, edge=0.002986, neigh=2.031044, align=3.891029, entropy=8.799815,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.911871, edge=0.002986, neigh=2.033753, align=3.900207, entropy=8.784203,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.911697, edge=0.002987, neigh=2.037555, align=3.898642, entropy=8.781316,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.911567, edge=0.002988, neigh=2.040823, align=3.895864, entropy=8.780739,s=1.000000, s_hat=1.000000
Time for optimization: 55.12s
Test results:
Top-1: 0.747
Top-10: 0.904
Top-30: 0.945
Top-50: 0.955
Top-100: 0.970
MRR: 0.804
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.102s
Time for attribute perturbation: 0.079s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:42,  2.35it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:42,  2.31it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:43,  2.21it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:39,  2.43it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:34,  2.72it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:39,  2.37it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:40,  2.29it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:03<00:35,  2.56it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:33,  2.74it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:33,  2.67it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:04<00:34,  2.55it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:33,  2.59it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:05<00:32,  2.67it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:05<00:30,  2.83it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:27,  3.14it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:26,  3.22it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:06<00:22,  3.76it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:20,  3.98it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:18,  4.29it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:19,  4.21it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:20,  3.94it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:18,  4.12it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:19,  3.88it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:18,  4.14it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:18,  4.10it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:17,  4.35it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:14,  4.95it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:13,  5.53it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:14,  4.85it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:22,  3.12it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:37,  1.31it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:42,  1.13it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:32,  1.45it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:52,  1.12s/it]
Time for cost matrix: 15.78s
Iter 0: wasserstein=1.395071, edge=0.003274, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.944040, edge=0.002767, neigh=2.111647, align=3.168808, entropy=9.838934,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.915634, edge=0.002967, neigh=2.035328, align=3.669749, entropy=9.098892,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.913552, edge=0.002990, neigh=2.037946, align=3.769139, entropy=8.960623,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.913314, edge=0.002992, neigh=2.032413, align=3.804826, entropy=8.906898,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.913061, edge=0.002986, neigh=2.034118, align=3.825829, entropy=8.873406,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.912926, edge=0.002986, neigh=2.034873, align=3.838470, entropy=8.851899,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.912779, edge=0.002987, neigh=2.036869, align=3.848413, entropy=8.835499,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.912618, edge=0.002988, neigh=2.038611, align=3.855966, entropy=8.823222,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.912469, edge=0.002989, neigh=2.040533, align=3.861434, entropy=8.814210,s=1.000000, s_hat=1.000000
Time for optimization: 39.79s
Test results:
Top-1: 0.737
Top-10: 0.902
Top-30: 0.941
Top-50: 0.949
Top-100: 0.965
MRR: 0.798
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.074s
Time for attribute perturbation: 0.060s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.38it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.56it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.48it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.47it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.45it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.32it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.24it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.22it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.42it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.30it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.37it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.36it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:20,  4.35it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.52it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.32it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:17,  4.90it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:16,  4.99it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:17,  4.76it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:17,  4.60it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.59it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.45it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:18,  4.28it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.27it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.20it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.18it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.19it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.27it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.36it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.36it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.27it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.72it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.08it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.05it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.21it/s]
Time for cost matrix: 10.17s
Iter 0: wasserstein=1.394205, edge=0.003274, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.943533, edge=0.002725, neigh=2.100397, align=3.161470, entropy=9.845625,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.915288, edge=0.002946, neigh=2.034091, align=3.647168, entropy=9.120735,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.913481, edge=0.002991, neigh=2.040191, align=3.736355, entropy=8.994542,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.913500, edge=0.003013, neigh=2.038720, align=3.764267, entropy=8.949516,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.913363, edge=0.003008, neigh=2.040474, align=3.781702, entropy=8.919737,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.913216, edge=0.003007, neigh=2.045956, align=3.777809, entropy=8.915293,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.913095, edge=0.003007, neigh=2.050581, align=3.772088, entropy=8.914864,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.912971, edge=0.003006, neigh=2.054170, align=3.767513, entropy=8.914719,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.912856, edge=0.003006, neigh=2.056875, align=3.764034, entropy=8.914498,s=1.000000, s_hat=1.000000
Time for optimization: 30.73s
Test results:
Top-1: 0.713
Top-10: 0.895
Top-30: 0.934
Top-50: 0.946
Top-100: 0.957
MRR: 0.777
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.077s
Time for attribute perturbation: 0.063s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.52it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.21it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.31it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.31it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.34it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.26it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.22it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.35it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.45it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.59it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.46it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.75it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.81it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.60it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.65it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.54it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.62it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.46it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:17,  4.55it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.48it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.38it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.39it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.18it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.29it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.38it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.37it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.24it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.27it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.26it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.26it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.40it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.68it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.76it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.62it/s]
Time for cost matrix: 10.06s
Iter 0: wasserstein=1.394790, edge=0.003274, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.943185, edge=0.002798, neigh=2.111250, align=3.158486, entropy=9.841861,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.914860, edge=0.002969, neigh=2.035644, align=3.670992, entropy=9.096571,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.912790, edge=0.002991, neigh=2.038804, align=3.768157, entropy=8.961670,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.912793, edge=0.003005, neigh=2.032887, align=3.801050, entropy=8.911449,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.912645, edge=0.002997, neigh=2.034217, align=3.820895, entropy=8.878926,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.912509, edge=0.002993, neigh=2.034541, align=3.832436, entropy=8.858443,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.912401, edge=0.002992, neigh=2.036055, align=3.839895, entropy=8.844570,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.912243, edge=0.002993, neigh=2.038975, align=3.838051, entropy=8.841913,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.912106, edge=0.002993, neigh=2.041278, align=3.835364, entropy=8.841201,s=1.000000, s_hat=1.000000
Time for optimization: 32.44s
Test results:
Top-1: 0.716
Top-10: 0.898
Top-30: 0.940
Top-50: 0.950
Top-100: 0.962
MRR: 0.782
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.056s
Time for attribute perturbation: 0.057s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.24it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.69it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.49it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.42it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.41it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.42it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.37it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.37it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.38it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.45it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.30it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.31it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:20,  4.28it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.24it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.14it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.19it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.33it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.15it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.19it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.24it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.27it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.15it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.22it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.30it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.38it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.26it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.09it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.06it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.07it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.12it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.76it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:23,  2.03it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:27,  1.74it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:29,  1.57it/s]
Time for cost matrix: 10.91s
Iter 0: wasserstein=1.400734, edge=0.003273, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.940525, edge=0.002716, neigh=2.113602, align=3.267927, entropy=9.722450,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.911753, edge=0.002899, neigh=2.058335, align=3.798510, entropy=8.959095,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.910000, edge=0.002945, neigh=2.058136, align=3.902805, entropy=8.820833,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.910079, edge=0.002967, neigh=2.052451, align=3.940871, entropy=8.767734,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.910043, edge=0.002970, neigh=2.052679, align=3.962554, entropy=8.735411,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.909973, edge=0.002966, neigh=2.051919, align=3.975295, entropy=8.714986,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.909873, edge=0.002964, neigh=2.051957, align=3.983067, entropy=8.701449,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.909756, edge=0.002966, neigh=2.054862, align=3.980740, entropy=8.699596,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.909657, edge=0.002966, neigh=2.057342, align=3.977485, entropy=8.699615,s=1.000000, s_hat=1.000000
Time for optimization: 29.73s
Test results:
Top-1: 0.800
Top-10: 0.920
Top-30: 0.955
Top-50: 0.964
Top-100: 0.971
MRR: 0.843
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.079s
Time for attribute perturbation: 0.071s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.02it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.16it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.19it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.26it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  4.13it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  3.94it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.07it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:22,  4.07it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.09it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.24it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.39it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.28it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:19,  4.39it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.24it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.08it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.14it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.24it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.33it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.35it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.21it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.24it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.25it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.14it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.19it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.18it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.14it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.21it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.26it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.42it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.08it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.35it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.40it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.27it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  1.99it/s]
Time for cost matrix: 10.80s
Iter 0: wasserstein=1.402343, edge=0.003273, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.938655, edge=0.002731, neigh=2.127503, align=3.298131, entropy=9.676991,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.910345, edge=0.002897, neigh=2.063579, align=3.851351, entropy=8.900565,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.908452, edge=0.002930, neigh=2.062553, align=3.969421, entropy=8.748620,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.908490, edge=0.002954, neigh=2.059818, align=4.011448, entropy=8.691989,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.908535, edge=0.002959, neigh=2.060892, align=4.034278, entropy=8.659665,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.908541, edge=0.002958, neigh=2.060658, align=4.048788, entropy=8.638211,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.908468, edge=0.002953, neigh=2.061727, align=4.059242, entropy=8.622386,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.908366, edge=0.002950, neigh=2.063083, align=4.066322, entropy=8.611077,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.908249, edge=0.002951, neigh=2.066105, align=4.065467, entropy=8.608794,s=1.000000, s_hat=1.000000
Time for optimization: 31.82s
Test results:
Top-1: 0.837
Top-10: 0.940
Top-30: 0.967
Top-50: 0.977
Top-100: 0.984
MRR: 0.874
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.059s
Time for attribute perturbation: 0.065s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.93it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.46it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  5.00it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.05it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.62it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.34it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:23,  3.96it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:23,  3.88it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  3.98it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  4.03it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.14it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.20it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:19,  4.36it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.34it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.35it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.60it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.61it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.44it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.40it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.54it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.35it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.33it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.32it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.24it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:18,  4.12it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:18,  4.10it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.20it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.44it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.26it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.18it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:19,  2.50it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.69it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.65it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:27,  1.73it/s]
Time for cost matrix: 10.75s
Iter 0: wasserstein=1.402759, edge=0.003273, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.940229, edge=0.002728, neigh=2.114476, align=3.283339, entropy=9.696946,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.911587, edge=0.002903, neigh=2.055916, align=3.830770, entropy=8.921935,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.909732, edge=0.002944, neigh=2.056506, align=3.943000, entropy=8.775763,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.909736, edge=0.002956, neigh=2.053006, align=3.986016, entropy=8.718498,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.909738, edge=0.002956, neigh=2.054109, align=4.009340, entropy=8.685543,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.909691, edge=0.002955, neigh=2.054216, align=4.022677, entropy=8.665147,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.909608, edge=0.002954, neigh=2.055387, align=4.031398, entropy=8.650942,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.909501, edge=0.002952, neigh=2.056975, align=4.037818, entropy=8.640188,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.909398, edge=0.002952, neigh=2.059148, align=4.042479, entropy=8.632088,s=1.000000, s_hat=1.000000
Time for optimization: 31.22s
Test results:
Top-1: 0.820
Top-10: 0.933
Top-30: 0.966
Top-50: 0.974
Top-100: 0.981
MRR: 0.863
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.040s
Time for attribute perturbation: 0.082s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.71it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.51it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.66it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.66it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.67it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.51it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.54it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.61it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.73it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:17,  5.28it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:15,  5.90it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:15,  5.77it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.26it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  4.99it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:17,  4.73it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.59it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.45it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:17,  4.58it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:16,  5.03it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:13,  5.85it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:13,  5.76it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:14,  5.24it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:16,  4.79it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:17,  4.41it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:15,  4.89it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:14,  4.98it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.81it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:14,  5.00it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.18it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:14,  4.76it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.79it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.01it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.72it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.15it/s]
Time for cost matrix: 9.53s
Iter 0: wasserstein=1.398657, edge=0.003273, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.939738, edge=0.002711, neigh=2.133098, align=3.262883, entropy=9.724943,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.911622, edge=0.002904, neigh=2.061893, align=3.781106, entropy=8.978011,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.909909, edge=0.002958, neigh=2.061948, align=3.876544, entropy=8.845936,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.909842, edge=0.002980, neigh=2.058284, align=3.911699, entropy=8.794400,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.909784, edge=0.002982, neigh=2.061318, align=3.931250, entropy=8.763980,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.909707, edge=0.002980, neigh=2.063114, align=3.943847, entropy=8.743730,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.909605, edge=0.002977, neigh=2.065184, align=3.952422, entropy=8.729504,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.909460, edge=0.002975, neigh=2.068735, align=3.951249, entropy=8.726601,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.909335, edge=0.002974, neigh=2.071636, align=3.948926, entropy=8.725816,s=1.000000, s_hat=1.000000
Time for optimization: 33.55s
Test results:
Top-1: 0.784
Top-10: 0.905
Top-30: 0.938
Top-50: 0.951
Top-100: 0.969
MRR: 0.830
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.074s
Time for attribute perturbation: 0.068s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.37it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.54it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.22it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.84it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:14,  6.78it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:14,  6.40it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  5.97it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:16,  5.74it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:17,  5.32it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.87it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:15,  5.93it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:16,  5.22it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:15,  5.51it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.23it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:17,  4.91it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:18,  4.58it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.56it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.47it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:17,  4.51it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:18,  4.36it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.39it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.40it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:17,  4.36it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:17,  4.35it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.41it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.35it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:17,  4.16it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:16,  4.28it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:17,  4.16it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.66it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:19,  2.58it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.95it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.84it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.07it/s]
Time for cost matrix: 9.80s
Iter 0: wasserstein=1.390427, edge=0.003274, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.944628, edge=0.002785, neigh=2.127094, align=3.090159, entropy=9.922154,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.916754, edge=0.002983, neigh=2.040620, align=3.555627, entropy=9.217430,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.914655, edge=0.003013, neigh=2.042509, align=3.641755, entropy=9.090784,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.914617, edge=0.003030, neigh=2.034692, align=3.670345, entropy=9.043990,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.914476, edge=0.003028, neigh=2.035947, align=3.688000, entropy=9.013708,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.914327, edge=0.003022, neigh=2.036687, align=3.698931, entropy=8.993642,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.914180, edge=0.003019, neigh=2.038268, align=3.706309, entropy=8.979391,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.913997, edge=0.003018, neigh=2.042178, align=3.703932, entropy=8.976832,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.913845, edge=0.003019, neigh=2.045256, align=3.700795, entropy=8.976284,s=1.000000, s_hat=1.000000
Time for optimization: 33.75s
Test results:
Top-1: 0.635
Top-10: 0.857
Top-30: 0.918
Top-50: 0.929
Top-100: 0.946
MRR: 0.716
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.056s
Time for attribute perturbation: 0.046s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.17it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.83it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:10,  9.05it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.32it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:12,  7.30it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.52it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  8.03it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.13it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.59it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:11,  7.77it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:08,  9.96it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:08,  9.48it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:08,  8.92it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:09,  8.27it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:09,  8.44it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:09,  8.17it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:08,  8.54it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.43it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  7.11it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:11,  6.42it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:12,  5.60it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:12,  5.51it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.36it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.38it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.77it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.56it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.49it/s]
Time for cost matrix: 6.48s
Iter 0: wasserstein=1.390961, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950620, edge=0.002725, neigh=2.117732, align=3.022062, entropy=10.004188,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923745, edge=0.002964, neigh=2.017472, align=3.442058, entropy=9.343584,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921821, edge=0.003030, neigh=2.015432, align=3.510826, entropy=9.232072,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921588, edge=0.003038, neigh=2.009115, align=3.531985, entropy=9.190809,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921268, edge=0.003030, neigh=2.008876, align=3.543288, entropy=9.164841,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920995, edge=0.003022, neigh=2.009180, align=3.550928, entropy=9.146225,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920753, edge=0.003018, neigh=2.010788, align=3.557632, entropy=9.131408,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920504, edge=0.003018, neigh=2.014280, align=3.554885, entropy=9.128320,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920304, edge=0.003018, neigh=2.016854, align=3.551610, entropy=9.127306,s=1.000000, s_hat=1.000000
Time for optimization: 20.52s
Test results:
Top-1: 0.529
Top-10: 0.826
Top-30: 0.883
Top-50: 0.893
Top-100: 0.914
MRR: 0.633
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.031s
Time for attribute perturbation: 0.026s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:06, 15.31it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:04, 20.01it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:04, 21.07it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:04, 17.88it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:08, 10.64it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:09,  9.12it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:10,  7.91it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:10,  7.91it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:10,  7.48it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.91it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:09,  8.60it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:10,  7.58it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:10,  6.91it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:11,  6.77it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:10,  7.26it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:09,  7.40it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.94it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.01it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.60it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.53it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.37it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  4.93it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.69it/s]
Time for cost matrix: 5.39s
Iter 0: wasserstein=1.389220, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.951311, edge=0.002783, neigh=2.124747, align=2.992294, entropy=10.038489,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923793, edge=0.002997, neigh=2.034327, align=3.409791, entropy=9.374318,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921679, edge=0.003046, neigh=2.035958, align=3.478514, entropy=9.262456,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921443, edge=0.003051, neigh=2.030869, align=3.500314, entropy=9.221581,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921171, edge=0.003040, neigh=2.031800, align=3.511588, entropy=9.196294,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920897, edge=0.003035, neigh=2.037112, align=3.504883, entropy=9.192839,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920668, edge=0.003032, neigh=2.040867, align=3.497880, entropy=9.192422,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920467, edge=0.003030, neigh=2.043458, align=3.492620, entropy=9.192118,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920295, edge=0.003029, neigh=2.045415, align=3.488735, entropy=9.191716,s=1.000000, s_hat=1.000000
Time for optimization: 19.59s
Test results:
Top-1: 0.470
Top-10: 0.806
Top-30: 0.876
Top-50: 0.886
Top-100: 0.905
MRR: 0.583
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.079s
Time for attribute perturbation: 0.062s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.33it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.20it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.12it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.23it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.22it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.10it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.18it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:22,  4.16it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.17it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.21it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.17it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.24it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.35it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.69it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:17,  4.89it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:17,  4.79it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:16,  4.97it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:15,  5.25it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:15,  5.08it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:16,  4.75it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:16,  4.70it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:16,  4.67it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:16,  4.58it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.40it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.30it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.23it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.13it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.18it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.17it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.26it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:24,  2.04it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:21,  2.23it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.47it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:26,  1.76it/s]
Time for cost matrix: 10.64s
Iter 0: wasserstein=1.391213, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950236, edge=0.002764, neigh=2.115038, align=3.009322, entropy=10.017915,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.922619, edge=0.002978, neigh=2.022140, align=3.445035, entropy=9.339246,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920475, edge=0.003037, neigh=2.029606, align=3.519669, entropy=9.222436,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920197, edge=0.003043, neigh=2.027304, align=3.542968, entropy=9.180029,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919918, edge=0.003034, neigh=2.029995, align=3.554581, entropy=9.153956,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919658, edge=0.003027, neigh=2.031965, align=3.561426, entropy=9.136230,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.919392, edge=0.003021, neigh=2.034575, align=3.567736, entropy=9.121825,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.919153, edge=0.003022, neigh=2.038444, align=3.564572, entropy=9.119312,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918971, edge=0.003022, neigh=2.041384, align=3.560930, entropy=9.118785,s=1.000000, s_hat=1.000000
Time for optimization: 32.67s
Test results:
Top-1: 0.521
Top-10: 0.818
Top-30: 0.881
Top-50: 0.892
Top-100: 0.914
MRR: 0.622
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.097s
Time for attribute perturbation: 0.062s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.11it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.31it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.45it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.55it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.56it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.39it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.25it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.47it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.28it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.22it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.56it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.53it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.40it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.25it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.25it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:21,  4.00it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:20,  4.13it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.12it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.12it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.11it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:19,  4.13it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.19it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.17it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.00it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:18,  4.10it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.23it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.25it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.33it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.53it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.13it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:22,  2.17it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.82it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:15,  3.00it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.11it/s]
Time for cost matrix: 10.51s
Iter 0: wasserstein=1.391795, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950761, edge=0.002753, neigh=2.112105, align=3.030412, entropy=9.994843,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923240, edge=0.002972, neigh=2.015667, align=3.463953, entropy=9.316726,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921094, edge=0.003025, neigh=2.017410, align=3.544494, entropy=9.193497,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920726, edge=0.003023, neigh=2.011105, align=3.575091, entropy=9.143585,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.920455, edge=0.003014, neigh=2.011956, align=3.591875, entropy=9.113477,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920274, edge=0.003009, neigh=2.012489, align=3.601686, entropy=9.093931,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920122, edge=0.003007, neigh=2.014366, align=3.609109, entropy=9.079187,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.919923, edge=0.003007, neigh=2.017901, align=3.606814, entropy=9.076214,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.919757, edge=0.003007, neigh=2.020532, align=3.603628, entropy=9.075451,s=1.000000, s_hat=1.000000
Time for optimization: 51.89s
Test results:
Top-1: 0.579
Top-10: 0.843
Top-30: 0.896
Top-50: 0.904
Top-100: 0.926
MRR: 0.671
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.094s
Time for attribute perturbation: 0.087s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:29,  3.39it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.52it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.36it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.59it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:26,  3.53it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:31,  3.00it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:29,  3.13it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:28,  3.21it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:33,  2.69it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:35,  2.56it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:30,  2.90it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:30,  2.86it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:35,  2.46it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:34,  2.47it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:31,  2.72it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:29,  2.81it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:32,  2.56it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:33,  2.43it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:28,  2.86it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:26,  3.00it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:26,  3.02it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:25,  3.00it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:22,  3.50it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:20,  3.66it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:20,  3.65it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:16,  4.38it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:16,  4.34it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:16,  4.34it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:17,  4.17it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:22,  3.11it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:48,  1.01it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:02<00:52,  1.09s/it]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:47,  1.02s/it]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:54,  1.16s/it]
Time for cost matrix: 15.34s
Iter 0: wasserstein=1.387745, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.951181, edge=0.002802, neigh=2.122516, align=2.958145, entropy=10.075752,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923867, edge=0.003027, neigh=2.035502, align=3.369836, entropy=9.418364,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921684, edge=0.003074, neigh=2.040051, align=3.436298, entropy=9.306942,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921264, edge=0.003064, neigh=2.037560, align=3.459877, entropy=9.263225,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.920918, edge=0.003050, neigh=2.039916, align=3.471540, entropy=9.237152,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920630, edge=0.003046, neigh=2.046913, align=3.464587, entropy=9.233804,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920406, edge=0.003044, neigh=2.052006, align=3.457197, entropy=9.233677,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920204, edge=0.003042, neigh=2.055427, align=3.451702, entropy=9.233518,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920029, edge=0.003041, neigh=2.057926, align=3.447675, entropy=9.233174,s=1.000000, s_hat=1.000000
Time for optimization: 57.18s
Test results:
Top-1: 0.436
Top-10: 0.793
Top-30: 0.868
Top-50: 0.878
Top-100: 0.895
MRR: 0.551
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.078s
Time for attribute perturbation: 0.073s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:25,  3.90it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:26,  3.65it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:25,  3.74it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.40it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.19it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:24,  3.80it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:26,  3.53it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.40it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.40it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:25,  3.54it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:30,  2.97it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:31,  2.82it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:33,  2.63it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:35,  2.43it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:32,  2.64it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:30,  2.74it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:31,  2.61it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:33,  2.44it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:30,  2.66it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:26,  2.99it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:27,  2.90it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:29,  2.66it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:29,  2.63it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:08<00:28,  2.69it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:23,  3.14it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:21,  3.51it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:20,  3.52it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:20,  3.49it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:19,  3.64it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:23,  3.05it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:19,  2.50it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:21,  2.21it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:40,  1.15it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:54,  1.17s/it]
Time for cost matrix: 15.56s
Iter 0: wasserstein=1.389490, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950672, edge=0.002766, neigh=2.107239, align=3.001712, entropy=10.027334,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923257, edge=0.002992, neigh=2.018637, align=3.427785, entropy=9.355445,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921116, edge=0.003031, neigh=2.026194, align=3.504826, entropy=9.236065,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920906, edge=0.003036, neigh=2.024706, align=3.529012, entropy=9.192823,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.920663, edge=0.003028, neigh=2.027354, align=3.541785, entropy=9.166222,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920361, edge=0.003028, neigh=2.032706, align=3.535169, entropy=9.162534,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920118, edge=0.003028, neigh=2.036715, align=3.528055, entropy=9.162251,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.919928, edge=0.003027, neigh=2.039789, align=3.522664, entropy=9.162172,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.919769, edge=0.003026, neigh=2.042168, align=3.518622, entropy=9.162006,s=1.000000, s_hat=1.000000
Time for optimization: 36.44s
Test results:
Top-1: 0.510
Top-10: 0.810
Top-30: 0.883
Top-50: 0.891
Top-100: 0.907
MRR: 0.613
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.078s
Time for attribute perturbation: 0.065s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.65it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.45it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.34it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.32it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.39it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.20it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.22it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:22,  4.15it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.30it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.19it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.16it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.16it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.16it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.53it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.50it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.61it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.75it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:17,  4.69it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:17,  4.59it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.60it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.41it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.31it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:15,  5.06it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:15,  5.01it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:13,  5.52it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:13,  5.37it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:13,  5.32it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:13,  5.17it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.64it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.40it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:21,  2.24it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:20,  2.32it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.41it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:26,  1.76it/s]
Time for cost matrix: 10.18s
Iter 0: wasserstein=1.390381, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953020, edge=0.002780, neigh=2.130905, align=2.999763, entropy=10.037272,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925474, edge=0.003010, neigh=2.029950, align=3.419897, entropy=9.370489,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923266, edge=0.003059, neigh=2.036688, align=3.486566, entropy=9.258268,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922759, edge=0.003051, neigh=2.034489, align=3.510695, entropy=9.212092,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922283, edge=0.003035, neigh=2.036220, align=3.525094, entropy=9.182227,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921962, edge=0.003027, neigh=2.037032, align=3.534035, entropy=9.162256,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921712, edge=0.003022, neigh=2.038761, align=3.540787, entropy=9.147503,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921475, edge=0.003022, neigh=2.042042, align=3.538293, entropy=9.144467,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921295, edge=0.003022, neigh=2.044604, align=3.535252, entropy=9.143493,s=1.000000, s_hat=1.000000
Time for optimization: 31.64s
Test results:
Top-1: 0.516
Top-10: 0.816
Top-30: 0.876
Top-50: 0.889
Top-100: 0.910
MRR: 0.618
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.072s
Time for attribute perturbation: 0.066s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.36it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  4.01it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.16it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.06it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  4.00it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  4.04it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:23,  3.91it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:23,  3.88it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  3.97it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  4.05it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.10it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.17it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.19it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.33it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.31it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.26it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.26it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.27it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:17,  4.57it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.63it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.36it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.16it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.07it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.10it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:06<00:18,  4.01it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:18,  4.10it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:18,  4.00it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.01it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.13it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.00it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:19,  2.50it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.38it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.74it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.49it/s]
Time for cost matrix: 10.60s
Iter 0: wasserstein=1.388931, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950158, edge=0.002752, neigh=2.132952, align=2.991166, entropy=10.042161,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.922839, edge=0.002979, neigh=2.027191, align=3.395430, entropy=9.390377,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920798, edge=0.003042, neigh=2.029400, align=3.460255, entropy=9.281499,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920618, edge=0.003054, neigh=2.026144, align=3.478540, entropy=9.243458,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.920378, edge=0.003044, neigh=2.027116, align=3.488203, entropy=9.219817,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920099, edge=0.003038, neigh=2.032581, align=3.481253, entropy=9.216740,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.919884, edge=0.003036, neigh=2.037118, align=3.473621, entropy=9.217028,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.919711, edge=0.003034, neigh=2.040329, align=3.467813, entropy=9.217356,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.919558, edge=0.003032, neigh=2.042631, align=3.463606, entropy=9.217340,s=1.000000, s_hat=1.000000
Time for optimization: 31.47s
Test results:
Top-1: 0.468
Top-10: 0.793
Top-30: 0.864
Top-50: 0.877
Top-100: 0.893
MRR: 0.578
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.077s
Time for attribute perturbation: 0.071s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.41it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.66it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.61it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.68it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:19,  4.79it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.38it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.65it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.62it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.67it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.56it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.66it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:15,  5.52it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.42it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  5.02it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:16,  5.01it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:14,  5.78it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:15,  5.41it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  4.97it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:17,  4.74it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:15,  5.16it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:16,  4.92it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:15,  4.92it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:15,  5.01it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:16,  4.58it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.26it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.26it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:16,  4.39it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.73it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.57it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:14,  4.74it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.87it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:22,  2.13it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.53it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.92it/s]
Time for cost matrix: 9.64s
Iter 0: wasserstein=1.391552, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.951837, edge=0.002761, neigh=2.113836, align=3.011410, entropy=10.015234,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.924485, edge=0.002994, neigh=2.021749, align=3.445538, entropy=9.339209,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922225, edge=0.003038, neigh=2.026583, align=3.524411, entropy=9.217128,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921894, edge=0.003036, neigh=2.021764, align=3.551331, entropy=9.170247,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921548, edge=0.003022, neigh=2.022686, align=3.566372, entropy=9.140755,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921244, edge=0.003013, neigh=2.022926, align=3.575505, entropy=9.121214,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921029, edge=0.003013, neigh=2.026798, align=3.570434, entropy=9.119018,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920861, edge=0.003013, neigh=2.029979, align=3.564746, entropy=9.119294,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920712, edge=0.003013, neigh=2.032500, align=3.560243, entropy=9.119640,s=1.000000, s_hat=1.000000
Time for optimization: 31.99s
Test results:
Top-1: 0.544
Top-10: 0.826
Top-30: 0.883
Top-50: 0.896
Top-100: 0.915
MRR: 0.639
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.072s
Time for attribute perturbation: 0.055s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.21it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.29it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.20it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.18it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.16it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.20it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.22it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.59it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.53it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.40it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.11it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.14it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:22,  3.89it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:21,  4.03it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.18it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.16it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.17it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.20it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.25it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.26it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:19,  4.08it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:19,  4.07it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.08it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.03it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:18,  4.12it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:18,  4.09it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.13it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.09it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.21it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.03it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.12it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.66it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.16it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.78it/s]
Time for cost matrix: 10.30s
Iter 0: wasserstein=1.390576, edge=0.003241, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.948927, edge=0.002749, neigh=2.119538, align=3.029200, entropy=9.994637,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.921301, edge=0.002971, neigh=2.019837, align=3.459970, entropy=9.319481,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.919418, edge=0.003028, neigh=2.022219, align=3.532894, entropy=9.205180,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919307, edge=0.003038, neigh=2.018521, align=3.558030, entropy=9.161079,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919017, edge=0.003025, neigh=2.020292, align=3.574535, entropy=9.131255,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.918765, edge=0.003017, neigh=2.021109, align=3.585393, entropy=9.110598,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918563, edge=0.003013, neigh=2.022876, align=3.593670, entropy=9.094954,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918387, edge=0.003012, neigh=2.024549, align=3.599884, entropy=9.083211,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918187, edge=0.003012, neigh=2.027338, align=3.598116, entropy=9.080838,s=1.000000, s_hat=1.000000
Time for optimization: 31.31s
Test results:
Top-1: 0.540
Top-10: 0.842
Top-30: 0.898
Top-50: 0.910
Top-100: 0.925
MRR: 0.645
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.020s
Time for attribute perturbation: 0.034s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:13,  7.22it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:11,  8.35it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:10,  8.76it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.60it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  8.42it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:12,  7.38it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.56it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:10,  8.40it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.01it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  8.77it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:10,  7.88it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:11,  7.41it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:10,  8.11it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:10,  7.52it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:09,  8.52it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:10,  7.37it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:10,  7.71it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:10,  7.26it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.37it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  7.13it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:07,  9.02it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  7.93it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.57it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  4.93it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.07it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.12it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.13it/s]
Time for cost matrix: 7.06s
Iter 0: wasserstein=1.386643, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953415, edge=0.002769, neigh=2.143995, align=2.946388, entropy=10.101349,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925926, edge=0.002994, neigh=2.044806, align=3.330574, entropy=9.463154,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923566, edge=0.003048, neigh=2.050277, align=3.390013, entropy=9.355832,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923058, edge=0.003054, neigh=2.046975, align=3.409329, entropy=9.314488,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922653, edge=0.003045, neigh=2.049024, align=3.421112, entropy=9.287607,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922333, edge=0.003042, neigh=2.054678, align=3.414851, entropy=9.283651,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922104, edge=0.003040, neigh=2.059055, align=3.407559, entropy=9.283560,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921911, edge=0.003038, neigh=2.062173, align=3.401949, entropy=9.283612,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921749, edge=0.003037, neigh=2.064520, align=3.397679, entropy=9.283585,s=1.000000, s_hat=1.000000
Time for optimization: 31.02s
Test results:
Top-1: 0.347
Top-10: 0.744
Top-30: 0.838
Top-50: 0.852
Top-100: 0.864
MRR: 0.472
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.059s
Time for attribute perturbation: 0.074s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 17.64it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:05, 17.64it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:05, 18.44it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:05, 17.84it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:04, 19.52it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:00<00:04, 20.97it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:00<00:04, 16.97it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:06, 12.46it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:06, 12.42it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:05, 14.86it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:04, 15.48it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:06, 11.59it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:05, 12.86it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:07,  6.59it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:07,  6.71it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:06,  6.92it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  4.79it/s]
Time for cost matrix: 4.10s
Iter 0: wasserstein=1.386280, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953967, edge=0.002758, neigh=2.163912, align=2.940891, entropy=10.106724,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926928, edge=0.003004, neigh=2.056285, align=3.312115, entropy=9.482502,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924780, edge=0.003076, neigh=2.058844, align=3.365329, entropy=9.381748,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.924262, edge=0.003072, neigh=2.057197, align=3.385363, entropy=9.339686,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923808, edge=0.003059, neigh=2.059119, align=3.395686, entropy=9.313743,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923422, edge=0.003051, neigh=2.060296, align=3.402469, entropy=9.295599,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.923133, edge=0.003049, neigh=2.064668, align=3.397686, entropy=9.292660,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922925, edge=0.003048, neigh=2.067911, align=3.392486, entropy=9.292312,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922760, edge=0.003047, neigh=2.070158, align=3.388314, entropy=9.292281,s=1.000000, s_hat=1.000000
Time for optimization: 16.31s
Test results:
Top-1: 0.310
Top-10: 0.731
Top-30: 0.835
Top-50: 0.846
Top-100: 0.862
MRR: 0.440
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.022s
Time for attribute perturbation: 0.012s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:12,  8.01it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:12,  7.96it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:06, 15.59it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:05, 18.20it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:04, 18.09it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:04, 19.30it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:05, 15.79it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:04, 17.79it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:04, 18.95it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:04, 19.17it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:03, 19.53it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:03, 20.57it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:04, 17.60it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.82it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  8.41it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:07,  6.26it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  5.02it/s]
Time for cost matrix: 3.13s
Iter 0: wasserstein=1.384879, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.954956, edge=0.002769, neigh=2.178054, align=2.924958, entropy=10.126587,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.927813, edge=0.003007, neigh=2.073995, align=3.293278, entropy=9.504674,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.925459, edge=0.003082, neigh=2.078077, align=3.342231, entropy=9.406526,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.924954, edge=0.003081, neigh=2.075514, align=3.358495, entropy=9.367891,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.924515, edge=0.003068, neigh=2.077128, align=3.368009, entropy=9.343004,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.924162, edge=0.003064, neigh=2.082698, align=3.360979, entropy=9.339281,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.923901, edge=0.003061, neigh=2.086859, align=3.353684, entropy=9.338799,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.923677, edge=0.003058, neigh=2.089762, align=3.348266, entropy=9.338361,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.923482, edge=0.003056, neigh=2.091895, align=3.344243, entropy=9.337848,s=1.000000, s_hat=1.000000
Time for optimization: 20.32s
Test results:
Top-1: 0.290
Top-10: 0.715
Top-30: 0.823
Top-50: 0.839
Top-100: 0.853
MRR: 0.423
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.081s
Time for attribute perturbation: 0.064s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  3.99it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.14it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.41it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.27it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  4.11it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.22it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.20it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  5.82it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.95it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.78it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:08,  9.98it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:08,  9.69it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.91it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:13,  6.15it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.62it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:15,  5.21it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:15,  5.00it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:16,  4.87it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:16,  4.65it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:16,  4.50it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:16,  4.52it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:16,  4.56it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:16,  4.46it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:16,  4.32it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:16,  4.26it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  5.02it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  2.94it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:18,  2.66it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.77it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  2.03it/s]
Time for cost matrix: 9.27s
Iter 0: wasserstein=1.382143, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953489, edge=0.002805, neigh=2.209222, align=2.915073, entropy=10.136790,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926661, edge=0.003044, neigh=2.111561, align=3.277670, entropy=9.522741,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923945, edge=0.003092, neigh=2.120752, align=3.327653, entropy=9.421225,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923266, edge=0.003087, neigh=2.120036, align=3.344713, entropy=9.381156,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922781, edge=0.003073, neigh=2.122172, align=3.353218, entropy=9.356973,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922442, edge=0.003070, neigh=2.127197, align=3.345218, entropy=9.354253,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922210, edge=0.003068, neigh=2.131491, align=3.336925, entropy=9.354824,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922022, edge=0.003067, neigh=2.135085, align=3.330763, entropy=9.355166,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921845, edge=0.003065, neigh=2.137866, align=3.326422, entropy=9.355004,s=1.000000, s_hat=1.000000
Time for optimization: 32.37s
Test results:
Top-1: 0.242
Top-10: 0.687
Top-30: 0.809
Top-50: 0.824
Top-100: 0.841
MRR: 0.375
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.045s
Time for attribute perturbation: 0.065s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.50it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.58it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.57it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.49it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.26it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:18,  5.05it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:16,  5.70it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  6.01it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.67it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:18,  4.97it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.87it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.74it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.69it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:18,  4.75it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:17,  4.82it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:16,  5.13it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:14,  5.70it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:13,  5.96it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.40it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:16,  4.86it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.46it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:16,  4.65it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:15,  4.96it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:13,  5.56it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:13,  5.76it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:13,  5.68it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:12,  5.76it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:12,  5.88it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.63it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  5.00it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.39it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.51it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.09it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.08it/s]
Time for cost matrix: 9.32s
Iter 0: wasserstein=1.382028, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952945, edge=0.002783, neigh=2.190903, align=2.919565, entropy=10.130647,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925856, edge=0.003023, neigh=2.096213, align=3.291409, entropy=9.505292,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923485, edge=0.003080, neigh=2.106699, align=3.343065, entropy=9.404458,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922874, edge=0.003075, neigh=2.108806, align=3.360016, entropy=9.364532,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922461, edge=0.003072, neigh=2.117979, align=3.349351, entropy=9.360211,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922115, edge=0.003067, neigh=2.124256, align=3.339147, entropy=9.359905,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921844, edge=0.003063, neigh=2.128206, align=3.331389, entropy=9.360026,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921648, edge=0.003061, neigh=2.131191, align=3.325486, entropy=9.360187,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921476, edge=0.003059, neigh=2.133417, align=3.321299, entropy=9.359930,s=1.000000, s_hat=1.000000
Time for optimization: 31.14s
Test results:
Top-1: 0.255
Top-10: 0.688
Top-30: 0.812
Top-50: 0.827
Top-100: 0.843
MRR: 0.386
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.074s
Time for attribute perturbation: 0.078s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:12,  7.66it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.74it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.90it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.81it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:18,  5.08it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.36it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.21it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.19it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.61it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:18,  4.93it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:17,  5.03it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:15,  5.76it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  5.99it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  5.89it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.32it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:14,  5.62it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:14,  5.73it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:13,  6.08it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:11,  7.17it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:10,  7.24it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:11,  6.84it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.90it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:12,  5.88it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:12,  5.92it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:13,  5.56it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:14,  5.18it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:12,  5.75it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.71it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.47it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.59it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.22it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.56it/s]
Time for cost matrix: 7.83s
Iter 0: wasserstein=1.386520, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953141, edge=0.002767, neigh=2.135334, align=2.947714, entropy=10.099644,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925835, edge=0.002988, neigh=2.042482, align=3.331074, entropy=9.464051,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923442, edge=0.003050, neigh=2.047229, align=3.388297, entropy=9.358225,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922936, edge=0.003053, neigh=2.047828, align=3.406658, entropy=9.317644,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922568, edge=0.003046, neigh=2.053141, align=3.416793, entropy=9.292535,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922224, edge=0.003043, neigh=2.060063, align=3.410230, entropy=9.288751,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921972, edge=0.003041, neigh=2.064789, align=3.402786, entropy=9.288702,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921795, edge=0.003040, neigh=2.068386, align=3.396792, entropy=9.289044,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921637, edge=0.003038, neigh=2.070950, align=3.392475, entropy=9.288963,s=1.000000, s_hat=1.000000
Time for optimization: 29.78s
Test results:
Top-1: 0.349
Top-10: 0.745
Top-30: 0.838
Top-50: 0.856
Top-100: 0.874
MRR: 0.473
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.093s
Time for attribute perturbation: 0.057s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.63it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.99it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:11,  8.09it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  8.30it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:12,  7.39it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  8.15it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.35it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.47it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.53it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  6.86it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:15,  5.52it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.03it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:18,  4.56it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:19,  4.35it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.37it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:16,  4.94it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:14,  5.36it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:14,  5.40it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.92it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.33it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:11,  6.31it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:11,  6.35it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:12,  5.71it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:12,  5.99it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.14it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  5.96it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.81it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.20it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.34it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.57it/s]
Time for cost matrix: 7.90s
Iter 0: wasserstein=1.382748, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.954245, edge=0.002811, neigh=2.181625, align=2.911191, entropy=10.142870,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926775, edge=0.003040, neigh=2.083686, align=3.278656, entropy=9.518242,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924243, edge=0.003094, neigh=2.091917, align=3.330413, entropy=9.416842,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923627, edge=0.003088, neigh=2.092690, align=3.348070, entropy=9.376569,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923107, edge=0.003071, neigh=2.096780, align=3.359242, entropy=9.349995,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922753, edge=0.003068, neigh=2.103266, align=3.352390, entropy=9.346338,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922506, edge=0.003065, neigh=2.107765, align=3.345136, entropy=9.346077,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922297, edge=0.003063, neigh=2.110832, align=3.339827, entropy=9.345791,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922119, edge=0.003061, neigh=2.113056, align=3.335930, entropy=9.345398,s=1.000000, s_hat=1.000000
Time for optimization: 33.37s
Test results:
Top-1: 0.256
Top-10: 0.682
Top-30: 0.808
Top-50: 0.827
Top-100: 0.843
MRR: 0.384
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.074s
Time for attribute perturbation: 0.111s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.95it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.48it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  4.99it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.13it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:26,  3.63it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:27,  3.36it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:29,  3.15it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:29,  3.13it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:28,  3.16it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:28,  3.18it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:27,  3.20it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:27,  3.22it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:23,  3.73it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:24,  3.51it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:29,  2.93it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:30,  2.73it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:29,  2.86it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:31,  2.61it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:27,  2.91it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:28,  2.86it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:28,  2.78it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:27,  2.80it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:30,  2.52it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:31,  2.43it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:32,  2.29it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:28,  2.56it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:09<00:28,  2.59it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:09<00:28,  2.55it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:28,  2.46it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:25,  2.82it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:42,  1.15it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:45,  1.06it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:46,  1.01it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:58,  1.24s/it]
Time for cost matrix: 16.99s
Iter 0: wasserstein=1.385099, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953469, edge=0.002762, neigh=2.155173, align=2.934555, entropy=10.108273,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926636, edge=0.002988, neigh=2.057583, align=3.315015, entropy=9.479025,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924448, edge=0.003066, neigh=2.065469, align=3.366600, entropy=9.380425,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923952, edge=0.003065, neigh=2.066217, align=3.382438, entropy=9.342547,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923502, edge=0.003054, neigh=2.069399, align=3.390199, entropy=9.319131,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923125, edge=0.003051, neigh=2.074643, align=3.382882, entropy=9.315601,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922861, edge=0.003049, neigh=2.078556, align=3.375453, entropy=9.315405,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922660, edge=0.003048, neigh=2.081607, align=3.369894, entropy=9.315346,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922491, edge=0.003046, neigh=2.083920, align=3.365810, entropy=9.315124,s=1.000000, s_hat=1.000000
Time for optimization: 57.23s
Test results:
Top-1: 0.316
Top-10: 0.714
Top-30: 0.832
Top-50: 0.843
Top-100: 0.863
MRR: 0.443
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.063s
Time for attribute perturbation: 0.091s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:46,  2.14it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:38,  2.52it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:30,  3.16it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.58it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.67it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.16it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:22,  4.05it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.03it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  3.99it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:22,  3.93it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:24,  3.63it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:24,  3.62it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:23,  3.61it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:22,  3.77it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:22,  3.80it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:22,  3.67it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:24,  3.41it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:27,  2.96it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:32,  2.47it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:32,  2.43it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:32,  2.36it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:34,  2.26it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:28,  2.63it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:24,  3.11it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:25,  2.87it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:27,  2.68it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:26,  2.67it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:25,  2.82it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:23,  3.02it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:26,  1.88it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:31,  1.53it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:27,  1.73it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:35,  1.34it/s]
Time for cost matrix: 14.99s
Iter 0: wasserstein=1.382725, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953447, edge=0.002771, neigh=2.205249, align=2.924256, entropy=10.128775,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926594, edge=0.003012, neigh=2.103312, align=3.282248, entropy=9.516736,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924298, edge=0.003088, neigh=2.115922, align=3.326754, entropy=9.422161,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923749, edge=0.003085, neigh=2.120440, align=3.341548, entropy=9.384298,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923322, edge=0.003078, neigh=2.129496, align=3.331349, entropy=9.379435,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922958, edge=0.003070, neigh=2.135421, align=3.321301, entropy=9.378821,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922690, edge=0.003066, neigh=2.139919, align=3.313263, entropy=9.379057,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922465, edge=0.003062, neigh=2.143295, align=3.307478, entropy=9.378941,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922275, edge=0.003060, neigh=2.145906, align=3.303187, entropy=9.378666,s=1.000000, s_hat=1.000000
Time for optimization: 50.84s
Test results:
Top-1: 0.249
Top-10: 0.690
Top-30: 0.810
Top-50: 0.827
Top-100: 0.842
MRR: 0.381
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.068s
Time for attribute perturbation: 0.061s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:12,  8.04it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.20it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.21it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.99it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:18,  5.20it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:12,  7.35it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.32it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.16it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:16,  5.55it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.36it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.87it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.79it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:18,  4.68it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:18,  4.68it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.61it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.48it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.38it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:19,  4.13it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.04it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.23it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.38it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:17,  4.33it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:17,  4.35it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.33it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.24it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:16,  4.39it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:16,  4.42it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.57it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.65it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.70it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:23,  2.03it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.33it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.94it/s]
Time for cost matrix: 9.77s
Iter 0: wasserstein=1.382692, edge=0.003219, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953034, edge=0.002744, neigh=2.206037, align=2.935213, entropy=10.110925,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926529, edge=0.002986, neigh=2.102671, align=3.287958, entropy=9.507235,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924450, edge=0.003080, neigh=2.110368, align=3.331454, entropy=9.416126,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.924009, edge=0.003087, neigh=2.109625, align=3.344445, entropy=9.381116,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923579, edge=0.003076, neigh=2.113353, align=3.352660, entropy=9.357771,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923207, edge=0.003070, neigh=2.119264, align=3.345885, entropy=9.354050,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922934, edge=0.003067, neigh=2.123605, align=3.338418, entropy=9.353779,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922715, edge=0.003064, neigh=2.126862, align=3.332686, entropy=9.353646,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922529, edge=0.003062, neigh=2.129285, align=3.328394, entropy=9.353403,s=1.000000, s_hat=1.000000
Time for optimization: 30.40s
Test results:
Top-1: 0.250
Top-10: 0.694
Top-30: 0.819
Top-50: 0.833
Top-100: 0.850
MRR: 0.386
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.037s
Time for attribute perturbation: 0.088s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:14,  6.88it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:11,  8.68it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.77it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.10it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  8.54it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  8.41it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:11,  8.19it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  8.17it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:10,  8.42it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.63it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:10,  8.32it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:11,  7.41it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.70it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:10,  7.62it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:10,  7.85it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.75it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:10,  7.38it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:11,  6.72it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:10,  7.06it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:12,  6.17it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:13,  5.73it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:11,  6.51it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  6.94it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:11,  6.00it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:13,  5.21it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.77it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:22,  2.17it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.67it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.77it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.06it/s]
Time for cost matrix: 8.03s
Iter 0: wasserstein=1.381811, edge=0.003203, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.955326, edge=0.002781, neigh=2.220655, align=2.904875, entropy=10.152337,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.928209, edge=0.003020, neigh=2.121755, align=3.268278, entropy=9.533495,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.925675, edge=0.003081, neigh=2.135135, align=3.314998, entropy=9.435178,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.925065, edge=0.003079, neigh=2.138399, align=3.330219, entropy=9.396966,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.924635, edge=0.003073, neigh=2.147021, align=3.319661, entropy=9.392468,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.924252, edge=0.003065, neigh=2.153457, align=3.309483, entropy=9.391704,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.923961, edge=0.003060, neigh=2.158208, align=3.301505, entropy=9.391642,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.923736, edge=0.003057, neigh=2.161705, align=3.295503, entropy=9.391615,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.923550, edge=0.003055, neigh=2.164220, align=3.290993, entropy=9.391498,s=1.000000, s_hat=1.000000
Time for optimization: 33.51s
Test results:
Top-1: 0.190
Top-10: 0.645
Top-30: 0.790
Top-50: 0.807
Top-100: 0.821
MRR: 0.324
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.077s
Time for attribute perturbation: 0.087s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.03it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.26it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.21it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.54it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.50it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.31it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.12it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.32it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.30it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.34it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.43it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.79it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.76it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.58it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.57it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:17,  4.90it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:15,  5.19it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  4.89it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:17,  4.65it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.40it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.37it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:16,  4.63it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:14,  5.16it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:14,  5.09it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:13,  5.57it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:13,  5.43it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:14,  5.00it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:13,  5.30it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:13,  5.42it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.58it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:37,  1.31it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:32,  1.47it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.19it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:27,  1.69it/s]
Time for cost matrix: 10.01s
Iter 0: wasserstein=1.378381, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953555, edge=0.002791, neigh=2.253906, align=2.903358, entropy=10.159703,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926575, edge=0.003035, neigh=2.155047, align=3.254655, entropy=9.550457,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924015, edge=0.003098, neigh=2.167842, align=3.299247, entropy=9.453607,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923425, edge=0.003104, neigh=2.183899, align=3.284843, entropy=9.444980,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922925, edge=0.003093, neigh=2.193711, align=3.270312, entropy=9.443887,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922485, edge=0.003081, neigh=2.200237, align=3.259964, entropy=9.442901,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922165, edge=0.003076, neigh=2.205081, align=3.251745, entropy=9.442757,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921923, edge=0.003072, neigh=2.208854, align=3.245474, entropy=9.442712,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921725, edge=0.003070, neigh=2.211699, align=3.240660, entropy=9.442651,s=1.000000, s_hat=1.000000
Time for optimization: 30.74s
Test results:
Top-1: 0.138
Top-10: 0.590
Top-30: 0.762
Top-50: 0.779
Top-100: 0.791
MRR: 0.267
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.065s
Time for attribute perturbation: 0.091s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:25,  3.95it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  4.01it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.21it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.35it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.55it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.67it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.31it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:22,  4.17it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.10it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  4.07it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.20it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.14it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.27it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.14it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:21,  4.02it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.00it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:20,  4.04it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:20,  4.05it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.18it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.34it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:18,  4.17it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:19,  4.06it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.13it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.34it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.34it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.33it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.27it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.41it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.32it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.08it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:18,  2.66it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.74it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.92it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.09it/s]
Time for cost matrix: 10.43s
Iter 0: wasserstein=1.377295, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953834, edge=0.002798, neigh=2.261058, align=2.910236, entropy=10.159491,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926297, edge=0.003029, neigh=2.166578, align=3.265318, entropy=9.541104,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923543, edge=0.003091, neigh=2.185425, align=3.310754, entropy=9.441922,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922951, edge=0.003102, neigh=2.204967, align=3.295883, entropy=9.433861,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922501, edge=0.003092, neigh=2.215734, align=3.280823, entropy=9.433717,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922121, edge=0.003082, neigh=2.222694, align=3.269651, entropy=9.433760,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921830, edge=0.003076, neigh=2.227756, align=3.261218, entropy=9.433936,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921597, edge=0.003072, neigh=2.231610, align=3.255035, entropy=9.433841,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921395, edge=0.003069, neigh=2.234496, align=3.250534, entropy=9.433459,s=1.000000, s_hat=1.000000
Time for optimization: 28.95s
Test results:
Top-1: 0.139
Top-10: 0.583
Top-30: 0.756
Top-50: 0.778
Top-100: 0.796
MRR: 0.265
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.019s
Time for attribute perturbation: 0.010s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:06, 14.06it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:06, 14.85it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:05, 16.58it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:05, 17.90it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:04, 17.97it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:00<00:04, 19.03it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:04, 18.87it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:04, 17.21it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:04, 16.90it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:04, 17.61it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:04, 17.08it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:04, 16.00it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:04, 16.99it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:04, 15.72it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.42it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.69it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  5.09it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.74it/s]
Time for cost matrix: 3.87s
Iter 0: wasserstein=1.380066, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953365, edge=0.002776, neigh=2.248144, align=2.912648, entropy=10.148443,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926360, edge=0.003023, neigh=2.151189, align=3.263681, entropy=9.539408,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923864, edge=0.003091, neigh=2.167943, align=3.310442, entropy=9.441694,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923272, edge=0.003097, neigh=2.185474, align=3.296516, entropy=9.432941,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922807, edge=0.003087, neigh=2.195302, align=3.281185, entropy=9.432814,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922388, edge=0.003076, neigh=2.201574, align=3.270287, entropy=9.432427,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922071, edge=0.003071, neigh=2.206101, align=3.261854, entropy=9.432511,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921838, edge=0.003068, neigh=2.209795, align=3.255370, entropy=9.432686,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921634, edge=0.003065, neigh=2.212568, align=3.250709, entropy=9.432480,s=1.000000, s_hat=1.000000
Time for optimization: 15.09s
Test results:
Top-1: 0.163
Top-10: 0.618
Top-30: 0.774
Top-50: 0.790
Top-100: 0.804
MRR: 0.295
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.013s
Time for attribute perturbation: 0.028s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:06, 15.91it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:04, 19.23it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:06, 14.92it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:10,  9.02it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.28it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  6.77it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  7.00it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:09,  8.93it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:06, 12.62it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:05, 13.94it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:05, 14.65it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:07, 10.82it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:09,  8.18it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:09,  7.98it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.36it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:07,  9.06it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.29it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:06,  7.40it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  5.11it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.25it/s]
Time for cost matrix: 5.15s
Iter 0: wasserstein=1.378186, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952563, edge=0.002782, neigh=2.252923, align=2.906992, entropy=10.150725,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925885, edge=0.003026, neigh=2.167512, align=3.262042, entropy=9.541884,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923327, edge=0.003092, neigh=2.188385, align=3.309798, entropy=9.442545,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922727, edge=0.003100, neigh=2.208266, align=3.295410, entropy=9.433804,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.922236, edge=0.003091, neigh=2.219053, align=3.280360, entropy=9.433154,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921798, edge=0.003080, neigh=2.225806, align=3.269809, entropy=9.432328,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921484, edge=0.003074, neigh=2.230826, align=3.261590, entropy=9.432271,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.921252, edge=0.003071, neigh=2.234797, align=3.255305, entropy=9.432359,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921056, edge=0.003069, neigh=2.237750, align=3.250638, entropy=9.432258,s=1.000000, s_hat=1.000000
Time for optimization: 22.89s
Test results:
Top-1: 0.148
Top-10: 0.594
Top-30: 0.768
Top-50: 0.785
Top-100: 0.800
MRR: 0.274
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.063s
Time for attribute perturbation: 0.058s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  5.20it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.38it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.12it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.93it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:19,  4.95it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.51it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.45it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.23it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  4.11it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  4.08it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.16it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.29it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:20,  4.31it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.34it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.16it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.28it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.79it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  4.99it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:16,  4.82it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.61it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.52it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.44it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.50it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:15,  4.91it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:14,  5.05it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:14,  5.10it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:14,  4.95it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.78it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.48it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.40it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:21,  2.31it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:27,  1.78it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.18it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:27,  1.73it/s]
Time for cost matrix: 10.16s
Iter 0: wasserstein=1.380246, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953968, edge=0.002805, neigh=2.238061, align=2.898007, entropy=10.159664,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926789, edge=0.003047, neigh=2.147704, align=3.262726, entropy=9.539039,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924059, edge=0.003094, neigh=2.168272, align=3.314836, entropy=9.435638,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923491, edge=0.003100, neigh=2.186401, align=3.301852, entropy=9.426633,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923052, edge=0.003092, neigh=2.196828, align=3.287098, entropy=9.426568,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922673, edge=0.003082, neigh=2.203562, align=3.276006, entropy=9.426703,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922381, edge=0.003075, neigh=2.208572, align=3.267510, entropy=9.426966,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922137, edge=0.003071, neigh=2.212355, align=3.261339, entropy=9.426850,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921931, edge=0.003068, neigh=2.215256, align=3.256696, entropy=9.426614,s=1.000000, s_hat=1.000000
Time for optimization: 31.67s
Test results:
Top-1: 0.160
Top-10: 0.611
Top-30: 0.769
Top-50: 0.785
Top-100: 0.799
MRR: 0.289
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.065s
Time for attribute perturbation: 0.069s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.61it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.21it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.40it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.25it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.38it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.36it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.38it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.29it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.22it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.14it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:22,  3.97it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.07it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.29it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.25it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.20it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.16it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.23it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.21it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.14it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.32it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.35it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.24it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.23it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.28it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.20it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.24it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.08it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.11it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.16it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.12it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:31,  1.56it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:21,  2.24it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.46it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.91it/s]
Time for cost matrix: 10.40s
Iter 0: wasserstein=1.379959, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953900, edge=0.002772, neigh=2.237713, align=2.918247, entropy=10.142104,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.927056, edge=0.002999, neigh=2.135186, align=3.266822, entropy=9.536436,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924583, edge=0.003080, neigh=2.145895, align=3.308620, entropy=9.442472,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923950, edge=0.003083, neigh=2.148549, align=3.322684, entropy=9.404739,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923545, edge=0.003080, neigh=2.156435, align=3.310975, entropy=9.401363,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.923162, edge=0.003072, neigh=2.162003, align=3.300181, entropy=9.401089,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922859, edge=0.003067, neigh=2.166118, align=3.291853, entropy=9.401194,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922635, edge=0.003064, neigh=2.169576, align=3.285581, entropy=9.401275,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922442, edge=0.003062, neigh=2.172204, align=3.281138, entropy=9.400965,s=1.000000, s_hat=1.000000
Time for optimization: 32.70s
Test results:
Top-1: 0.166
Top-10: 0.611
Top-30: 0.778
Top-50: 0.794
Top-100: 0.813
MRR: 0.296
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.072s
Time for attribute perturbation: 0.071s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:25,  3.92it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.50it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.28it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.95it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.63it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.57it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.41it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.41it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:18,  4.89it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:18,  4.81it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.51it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.55it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.49it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.48it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.23it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.31it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.60it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:17,  4.78it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:15,  5.25it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:14,  5.49it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:14,  5.39it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:14,  5.48it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:14,  5.47it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:14,  5.35it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:14,  5.15it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:15,  4.80it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.57it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:16,  4.34it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.36it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.56it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.37it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:19,  2.44it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.74it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:25,  1.87it/s]
Time for cost matrix: 10.08s
Iter 0: wasserstein=1.379226, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953506, edge=0.002779, neigh=2.243289, align=2.908819, entropy=10.151981,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926597, edge=0.003018, neigh=2.148345, align=3.261682, entropy=9.542903,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924147, edge=0.003092, neigh=2.162736, align=3.304229, entropy=9.448736,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923536, edge=0.003099, neigh=2.181286, align=3.289464, entropy=9.440330,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923055, edge=0.003091, neigh=2.192122, align=3.273718, entropy=9.440341,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922631, edge=0.003081, neigh=2.198969, align=3.262382, entropy=9.440123,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922318, edge=0.003076, neigh=2.203943, align=3.253733, entropy=9.440318,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922071, edge=0.003072, neigh=2.207733, align=3.247455, entropy=9.440261,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921860, edge=0.003070, neigh=2.210568, align=3.242916, entropy=9.439930,s=1.000000, s_hat=1.000000
Time for optimization: 32.46s
Test results:
Top-1: 0.150
Top-10: 0.604
Top-30: 0.768
Top-50: 0.787
Top-100: 0.803
MRR: 0.284
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.070s
Time for attribute perturbation: 0.075s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:27,  3.56it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:28,  3.41it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:25,  3.77it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:24,  3.94it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.15it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.17it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.20it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:18,  4.91it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:17,  5.09it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.53it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.45it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.47it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:19,  4.50it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.36it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.26it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.19it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.21it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.13it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.10it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.47it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:16,  4.90it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:15,  4.95it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:16,  4.70it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.62it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.53it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.37it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.52it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.51it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.31it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.22it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:29,  1.69it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:21,  2.18it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.71it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.89it/s]
Time for cost matrix: 10.66s
Iter 0: wasserstein=1.380580, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.953596, edge=0.002756, neigh=2.219575, align=2.919446, entropy=10.140884,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.926534, edge=0.002999, neigh=2.127206, align=3.275397, entropy=9.528342,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924131, edge=0.003083, neigh=2.140137, align=3.319630, entropy=9.432803,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923477, edge=0.003081, neigh=2.145380, align=3.335609, entropy=9.392948,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923055, edge=0.003077, neigh=2.155363, align=3.324419, entropy=9.388775,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922682, edge=0.003069, neigh=2.161787, align=3.313553, entropy=9.388469,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922393, edge=0.003064, neigh=2.166096, align=3.305055, entropy=9.388728,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922167, edge=0.003061, neigh=2.169446, align=3.298657, entropy=9.388881,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.921973, edge=0.003059, neigh=2.171832, align=3.293978, entropy=9.388761,s=1.000000, s_hat=1.000000
Time for optimization: 31.48s
Test results:
Top-1: 0.164
Top-10: 0.630
Top-30: 0.781
Top-50: 0.799
Top-100: 0.810
MRR: 0.303
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.065s
Time for attribute perturbation: 0.072s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.58it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.72it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.58it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.62it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.55it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:18,  4.97it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:18,  5.14it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:18,  4.89it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.61it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.45it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.43it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.38it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:20,  4.32it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.25it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.07it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:21,  3.94it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:20,  4.03it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:20,  4.03it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:20,  4.01it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:20,  3.97it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.22it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.22it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:19,  3.96it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.04it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:18,  4.01it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.14it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.26it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.31it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.41it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.16it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.09it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.01it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.03it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.16it/s]
Time for cost matrix: 10.45s
Iter 0: wasserstein=1.379441, edge=0.003204, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.954089, edge=0.002798, neigh=2.244846, align=2.897985, entropy=10.161480,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.927264, edge=0.003037, neigh=2.147000, align=3.255945, entropy=9.548661,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.924558, edge=0.003091, neigh=2.164408, align=3.304870, entropy=9.447669,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.923886, edge=0.003096, neigh=2.182418, align=3.291892, entropy=9.437504,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.923391, edge=0.003087, neigh=2.192304, align=3.277057, entropy=9.436880,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.922993, edge=0.003079, neigh=2.198950, align=3.265749, entropy=9.436948,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.922694, edge=0.003074, neigh=2.204038, align=3.257130, entropy=9.437277,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.922462, edge=0.003071, neigh=2.208111, align=3.250728, entropy=9.437412,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.922259, edge=0.003069, neigh=2.211188, align=3.246097, entropy=9.437190,s=1.000000, s_hat=1.000000
Time for optimization: 30.84s
Test results:
Top-1: 0.151
Top-10: 0.610
Top-30: 0.772
Top-50: 0.788
Top-100: 0.804
MRR: 0.282
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.061s
Time for attribute perturbation: 0.031s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:12,  8.01it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.81it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.86it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.51it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  7.13it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:12,  7.56it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:11,  7.98it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:10,  8.35it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.98it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.09it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:14,  6.00it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:14,  5.99it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:15,  5.57it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.59it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.86it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  7.24it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:09,  8.29it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:09,  8.41it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:09,  7.91it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:10,  7.19it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:12,  6.19it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:13,  5.75it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:12,  6.10it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:11,  6.58it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:08,  8.13it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.95it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:36,  1.34it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:30,  1.57it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:25,  1.85it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:32,  1.43it/s]
Time for cost matrix: 7.87s
Iter 0: wasserstein=1.376236, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952335, edge=0.002777, neigh=2.283117, align=2.909656, entropy=10.155716,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925309, edge=0.003021, neigh=2.190245, align=3.255068, entropy=9.549864,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922739, edge=0.003087, neigh=2.209132, align=3.300485, entropy=9.452217,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922132, edge=0.003097, neigh=2.228524, align=3.286564, entropy=9.443247,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921649, edge=0.003086, neigh=2.239796, align=3.272280, entropy=9.442295,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921231, edge=0.003075, neigh=2.246859, align=3.261429, entropy=9.441842,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920918, edge=0.003069, neigh=2.251929, align=3.252812, entropy=9.442029,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920683, edge=0.003066, neigh=2.255881, align=3.246162, entropy=9.442293,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920476, edge=0.003063, neigh=2.258872, align=3.241480, entropy=9.442033,s=1.000000, s_hat=1.000000
Time for optimization: 43.12s
Test results:
Top-1: 0.111
Top-10: 0.553
Top-30: 0.744
Top-50: 0.765
Top-100: 0.781
MRR: 0.233
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.073s
Time for attribute perturbation: 0.095s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:35,  2.81it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:37,  2.65it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:34,  2.77it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:36,  2.61it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:37,  2.53it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:35,  2.61it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:34,  2.72it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:03<00:34,  2.63it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:36,  2.50it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:36,  2.46it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:04<00:29,  2.99it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:24,  3.50it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:26,  3.19it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:30,  2.78it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:28,  2.93it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:06<00:29,  2.84it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:29,  2.78it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:29,  2.71it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:07<00:26,  2.98it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:24,  3.18it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:24,  3.18it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:08<00:28,  2.66it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:08<00:25,  2.94it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:29,  2.59it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:09<00:29,  2.47it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:09<00:29,  2.46it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:10<00:29,  2.42it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:29,  2.40it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:26,  2.66it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:01<01:11,  1.46s/it]Computing product RWR scores:   4%|▍         | 2/50 [00:02<00:49,  1.04s/it]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:36,  1.30it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:49,  1.04s/it]
Time for cost matrix: 17.20s
Iter 0: wasserstein=1.374083, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952123, edge=0.002790, neigh=2.305964, align=2.903506, entropy=10.165249,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.924940, edge=0.003031, neigh=2.210202, align=3.249888, entropy=9.555605,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922330, edge=0.003094, neigh=2.230221, align=3.294763, entropy=9.457705,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921764, edge=0.003100, neigh=2.250350, align=3.280665, entropy=9.449240,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921310, edge=0.003089, neigh=2.262294, align=3.266281, entropy=9.448588,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920895, edge=0.003077, neigh=2.269800, align=3.255279, entropy=9.448163,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920571, edge=0.003072, neigh=2.275182, align=3.246563, entropy=9.448199,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920307, edge=0.003068, neigh=2.279189, align=3.240283, entropy=9.447931,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920087, edge=0.003065, neigh=2.282214, align=3.235654, entropy=9.447553,s=1.000000, s_hat=1.000000
Time for optimization: 55.62s
Test results:
Top-1: 0.095
Top-10: 0.511
Top-30: 0.732
Top-50: 0.751
Top-100: 0.765
MRR: 0.212
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.100s
Time for attribute perturbation: 0.103s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:27,  3.56it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:26,  3.65it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:27,  3.55it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:28,  3.41it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:34,  2.76it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:37,  2.48it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:30,  3.03it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:28,  3.19it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:32,  2.76it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:33,  2.65it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:29,  3.04it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.28it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:22,  3.76it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:25,  3.31it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:30,  2.80it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:29,  2.86it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:27,  3.03it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:28,  2.88it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:30,  2.65it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:28,  2.80it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:26,  2.98it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:24,  3.18it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:24,  3.13it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:23,  3.17it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:22,  3.27it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:21,  3.34it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:19,  3.64it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:19,  3.56it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:23,  3.05it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:01<01:15,  1.53s/it]Computing product RWR scores:   4%|▍         | 2/50 [00:02<01:03,  1.32s/it]Computing product RWR scores:   6%|▌         | 3/50 [00:03<00:55,  1.19s/it]Computing product RWR scores:   6%|▌         | 3/50 [00:05<01:23,  1.78s/it]
Time for cost matrix: 17.18s
Iter 0: wasserstein=1.373569, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952668, edge=0.002784, neigh=2.313708, align=2.907990, entropy=10.162846,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925639, edge=0.003024, neigh=2.214695, align=3.251787, entropy=9.557024,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.923012, edge=0.003096, neigh=2.235138, align=3.293147, entropy=9.461705,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922391, edge=0.003102, neigh=2.257355, align=3.277725, entropy=9.453374,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921877, edge=0.003090, neigh=2.269150, align=3.262509, entropy=9.452721,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921429, edge=0.003078, neigh=2.276103, align=3.251313, entropy=9.452221,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921093, edge=0.003071, neigh=2.281045, align=3.242705, entropy=9.452195,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920844, edge=0.003068, neigh=2.284951, align=3.236141, entropy=9.452279,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920633, edge=0.003065, neigh=2.287991, align=3.231422, entropy=9.452029,s=1.000000, s_hat=1.000000
Time for optimization: 43.40s
Test results:
Top-1: 0.095
Top-10: 0.505
Top-30: 0.724
Top-50: 0.745
Top-100: 0.761
MRR: 0.211
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.077s
Time for attribute perturbation: 0.055s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.73it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.37it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.47it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.54it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.02it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:14,  6.46it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  6.07it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:17,  5.39it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:18,  5.00it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:19,  4.59it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.68it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.43it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.55it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  4.86it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.68it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.49it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.52it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.34it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:18,  4.37it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.39it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.24it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:18,  4.24it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:15,  4.98it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:13,  5.73it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:12,  6.01it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:12,  5.70it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:13,  5.22it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:14,  4.83it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  4.76it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:14,  4.74it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:23,  2.10it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:27,  1.77it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.22it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:27,  1.71it/s]
Time for cost matrix: 9.94s
Iter 0: wasserstein=1.374348, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952696, edge=0.002785, neigh=2.312917, align=2.905455, entropy=10.164844,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925762, edge=0.003029, neigh=2.208957, align=3.250514, entropy=9.558903,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922998, edge=0.003091, neigh=2.228291, align=3.294134, entropy=9.460584,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922303, edge=0.003096, neigh=2.248994, align=3.280352, entropy=9.450805,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921793, edge=0.003086, neigh=2.259895, align=3.265540, entropy=9.449988,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921349, edge=0.003076, neigh=2.266656, align=3.254570, entropy=9.449383,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.921022, edge=0.003070, neigh=2.271635, align=3.245909, entropy=9.449458,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920773, edge=0.003067, neigh=2.275582, align=3.239459, entropy=9.449436,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920559, edge=0.003064, neigh=2.278616, align=3.234876, entropy=9.449030,s=1.000000, s_hat=1.000000
Time for optimization: 31.50s
Test results:
Top-1: 0.098
Top-10: 0.515
Top-30: 0.731
Top-50: 0.750
Top-100: 0.766
MRR: 0.215
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.020s
Time for attribute perturbation: 0.020s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 17.38it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:05, 17.86it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:05, 18.19it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:05, 16.94it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:05, 17.22it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:05, 16.23it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:04, 17.19it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:00<00:04, 17.09it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:05, 15.97it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:04, 17.88it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:04, 18.03it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:04, 18.38it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:04, 17.79it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:04, 16.94it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:08,  5.89it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:07,  6.21it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:07,  6.09it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.45it/s]
Time for cost matrix: 3.61s
Iter 0: wasserstein=1.373532, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.951927, edge=0.002788, neigh=2.313760, align=2.906651, entropy=10.161716,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.924826, edge=0.003027, neigh=2.217625, align=3.252973, entropy=9.552986,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922182, edge=0.003095, neigh=2.240782, align=3.296446, entropy=9.455806,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921570, edge=0.003100, neigh=2.261495, align=3.283263, entropy=9.446167,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921075, edge=0.003088, neigh=2.272856, align=3.269358, entropy=9.444866,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920647, edge=0.003077, neigh=2.280192, align=3.258797, entropy=9.444160,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920335, edge=0.003072, neigh=2.285544, align=3.250314, entropy=9.444279,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920098, edge=0.003069, neigh=2.289570, align=3.243919, entropy=9.444361,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.919897, edge=0.003066, neigh=2.292535, align=3.239259, entropy=9.444149,s=1.000000, s_hat=1.000000
Time for optimization: 15.91s
Test results:
Top-1: 0.095
Top-10: 0.509
Top-30: 0.719
Top-50: 0.743
Top-100: 0.760
MRR: 0.211
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.052s
Time for attribute perturbation: 0.052s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.53it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.53it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.44it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.43it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.16it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:09,  9.42it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:06, 12.86it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:06, 14.57it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:05, 15.17it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:05, 15.30it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:05, 15.62it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:05, 15.83it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:07, 10.48it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:09,  8.12it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:08,  8.73it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:07, 10.03it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:07,  9.79it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:24,  1.98it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.58it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  4.72it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.38it/s]
Time for cost matrix: 5.24s
Iter 0: wasserstein=1.372595, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.951302, edge=0.002793, neigh=2.318495, align=2.906821, entropy=10.162540,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.924408, edge=0.003034, neigh=2.220053, align=3.251647, entropy=9.556986,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921718, edge=0.003096, neigh=2.240251, align=3.296039, entropy=9.458897,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921052, edge=0.003101, neigh=2.261478, align=3.281903, entropy=9.449475,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.920528, edge=0.003091, neigh=2.273942, align=3.267230, entropy=9.448353,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920078, edge=0.003080, neigh=2.281624, align=3.256235, entropy=9.447663,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.919745, edge=0.003074, neigh=2.287208, align=3.247630, entropy=9.447565,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.919479, edge=0.003071, neigh=2.291435, align=3.241371, entropy=9.447256,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.919256, edge=0.003068, neigh=2.294593, align=3.236785, entropy=9.446800,s=1.000000, s_hat=1.000000
Time for optimization: 23.16s
Test results:
Top-1: 0.093
Top-10: 0.497
Top-30: 0.720
Top-50: 0.742
Top-100: 0.754
MRR: 0.206
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.084s
Time for attribute perturbation: 0.065s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  6.08it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.20it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.61it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.39it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  6.87it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:15,  6.03it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.27it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:18,  4.85it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.60it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:20,  4.31it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.30it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.23it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:20,  4.29it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:19,  4.33it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.23it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.33it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.37it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.34it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.25it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.24it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.28it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:18,  4.30it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:17,  4.35it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.07it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:18,  4.03it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.22it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:17,  4.21it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.39it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.39it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.38it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.74it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.11it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.26it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  2.01it/s]
Time for cost matrix: 10.10s
Iter 0: wasserstein=1.372378, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.951583, edge=0.002771, neigh=2.333606, align=2.916659, entropy=10.157319,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.924535, edge=0.003023, neigh=2.235765, align=3.258875, entropy=9.551101,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921763, edge=0.003092, neigh=2.260275, align=3.302529, entropy=9.452324,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921038, edge=0.003098, neigh=2.282972, align=3.289318, entropy=9.441744,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.920528, edge=0.003089, neigh=2.295574, align=3.274618, entropy=9.440830,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920091, edge=0.003079, neigh=2.302991, align=3.263645, entropy=9.440248,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.919756, edge=0.003073, neigh=2.307991, align=3.255201, entropy=9.440109,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.919502, edge=0.003069, neigh=2.311857, align=3.248825, entropy=9.440032,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.919285, edge=0.003067, neigh=2.314733, align=3.244237, entropy=9.439655,s=1.000000, s_hat=1.000000
Time for optimization: 32.81s
Test results:
Top-1: 0.092
Top-10: 0.491
Top-30: 0.712
Top-50: 0.735
Top-100: 0.751
MRR: 0.202
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.078s
Time for attribute perturbation: 0.073s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.09it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.69it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  4.88it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.85it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.71it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.41it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.36it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.40it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.23it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.16it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.14it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.13it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:21,  4.06it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.17it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.59it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:17,  4.88it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.67it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.55it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:16,  4.80it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:16,  4.88it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.58it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.35it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:16,  4.53it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:14,  5.25it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:14,  5.23it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:14,  4.95it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.81it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.66it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.58it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.40it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.79it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.30it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.63it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:22,  2.13it/s]
Time for cost matrix: 10.07s
Iter 0: wasserstein=1.374346, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.951953, edge=0.002786, neigh=2.297888, align=2.905939, entropy=10.157740,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925136, edge=0.003023, neigh=2.208176, align=3.255499, entropy=9.549561,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922540, edge=0.003091, neigh=2.228386, align=3.299709, entropy=9.452533,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921885, edge=0.003095, neigh=2.248665, align=3.287205, entropy=9.442056,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921389, edge=0.003086, neigh=2.259665, align=3.273240, entropy=9.440805,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920970, edge=0.003076, neigh=2.266543, align=3.262751, entropy=9.440112,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920657, edge=0.003070, neigh=2.271504, align=3.254505, entropy=9.440047,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920429, edge=0.003067, neigh=2.275490, align=3.247983, entropy=9.440265,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920229, edge=0.003065, neigh=2.278583, align=3.243325, entropy=9.440035,s=1.000000, s_hat=1.000000
Time for optimization: 31.53s
Test results:
Top-1: 0.110
Top-10: 0.526
Top-30: 0.731
Top-50: 0.752
Top-100: 0.761
MRR: 0.224
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.065s
Time for attribute perturbation: 0.065s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:26,  3.76it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:25,  3.89it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.04it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:23,  4.03it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.20it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.18it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.29it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.29it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.27it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.30it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.18it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.07it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.16it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:21,  4.09it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:21,  4.00it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.18it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:20,  4.07it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.23it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.31it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.19it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:18,  4.30it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:17,  4.39it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.49it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.34it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:18,  4.17it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:16,  4.40it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.40it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.20it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.20it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.07it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:31,  1.55it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:25,  1.86it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.18it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:29,  1.60it/s]
Time for cost matrix: 11.05s
Iter 0: wasserstein=1.373464, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952684, edge=0.002795, neigh=2.314407, align=2.905184, entropy=10.167495,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925525, edge=0.003036, neigh=2.208503, align=3.251465, entropy=9.558015,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922745, edge=0.003097, neigh=2.225938, align=3.296626, entropy=9.458358,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.922061, edge=0.003101, neigh=2.246302, align=3.283347, entropy=9.448144,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921561, edge=0.003090, neigh=2.258394, align=3.268640, entropy=9.447372,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.921113, edge=0.003079, neigh=2.265552, align=3.257471, entropy=9.446907,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920773, edge=0.003073, neigh=2.270713, align=3.248424, entropy=9.447150,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920529, edge=0.003070, neigh=2.274909, align=3.241368, entropy=9.447582,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920319, edge=0.003068, neigh=2.278096, align=3.236372, entropy=9.447505,s=1.000000, s_hat=1.000000
Time for optimization: 32.36s
Test results:
Top-1: 0.090
Top-10: 0.498
Top-30: 0.721
Top-50: 0.748
Top-100: 0.762
MRR: 0.205
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.085s
Time for attribute perturbation: 0.065s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.41it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.67it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.67it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.59it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.47it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.40it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.75it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:17,  5.23it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.64it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.23it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:12,  6.94it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:12,  6.93it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:11,  7.20it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.27it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.99it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:15,  5.50it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  5.03it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:17,  4.70it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:17,  4.47it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:17,  4.46it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.56it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:17,  4.42it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:17,  4.27it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:17,  4.33it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.25it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:16,  4.30it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:16,  4.29it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:16,  4.23it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  4.84it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.09it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.95it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.07it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.17it/s]
Time for cost matrix: 9.40s
Iter 0: wasserstein=1.373629, edge=0.003192, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.952391, edge=0.002804, neigh=2.316886, align=2.895456, entropy=10.170557,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.925333, edge=0.003038, neigh=2.222305, align=3.251066, entropy=9.556057,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.922589, edge=0.003094, neigh=2.242553, align=3.296505, entropy=9.457088,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.921893, edge=0.003096, neigh=2.263075, align=3.283351, entropy=9.446983,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.921403, edge=0.003087, neigh=2.275088, align=3.268183, entropy=9.446655,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.920990, edge=0.003078, neigh=2.283060, align=3.256814, entropy=9.446592,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.920678, edge=0.003072, neigh=2.288819, align=3.248093, entropy=9.446838,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.920436, edge=0.003069, neigh=2.293250, align=3.241618, entropy=9.446927,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.920228, edge=0.003067, neigh=2.296620, align=3.236935, entropy=9.446691,s=1.000000, s_hat=1.000000
Time for optimization: 31.32s
Test results:
Top-1: 0.094
Top-10: 0.497
Top-30: 0.722
Top-50: 0.739
Top-100: 0.757
MRR: 0.207
Loading datasets/cora.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.052s
Time for attribute perturbation: 0.054s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.40it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:12,  7.93it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  7.28it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.77it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:10,  9.12it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:10,  9.14it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  8.15it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.60it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:10,  8.76it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  8.80it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:10,  8.27it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:09,  8.62it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:11,  7.62it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  6.98it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.44it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  5.81it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:13,  5.81it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:12,  6.57it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:11,  7.01it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:09,  8.05it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:08,  8.36it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  8.08it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:07,  9.17it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.64it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.43it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.63it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.57it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.69it/s]
Time for cost matrix: 6.61s
Iter 0: wasserstein=1.368517, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.949788, edge=0.002794, neigh=2.373169, align=2.906052, entropy=10.167510,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.922796, edge=0.003033, neigh=2.271666, align=3.250696, entropy=9.559330,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.919983, edge=0.003089, neigh=2.293737, align=3.294644, entropy=9.460158,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919249, edge=0.003093, neigh=2.316892, align=3.280650, entropy=9.450189,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.918746, edge=0.003084, neigh=2.329676, align=3.265433, entropy=9.449781,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.918319, edge=0.003074, neigh=2.337378, align=3.254008, entropy=9.449651,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918000, edge=0.003068, neigh=2.342796, align=3.245111, entropy=9.449932,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.917746, edge=0.003065, neigh=2.346904, align=3.238744, entropy=9.449827,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.917527, edge=0.003062, neigh=2.350015, align=3.234226, entropy=9.449375,s=1.000000, s_hat=1.000000
Time for optimization: 30.10s
Test results:
Top-1: 0.066
Top-10: 0.409
Top-30: 0.673
Top-50: 0.706
Top-100: 0.723
MRR: 0.166
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.073s
Time for attribute perturbation: 0.066s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.84it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.22it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.54it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.37it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  3.96it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.48it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.45it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.45it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.42it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.37it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.34it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.44it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.37it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.44it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.41it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:17,  4.71it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.54it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.35it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.39it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.42it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.32it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.21it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:19,  4.03it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.04it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:18,  4.15it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.19it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.23it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.22it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.33it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.18it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.44it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:18,  2.63it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.82it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.94it/s]
Time for cost matrix: 10.46s
Iter 0: wasserstein=1.369722, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950450, edge=0.002794, neigh=2.368925, align=2.906099, entropy=10.168920,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923376, edge=0.003030, neigh=2.264930, align=3.249474, entropy=9.561619,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920559, edge=0.003087, neigh=2.287435, align=3.293307, entropy=9.462574,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919859, edge=0.003093, neigh=2.310826, align=3.278960, entropy=9.453004,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919356, edge=0.003084, neigh=2.324209, align=3.263634, entropy=9.452545,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.918923, edge=0.003074, neigh=2.332297, align=3.252159, entropy=9.452302,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918591, edge=0.003068, neigh=2.337889, align=3.243354, entropy=9.452354,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918328, edge=0.003064, neigh=2.342076, align=3.236940, entropy=9.452178,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918105, edge=0.003062, neigh=2.345266, align=3.232371, entropy=9.451692,s=1.000000, s_hat=1.000000
Time for optimization: 32.81s
Test results:
Top-1: 0.069
Top-10: 0.436
Top-30: 0.686
Top-50: 0.712
Top-100: 0.737
MRR: 0.173
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.018s
Time for attribute perturbation: 0.076s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.14it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.27it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.09it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.01it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  3.99it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  4.02it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.22it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.21it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.50it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.49it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.38it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.34it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.16it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:21,  4.02it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.07it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.09it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.22it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.13it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.19it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.30it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.34it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:17,  4.39it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.37it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.26it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.32it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:17,  4.32it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.17it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.24it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.36it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.11it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.33it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.16it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.40it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.53it/s]
Time for cost matrix: 10.31s
Iter 0: wasserstein=1.369881, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950110, edge=0.002782, neigh=2.360845, align=2.912139, entropy=10.157531,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923264, edge=0.003017, neigh=2.263059, align=3.254828, entropy=9.553028,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920661, edge=0.003084, neigh=2.284847, align=3.295787, entropy=9.458365,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920014, edge=0.003091, neigh=2.306909, align=3.280782, entropy=9.449781,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919527, edge=0.003083, neigh=2.320265, align=3.265176, entropy=9.449630,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919103, edge=0.003073, neigh=2.328763, align=3.254004, entropy=9.449329,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918785, edge=0.003067, neigh=2.334498, align=3.245393, entropy=9.449488,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918538, edge=0.003064, neigh=2.338763, align=3.238950, entropy=9.449537,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918323, edge=0.003061, neigh=2.341908, align=3.234331, entropy=9.449206,s=1.000000, s_hat=1.000000
Time for optimization: 32.27s
Test results:
Top-1: 0.066
Top-10: 0.438
Top-30: 0.689
Top-50: 0.714
Top-100: 0.731
MRR: 0.172
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.072s
Time for attribute perturbation: 0.065s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  5.10it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:16,  5.87it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.43it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.76it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.61it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.57it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.88it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:18,  4.87it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:17,  5.12it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:16,  5.48it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:15,  5.86it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:14,  5.88it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:13,  6.27it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  6.08it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.10it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.15it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:14,  5.92it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:13,  6.05it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  6.08it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.91it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:15,  5.07it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.62it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:13,  5.55it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:12,  6.16it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:11,  6.39it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:12,  5.96it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:12,  5.88it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:11,  6.21it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:10,  6.66it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:12,  5.53it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.84it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.45it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.11it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.43it/s]
Time for cost matrix: 8.46s
Iter 0: wasserstein=1.369795, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950766, edge=0.002798, neigh=2.369296, align=2.903656, entropy=10.172473,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923508, edge=0.003037, neigh=2.270599, align=3.249720, entropy=9.560983,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920683, edge=0.003094, neigh=2.293355, align=3.293945, entropy=9.461407,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919924, edge=0.003096, neigh=2.316756, align=3.280845, entropy=9.450488,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919402, edge=0.003085, neigh=2.329925, align=3.266351, entropy=9.449319,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.918957, edge=0.003074, neigh=2.337844, align=3.255418, entropy=9.448627,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918618, edge=0.003068, neigh=2.343430, align=3.246772, entropy=9.448552,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918363, edge=0.003065, neigh=2.347799, align=3.240282, entropy=9.448522,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918143, edge=0.003062, neigh=2.351091, align=3.235717, entropy=9.448101,s=1.000000, s_hat=1.000000
Time for optimization: 28.45s
Test results:
Top-1: 0.068
Top-10: 0.438
Top-30: 0.684
Top-50: 0.710
Top-100: 0.730
MRR: 0.172
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.068s
Time for attribute perturbation: 0.081s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.01it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.20it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.27it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.27it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.34it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.14it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.16it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:22,  4.13it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  3.99it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:22,  3.96it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.41it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:13,  6.33it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:09,  8.63it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:07, 10.47it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:05, 13.40it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:04, 16.32it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:04, 18.29it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:03, 18.43it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.87it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.83it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:06,  7.45it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.33it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.59it/s]
Time for cost matrix: 5.78s
Iter 0: wasserstein=1.369539, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950580, edge=0.002797, neigh=2.364115, align=2.903007, entropy=10.170613,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923481, edge=0.003036, neigh=2.264219, align=3.246574, entropy=9.562619,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920692, edge=0.003089, neigh=2.286755, align=3.290235, entropy=9.464327,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920006, edge=0.003096, neigh=2.309790, align=3.276064, entropy=9.454935,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919499, edge=0.003084, neigh=2.322964, align=3.261500, entropy=9.453958,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919059, edge=0.003073, neigh=2.331228, align=3.250544, entropy=9.453354,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918733, edge=0.003068, neigh=2.336957, align=3.241757, entropy=9.453500,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918484, edge=0.003065, neigh=2.341289, align=3.235218, entropy=9.453542,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918267, edge=0.003062, neigh=2.344489, align=3.230617, entropy=9.453159,s=1.000000, s_hat=1.000000
Time for optimization: 20.26s
Test results:
Top-1: 0.067
Top-10: 0.431
Top-30: 0.685
Top-50: 0.715
Top-100: 0.731
MRR: 0.171
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.049s
Time for attribute perturbation: 0.030s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:29,  3.37it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.57it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.62it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.50it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:18,  5.02it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.30it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.23it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.67it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:16,  5.45it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.30it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:21,  4.11it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.28it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.60it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:23,  3.59it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:21,  3.78it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.43it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:16,  4.87it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.53it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:15,  4.90it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:14,  5.35it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:14,  5.31it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.14it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:19,  3.84it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.10it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:19,  3.72it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.27it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.38it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.20it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.90it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:02<00:33,  1.38it/s]
Time for cost matrix: 10.68s
Iter 0: wasserstein=1.369780, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950942, edge=0.002791, neigh=2.367151, align=2.909921, entropy=10.166389,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923844, edge=0.003030, neigh=2.265471, align=3.253186, entropy=9.558675,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.921115, edge=0.003094, neigh=2.286970, align=3.294070, entropy=9.462678,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920398, edge=0.003096, neigh=2.309529, align=3.279392, entropy=9.453134,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919867, edge=0.003084, neigh=2.322758, align=3.263999, entropy=9.452377,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919405, edge=0.003073, neigh=2.330945, align=3.252591, entropy=9.451807,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.919061, edge=0.003067, neigh=2.336571, align=3.243735, entropy=9.451804,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918798, edge=0.003064, neigh=2.340824, align=3.237239, entropy=9.451691,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918574, edge=0.003061, neigh=2.343996, align=3.232682, entropy=9.451202,s=1.000000, s_hat=1.000000
Time for optimization: 50.23s
Test results:
Top-1: 0.067
Top-10: 0.442
Top-30: 0.689
Top-50: 0.715
Top-100: 0.734
MRR: 0.174
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.123s
Time for attribute perturbation: 0.129s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:44,  2.20it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:43,  2.25it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:38,  2.55it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:34,  2.77it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:29,  3.25it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:28,  3.31it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:27,  3.42it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:27,  3.39it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:27,  3.34it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:27,  3.24it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:28,  3.18it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:27,  3.24it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:26,  3.26it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:25,  3.37it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:23,  3.66it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:25,  3.26it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:29,  2.84it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:30,  2.72it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:34,  2.36it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:33,  2.36it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:32,  2.41it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:29,  2.67it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:28,  2.72it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:08<00:30,  2.52it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:28,  2.61it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:09<00:26,  2.82it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:09<00:27,  2.69it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:10<00:32,  2.24it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:29,  2.40it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:26,  2.72it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:28,  1.71it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:22,  2.15it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.30it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:28,  1.66it/s]
Time for cost matrix: 15.11s
Iter 0: wasserstein=1.369335, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950317, edge=0.002776, neigh=2.373591, align=2.915498, entropy=10.157762,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923510, edge=0.003024, neigh=2.261791, align=3.252796, entropy=9.557189,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920794, edge=0.003089, neigh=2.280659, align=3.293265, entropy=9.461749,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920073, edge=0.003094, neigh=2.302774, align=3.278912, entropy=9.452116,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919555, edge=0.003084, neigh=2.316088, align=3.264178, entropy=9.451231,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919115, edge=0.003073, neigh=2.324178, align=3.253072, entropy=9.450758,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918780, edge=0.003067, neigh=2.329920, align=3.244310, entropy=9.450797,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918530, edge=0.003064, neigh=2.334373, align=3.237760, entropy=9.450845,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918318, edge=0.003061, neigh=2.337741, align=3.233108, entropy=9.450539,s=1.000000, s_hat=1.000000
Time for optimization: 49.56s
Test results:
Top-1: 0.065
Top-10: 0.436
Top-30: 0.683
Top-50: 0.710
Top-100: 0.729
MRR: 0.170
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.061s
Time for attribute perturbation: 0.059s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.00it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  3.94it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:24,  3.96it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.05it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.19it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.25it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.24it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.22it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.36it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.43it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.31it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.30it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.20it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.40it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:17,  4.76it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:17,  4.75it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.55it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.41it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.35it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.40it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.31it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.14it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.13it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.05it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.34it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:16,  4.36it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.30it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.20it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.21it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.14it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.99it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.17it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:16,  2.88it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.25it/s]
Time for cost matrix: 10.34s
Iter 0: wasserstein=1.368355, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.949883, edge=0.002798, neigh=2.372141, align=2.908902, entropy=10.165910,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.922694, edge=0.003030, neigh=2.269989, align=3.251685, entropy=9.557396,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.919951, edge=0.003088, neigh=2.290152, align=3.295119, entropy=9.459532,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919278, edge=0.003094, neigh=2.312008, align=3.280888, entropy=9.450231,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.918793, edge=0.003084, neigh=2.324605, align=3.265848, entropy=9.449807,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.918372, edge=0.003073, neigh=2.332384, align=3.254407, entropy=9.449738,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918053, edge=0.003068, neigh=2.337830, align=3.245290, entropy=9.450170,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.917804, edge=0.003065, neigh=2.342001, align=3.238526, entropy=9.450351,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.917587, edge=0.003062, neigh=2.345065, align=3.233764, entropy=9.450045,s=1.000000, s_hat=1.000000
Time for optimization: 31.83s
Test results:
Top-1: 0.068
Top-10: 0.426
Top-30: 0.678
Top-50: 0.704
Top-100: 0.725
MRR: 0.168
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.069s
Time for attribute perturbation: 0.067s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.47it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.49it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.07it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.04it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.29it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.18it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.15it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.32it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.33it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.39it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.19it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.33it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.73it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:16,  5.14it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:17,  4.86it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.55it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.38it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.42it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:17,  4.71it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.56it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.52it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.45it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.35it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.26it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.27it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.35it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.33it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.20it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.05it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.21it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.44it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:20,  2.30it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.25it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:28,  1.66it/s]
Time for cost matrix: 10.86s
Iter 0: wasserstein=1.370592, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950932, edge=0.002795, neigh=2.359902, align=2.905175, entropy=10.170491,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923711, edge=0.003032, neigh=2.261158, align=3.251140, entropy=9.560156,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920948, edge=0.003091, neigh=2.281337, align=3.294967, entropy=9.461697,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.920239, edge=0.003095, neigh=2.303168, align=3.280928, entropy=9.451796,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919720, edge=0.003085, neigh=2.316094, align=3.265755, entropy=9.451057,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919273, edge=0.003073, neigh=2.324364, align=3.254193, entropy=9.450758,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918938, edge=0.003068, neigh=2.330152, align=3.244943, entropy=9.451101,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918678, edge=0.003065, neigh=2.334428, align=3.238115, entropy=9.451255,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918458, edge=0.003062, neigh=2.337547, align=3.233218, entropy=9.451045,s=1.000000, s_hat=1.000000
Time for optimization: 31.73s
Test results:
Top-1: 0.068
Top-10: 0.444
Top-30: 0.695
Top-50: 0.718
Top-100: 0.737
MRR: 0.173
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.053s
Time for attribute perturbation: 0.080s
Graph 1: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Graph 2: torch.Size([2708, 2708]), torch.Size([2708, 1433])
Ground truth: torch.Size([2708, 2]), torch.Size([2708, 2708])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.77it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.15it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.14it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.12it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.16it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.29it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.28it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.24it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.31it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.51it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.39it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.31it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.30it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.19it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.19it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.29it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.42it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.43it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.49it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.30it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.24it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.19it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.52it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.72it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.57it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.43it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.44it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.28it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.03it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:17,  4.17it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.87it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.21it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.09it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.21it/s]
Time for cost matrix: 10.17s
Iter 0: wasserstein=1.369485, edge=0.003183, neigh=0.796217, align=-0.001166, entropy=15.807931,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.950535, edge=0.002795, neigh=2.369466, align=2.902958, entropy=10.170156,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.923418, edge=0.003032, neigh=2.267488, align=3.245303, entropy=9.563321,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.920660, edge=0.003091, neigh=2.291451, align=3.288407, entropy=9.465688,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.919972, edge=0.003095, neigh=2.315271, align=3.274938, entropy=9.455828,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.919482, edge=0.003086, neigh=2.328916, align=3.260180, entropy=9.455257,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.919056, edge=0.003075, neigh=2.337165, align=3.248981, entropy=9.454974,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.918729, edge=0.003069, neigh=2.342801, align=3.240133, entropy=9.455137,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.918481, edge=0.003066, neigh=2.347110, align=3.233452, entropy=9.455272,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.918267, edge=0.003063, neigh=2.350288, align=3.228759, entropy=9.454955,s=1.000000, s_hat=1.000000
Time for optimization: 31.70s
Test results:
Top-1: 0.068
Top-10: 0.440
Top-30: 0.686
Top-50: 0.711
Top-100: 0.727
MRR: 0.172
Loading datasets/Douban.mat...
Run 1/1
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.010s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Iter 0: wasserstein=1.127491, edge=0.001135, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.791489, edge=0.001329, neigh=5.683800, align=4.896898, entropy=9.580899,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.763527, edge=0.000886, neigh=5.776975, align=5.452750, entropy=8.971920,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.760330, edge=0.000900, neigh=6.233625, align=5.493901, entropy=8.924694,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.760286, edge=0.000919, neigh=6.615016, align=5.463702, entropy=8.954404,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.760849, edge=0.000927, neigh=6.977295, align=5.432251, entropy=8.985785,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.761259, edge=0.000930, neigh=7.348690, align=5.414225, entropy=9.003747,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.761353, edge=0.000933, neigh=7.614799, align=5.401758, entropy=9.016206,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.761212, edge=0.000940, neigh=7.814715, align=5.391095, entropy=9.026416,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.761322, edge=0.000946, neigh=7.980967, align=5.382917, entropy=9.034051,s=1.000000, s_hat=1.000000
Time for optimization: 22.35s
Test results:
Top-1: 0.686
Top-10: 0.949
Top-30: 0.981
Top-50: 0.987
Top-100: 0.994
MRR: 0.784
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.030s
Time for attribute perturbation: 0.007s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.49it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:07, 13.14it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:07, 13.38it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:06, 14.81it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:08, 10.72it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:07, 11.60it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  9.66it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:08,  9.65it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:10,  7.97it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:11,  7.26it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.67it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:08,  8.83it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:08,  8.86it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:08,  8.58it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:07,  9.85it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:07,  9.07it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.82it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:08,  8.61it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:06, 10.68it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:03<00:07,  8.68it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:08,  8.08it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:09,  6.89it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:08,  7.01it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:09,  6.87it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:09,  6.54it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:10,  5.88it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:04<00:09,  6.51it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:04<00:06,  8.71it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:05, 10.56it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:04, 11.27it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:05,  8.74it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:05<00:06,  7.58it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:06,  7.08it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:07,  6.40it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.28it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:18,  2.64it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.14it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.03it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:16,  2.78it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:15,  3.00it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:15,  2.83it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:15,  2.72it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.08it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:03<00:13,  3.09it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.96it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:14,  2.71it/s]
Time for cost matrix: 11.79s
Iter 0: wasserstein=1.166223, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.976946, edge=0.000536, neigh=3.863518, align=4.188983, entropy=10.287052,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.962801, edge=0.000475, neigh=3.397031, align=4.979718, entropy=9.445245,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.960699, edge=0.000469, neigh=3.223418, align=5.200293, entropy=9.218709,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.960878, edge=0.000466, neigh=3.067546, align=5.294737, entropy=9.123448,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.961054, edge=0.000466, neigh=3.044854, align=5.353763, entropy=9.064220,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.960937, edge=0.000468, neigh=3.167884, align=5.350906, entropy=9.067059,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.960532, edge=0.000470, neigh=3.313131, align=5.341583, entropy=9.076381,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.959709, edge=0.000470, neigh=3.458607, align=5.334549, entropy=9.083415,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.959167, edge=0.000470, neigh=3.594400, align=5.331730, entropy=9.086185,s=1.000000, s_hat=1.000000
Time for optimization: 23.83s
Test results:
Top-1: 0.539
Top-10: 0.866
Top-30: 0.935
Top-50: 0.951
Top-100: 0.966
MRR: 0.653
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.060s
Time for attribute perturbation: 0.067s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.21it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.65it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.82it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:14,  6.49it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:15,  5.97it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:16,  5.54it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:16,  5.46it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.44it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:16,  5.44it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.49it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:16,  5.21it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.74it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:18,  4.74it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:17,  4.89it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:15,  5.58it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:15,  5.41it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:15,  5.30it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:12,  6.22it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:13,  5.86it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:14,  5.25it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:12,  5.96it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:13,  5.70it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:13,  5.48it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:10,  6.72it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.89it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:10,  6.74it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:11,  6.07it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:10,  6.28it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:09,  6.72it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:08,  8.12it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:08,  7.13it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:06<00:10,  6.12it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:10,  6.03it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:10,  5.98it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:09,  6.09it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:08,  7.21it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:07<00:08,  6.83it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:07<00:07,  7.31it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:07,  7.74it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:05,  9.47it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:06,  7.94it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:04, 10.13it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:06,  7.52it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:06,  6.81it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.19it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.41it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.91it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.36it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  3.88it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.58it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.52it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.68it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  3.95it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.67it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.70it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.46it/s]
Time for cost matrix: 13.01s
Iter 0: wasserstein=1.172699, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.980192, edge=0.000534, neigh=3.960994, align=4.258316, entropy=10.218405,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.966152, edge=0.000474, neigh=3.447981, align=5.016002, entropy=9.409404,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.964016, edge=0.000468, neigh=3.247018, align=5.230962, entropy=9.188128,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.964222, edge=0.000466, neigh=3.086962, align=5.316236, entropy=9.101968,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.964478, edge=0.000467, neigh=3.085156, align=5.368873, entropy=9.049113,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.964263, edge=0.000469, neigh=3.213983, align=5.366516, entropy=9.051450,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.963937, edge=0.000470, neigh=3.358192, align=5.359037, entropy=9.058927,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.963192, edge=0.000471, neigh=3.500957, align=5.352283, entropy=9.065681,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.962570, edge=0.000471, neigh=3.631159, align=5.348752, entropy=9.069179,s=1.000000, s_hat=1.000000
Time for optimization: 18.70s
Test results:
Top-1: 0.583
Top-10: 0.891
Top-30: 0.941
Top-50: 0.958
Top-100: 0.973
MRR: 0.695
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.053s
Time for attribute perturbation: 0.057s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.77it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.65it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:16,  5.80it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.88it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.42it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:12,  7.17it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.82it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.46it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.13it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:15,  5.83it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:14,  5.87it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  6.06it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  6.09it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.67it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:09,  8.66it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:09,  8.32it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.37it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:07, 10.51it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:09,  8.25it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:08,  8.77it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  7.73it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:11,  6.57it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:10,  6.65it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.62it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  7.41it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  7.61it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:07,  8.97it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:08,  7.75it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  6.65it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:07,  7.99it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  7.88it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  8.33it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:07,  7.60it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:08,  6.46it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:09,  5.67it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:10,  5.47it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:10,  5.26it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:10,  5.26it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:10,  4.96it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:10,  4.80it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:10,  4.66it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:09,  5.11it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:08,  5.74it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  6.69it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.27it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.98it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.08it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.16it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.09it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.18it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.12it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.08it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  2.97it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.97it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:14,  2.79it/s]
Time for cost matrix: 13.23s
Iter 0: wasserstein=1.168091, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.979350, edge=0.000538, neigh=3.896292, align=4.186676, entropy=10.290447,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.965534, edge=0.000480, neigh=3.363952, align=4.968067, entropy=9.457286,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.963498, edge=0.000473, neigh=3.188847, align=5.195788, entropy=9.223275,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.963444, edge=0.000468, neigh=3.069160, align=5.293707, entropy=9.124491,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.963396, edge=0.000468, neigh=3.070465, align=5.354628, entropy=9.063357,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.963157, edge=0.000469, neigh=3.201965, align=5.352976, entropy=9.064989,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.962684, edge=0.000471, neigh=3.350227, align=5.345518, entropy=9.072446,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.961944, edge=0.000471, neigh=3.496282, align=5.338974, entropy=9.078990,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.961352, edge=0.000471, neigh=3.630325, align=5.335297, entropy=9.082633,s=1.000000, s_hat=1.000000
Time for optimization: 23.39s
Test results:
Top-1: 0.531
Top-10: 0.883
Top-30: 0.941
Top-50: 0.960
Top-100: 0.974
MRR: 0.655
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.050s
Time for attribute perturbation: 0.063s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.70it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.77it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.37it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.48it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  7.06it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:12,  7.35it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.60it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  6.05it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.15it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.42it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.31it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  5.83it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:13,  6.15it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.75it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.81it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.20it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  4.83it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:17,  4.57it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:17,  4.57it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:17,  4.44it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.47it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:18,  4.21it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:17,  4.36it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:17,  4.25it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:17,  4.28it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:16,  4.31it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:14,  5.14it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  5.07it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:14,  4.85it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:14,  4.83it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:14,  4.66it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:14,  4.67it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:06<00:14,  4.60it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:06<00:14,  4.59it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:14,  4.49it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:13,  4.56it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:07<00:14,  4.38it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:07<00:13,  4.37it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:07<00:13,  4.49it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:13,  4.41it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:08<00:11,  5.11it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:08<00:11,  5.01it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:08<00:10,  5.11it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:08<00:10,  5.46it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:10,  5.34it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:09<00:10,  5.19it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:09<00:10,  4.91it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:09<00:09,  5.27it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:09<00:08,  5.58it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:08,  5.48it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:10<00:08,  5.63it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:09,  5.08it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.67it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.04it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.79it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  3.90it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:09,  4.89it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:07,  5.86it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:05,  7.80it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.99it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:06,  5.97it/s]
Time for cost matrix: 13.86s
Iter 0: wasserstein=1.146658, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.972186, edge=0.000543, neigh=3.535177, align=3.953020, entropy=10.520547,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.959742, edge=0.000493, neigh=3.120206, align=4.790242, entropy=9.634171,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.957241, edge=0.000482, neigh=2.992471, align=5.054591, entropy=9.364259,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.956711, edge=0.000474, neigh=2.969736, align=5.176441, entropy=9.241668,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.956274, edge=0.000471, neigh=3.005825, align=5.262107, entropy=9.155867,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.955649, edge=0.000472, neigh=3.165748, align=5.263357, entropy=9.154607,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.955116, edge=0.000473, neigh=3.304416, align=5.256208, entropy=9.161756,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.954377, edge=0.000473, neigh=3.436774, align=5.249506, entropy=9.168458,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.953767, edge=0.000474, neigh=3.555294, align=5.244151, entropy=9.173640,s=1.000000, s_hat=1.000000
Time for optimization: 8.68s
Test results:
Top-1: 0.415
Top-10: 0.741
Top-30: 0.846
Top-50: 0.873
Top-100: 0.903
MRR: 0.532
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.038s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 16.80it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 27.60it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:02, 32.28it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:00<00:02, 34.77it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:02, 31.50it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:00<00:02, 33.23it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:00<00:02, 29.47it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:01<00:02, 26.33it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:01<00:02, 26.95it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:01<00:02, 28.26it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:01<00:02, 28.56it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:01<00:02, 21.73it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:01<00:02, 23.06it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:01<00:02, 24.34it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:01<00:01, 26.53it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:01<00:01, 26.83it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:06,  7.17it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:06,  7.59it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  8.89it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:04,  9.60it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:04, 10.43it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:03, 10.54it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.02it/s]
Time for cost matrix: 4.10s
Iter 0: wasserstein=1.169376, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.979024, edge=0.000536, neigh=3.866661, align=4.203921, entropy=10.271958,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.965336, edge=0.000476, neigh=3.402272, align=4.986082, entropy=9.439017,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.963423, edge=0.000469, neigh=3.202314, align=5.211712, entropy=9.207528,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.963527, edge=0.000466, neigh=3.047695, align=5.301967, entropy=9.116308,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.963702, edge=0.000466, neigh=3.041312, align=5.359880, entropy=9.058115,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.963446, edge=0.000468, neigh=3.172520, align=5.359628, entropy=9.058338,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.963103, edge=0.000470, neigh=3.313409, align=5.353682, entropy=9.064282,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.962304, edge=0.000470, neigh=3.451640, align=5.348248, entropy=9.069716,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.961726, edge=0.000470, neigh=3.583612, align=5.345247, entropy=9.072676,s=1.000000, s_hat=1.000000
Time for optimization: 10.20s
Test results:
Top-1: 0.569
Top-10: 0.880
Top-30: 0.941
Top-50: 0.961
Top-100: 0.973
MRR: 0.681
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.038s
Time for attribute perturbation: 0.006s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:04, 23.32it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:02, 31.30it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:02, 31.54it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 25.78it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 26.84it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:00<00:02, 29.04it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:00<00:02, 30.39it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:01<00:02, 31.97it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:01<00:02, 23.10it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:01<00:04, 15.25it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:01<00:03, 17.44it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:01<00:03, 16.60it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:02<00:03, 16.82it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:02<00:02, 18.82it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:02<00:02, 16.56it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:02, 18.56it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04, 10.36it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  7.93it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:05,  8.39it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:04,  9.54it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:00<00:03, 10.36it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.10it/s]
Time for cost matrix: 4.86s
Iter 0: wasserstein=1.173873, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.982032, edge=0.000535, neigh=3.961483, align=4.254243, entropy=10.222316,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.967696, edge=0.000475, neigh=3.418184, align=5.017786, entropy=9.407194,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.965529, edge=0.000469, neigh=3.245662, align=5.232602, entropy=9.186403,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.965486, edge=0.000466, neigh=3.090372, align=5.319804, entropy=9.098467,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.965659, edge=0.000467, neigh=3.093479, align=5.373545, entropy=9.044450,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.965417, edge=0.000469, neigh=3.218507, align=5.371196, entropy=9.046769,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.965143, edge=0.000471, neigh=3.358622, align=5.363806, entropy=9.054158,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.964436, edge=0.000471, neigh=3.501069, align=5.356869, entropy=9.061095,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.963866, edge=0.000472, neigh=3.631199, align=5.353838, entropy=9.064097,s=1.000000, s_hat=1.000000
Time for optimization: 9.97s
Test results:
Top-1: 0.577
Top-10: 0.898
Top-30: 0.956
Top-50: 0.972
Top-100: 0.984
MRR: 0.692
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.022s
Time for attribute perturbation: 0.008s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.45it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.50it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.74it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  6.98it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:14,  6.46it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.47it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:17,  5.27it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:17,  5.06it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:18,  4.95it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.66it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.70it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.71it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  4.84it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:18,  4.68it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.61it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.77it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:17,  4.66it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:17,  4.75it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:17,  4.58it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:14,  5.39it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:15,  5.12it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:15,  4.82it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:15,  4.70it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.51it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.57it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.57it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:15,  4.64it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:15,  4.62it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:14,  4.67it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:15,  4.53it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:14,  4.51it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:06<00:14,  4.51it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:15,  4.33it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:14,  4.27it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:14,  4.34it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:07<00:14,  4.40it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:13,  4.53it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:13,  4.42it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:13,  4.43it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:08<00:12,  4.49it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:12,  4.43it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:12,  4.40it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:12,  4.41it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:12,  4.25it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:09<00:12,  4.42it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:11,  4.40it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:11,  4.53it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:10,  4.59it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:10,  4.52it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:11,  4.31it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:11,  4.16it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.59it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.23it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.13it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.31it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.22it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.24it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  3.05it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.20it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.19it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.12it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.30it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.08it/s]
Time for cost matrix: 16.41s
Iter 0: wasserstein=1.161022, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.978598, edge=0.000539, neigh=3.677587, align=4.099819, entropy=10.376761,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.964805, edge=0.000479, neigh=3.236679, align=4.906926, entropy=9.518361,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.962219, edge=0.000471, neigh=3.085938, align=5.159704, entropy=9.259372,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.961835, edge=0.000466, neigh=2.976413, align=5.265884, entropy=9.152282,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.961737, edge=0.000465, neigh=2.991064, align=5.323639, entropy=9.094342,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.961309, edge=0.000466, neigh=3.117470, align=5.325461, entropy=9.092504,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.960849, edge=0.000468, neigh=3.245416, align=5.317828, entropy=9.100136,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.960006, edge=0.000469, neigh=3.382782, align=5.311314, entropy=9.106650,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.959378, edge=0.000470, neigh=3.514481, align=5.309440, entropy=9.108247,s=1.000000, s_hat=1.000000
Time for optimization: 23.81s
Test results:
Top-1: 0.517
Top-10: 0.846
Top-30: 0.913
Top-50: 0.933
Top-100: 0.952
MRR: 0.636
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.056s
Time for attribute perturbation: 0.063s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.91it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.61it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.58it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.46it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.56it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.61it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.81it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.70it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:18,  4.85it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:18,  4.84it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.81it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.66it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.66it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.54it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.58it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.64it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.65it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.39it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.21it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.43it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.57it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:14,  5.36it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:12,  6.13it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:11,  6.80it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:12,  6.17it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:09,  7.81it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:09,  7.80it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:10,  6.93it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:10,  6.56it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:12,  5.50it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:12,  5.38it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:06<00:11,  5.62it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:06<00:11,  5.71it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:06<00:10,  5.89it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:11,  5.54it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:07<00:08,  6.89it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:07<00:07,  8.03it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:07<00:06,  8.33it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:07<00:05, 10.22it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:04, 11.35it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:08<00:05, 10.26it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:08<00:05,  9.05it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:08<00:06,  7.44it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:07,  6.33it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:09<00:08,  5.62it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:09<00:08,  5.74it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.82it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.14it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.34it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:09,  4.76it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.85it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.48it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.43it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.34it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.19it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.11it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.08it/s]
Time for cost matrix: 14.01s
Iter 0: wasserstein=1.169169, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.980002, edge=0.000538, neigh=3.866721, align=4.203405, entropy=10.273398,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.965980, edge=0.000479, neigh=3.363313, align=4.974226, entropy=9.450680,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.963866, edge=0.000472, neigh=3.187101, align=5.196345, entropy=9.222711,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.963905, edge=0.000469, neigh=3.060300, align=5.292470, entropy=9.125796,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.964078, edge=0.000467, neigh=3.078174, align=5.347426, entropy=9.070566,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.963814, edge=0.000469, neigh=3.206880, align=5.345540, entropy=9.072426,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.963475, edge=0.000471, neigh=3.344501, align=5.338071, entropy=9.079893,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.962675, edge=0.000471, neigh=3.482587, align=5.331194, entropy=9.086770,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.962029, edge=0.000472, neigh=3.614329, align=5.328095, entropy=9.089672,s=1.000000, s_hat=1.000000
Time for optimization: 23.85s
Test results:
Top-1: 0.539
Top-10: 0.879
Top-30: 0.940
Top-50: 0.958
Top-100: 0.972
MRR: 0.658
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.066s
Time for attribute perturbation: 0.062s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  4.99it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.72it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.48it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.54it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.63it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.63it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.66it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.57it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:20,  4.46it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.49it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:17,  5.05it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:11,  7.71it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.64it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.60it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:13,  6.09it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:14,  5.61it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:15,  5.32it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:15,  5.25it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:15,  4.99it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:14,  5.23it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:15,  4.91it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:16,  4.74it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:15,  4.75it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:15,  4.81it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.83it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.67it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:15,  4.52it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:16,  4.28it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:13,  5.05it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:10,  6.62it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:06<00:11,  5.83it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:06<00:11,  5.51it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:06<00:13,  4.91it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:11,  5.34it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:07<00:11,  5.24it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:07<00:09,  6.26it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:07<00:10,  5.64it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:08<00:11,  5.02it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:08<00:11,  4.87it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:08<00:12,  4.52it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:08<00:11,  4.59it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:08<00:11,  4.59it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:09<00:11,  4.58it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:09<00:11,  4.46it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:09<00:11,  4.27it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:09<00:11,  4.20it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:11,  4.28it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:10<00:11,  4.32it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:10,  4.52it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:09,  4.91it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.53it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.93it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.57it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  3.96it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.56it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.39it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:14,  3.00it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:14,  2.92it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:14,  2.82it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.00it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.01it/s]
Time for cost matrix: 15.94s
Iter 0: wasserstein=1.175446, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.982857, edge=0.000535, neigh=3.988652, align=4.266599, entropy=10.210871,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.968442, edge=0.000474, neigh=3.456529, align=5.024993, entropy=9.400145,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.966187, edge=0.000468, neigh=3.272196, align=5.241509, entropy=9.177504,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.966212, edge=0.000466, neigh=3.095336, align=5.325942, entropy=9.092275,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.966476, edge=0.000467, neigh=3.099948, align=5.377092, entropy=9.040901,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.966280, edge=0.000468, neigh=3.229604, align=5.374962, entropy=9.043003,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.966026, edge=0.000470, neigh=3.376679, align=5.367500, entropy=9.050464,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.965275, edge=0.000471, neigh=3.524089, align=5.360183, entropy=9.057781,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.964700, edge=0.000471, neigh=3.653213, align=5.356635, entropy=9.061309,s=1.000000, s_hat=1.000000
Time for optimization: 23.43s
Test results:
Top-1: 0.588
Top-10: 0.907
Top-30: 0.962
Top-50: 0.977
Top-100: 0.985
MRR: 0.701
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.067s
Time for attribute perturbation: 0.062s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.14it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.15it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.49it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.83it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.67it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:19,  4.70it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.62it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.34it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.33it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.50it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.66it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.78it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.80it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.71it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.44it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.32it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.33it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.45it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.42it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.53it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.39it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.33it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.33it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.44it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.43it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.41it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.42it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.51it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.38it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:15,  4.43it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:15,  4.49it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:07<00:15,  4.52it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:15,  4.41it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:14,  4.45it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:14,  4.58it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:11,  5.63it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:11,  5.35it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:12,  4.92it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:12,  4.68it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:12,  4.70it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:12,  4.59it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:12,  4.55it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:12,  4.54it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:12,  4.45it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:12,  4.42it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:12,  4.35it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:11,  4.46it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:11,  4.39it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:11<00:11,  4.39it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:09,  5.01it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:10,  4.70it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.59it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.47it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.36it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.86it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.93it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:15,  3.04it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:15,  2.91it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:17,  2.54it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:16,  2.62it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:16,  2.49it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:03<00:16,  2.46it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:16,  2.39it/s]Computing product RWR scores:  20%|██        | 10/50 [00:04<00:17,  2.34it/s]
Time for cost matrix: 17.97s
Iter 0: wasserstein=1.169638, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.979147, edge=0.000535, neigh=3.900579, align=4.229176, entropy=10.246667,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.964821, edge=0.000475, neigh=3.414372, align=5.010251, entropy=9.414422,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.962530, edge=0.000469, neigh=3.220521, align=5.229812, entropy=9.189062,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.962898, edge=0.000466, neigh=3.073305, align=5.313209, entropy=9.104968,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.963092, edge=0.000467, neigh=3.082116, align=5.370299, entropy=9.047685,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.962828, edge=0.000468, neigh=3.221580, align=5.369509, entropy=9.048456,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.962491, edge=0.000470, neigh=3.365036, align=5.362661, entropy=9.055303,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.961771, edge=0.000471, neigh=3.506204, align=5.354892, entropy=9.063072,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.961200, edge=0.000472, neigh=3.634143, align=5.350004, entropy=9.067908,s=1.000000, s_hat=1.000000
Time for optimization: 36.17s
Test results:
Top-1: 0.573
Top-10: 0.878
Top-30: 0.937
Top-50: 0.956
Top-100: 0.972
MRR: 0.684
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.076s
Time for attribute perturbation: 0.077s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.36it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.33it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:28,  3.35it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:32,  2.98it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:32,  2.90it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:30,  3.09it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:30,  3.01it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:35,  2.63it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:31,  2.84it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:27,  3.23it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:28,  3.13it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:31,  2.76it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:32,  2.67it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:32,  2.69it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:25,  3.34it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:22,  3.74it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:25,  3.27it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:27,  3.01it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:29,  2.73it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:29,  2.72it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:27,  2.85it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:25,  3.09it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:23,  3.28it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:21,  3.60it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:21,  3.48it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:19,  3.83it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:18,  3.97it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:18,  3.97it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:19,  3.71it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:09<00:19,  3.61it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:09<00:19,  3.57it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:09<00:19,  3.51it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:10<00:16,  4.04it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:10<00:15,  4.21it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:10<00:18,  3.52it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:11<00:19,  3.23it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:11<00:12,  4.77it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:11<00:14,  4.11it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:12<00:22,  2.67it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:13<00:22,  2.57it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:13<00:20,  2.81it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:13<00:19,  2.82it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:14<00:20,  2.68it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:14<00:20,  2.66it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:14<00:17,  2.97it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:14<00:13,  3.71it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:14<00:11,  4.54it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:15<00:12,  4.00it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:15<00:16,  2.99it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:16<00:17,  2.73it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:15,  2.95it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:14,  3.18it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:19,  2.46it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.75it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.28it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:19,  2.35it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:18,  2.38it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:18,  2.36it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:03<00:19,  2.19it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:03<00:23,  1.79it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:04<00:21,  1.88it/s]Computing product RWR scores:  20%|██        | 10/50 [00:04<00:21,  1.82it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:21,  1.86it/s]
Time for cost matrix: 23.95s
Iter 0: wasserstein=1.162462, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.986939, edge=0.000539, neigh=3.414441, align=3.904236, entropy=10.570276,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.973981, edge=0.000485, neigh=3.087075, align=4.746559, entropy=9.678781,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.971896, edge=0.000474, neigh=2.919210, align=5.005765, entropy=9.413985,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.971844, edge=0.000468, neigh=2.865529, align=5.121168, entropy=9.297044,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.971721, edge=0.000467, neigh=2.874621, align=5.198439, entropy=9.219549,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.971146, edge=0.000468, neigh=3.002994, align=5.201436, entropy=9.216530,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.970638, edge=0.000470, neigh=3.138627, align=5.197238, entropy=9.220726,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.969916, edge=0.000470, neigh=3.274723, align=5.190746, entropy=9.227218,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.969300, edge=0.000471, neigh=3.406395, align=5.186831, entropy=9.231066,s=1.000000, s_hat=1.000000
Time for optimization: 34.49s
Test results:
Top-1: 0.460
Top-10: 0.789
Top-30: 0.861
Top-50: 0.891
Top-100: 0.918
MRR: 0.573
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.058s
Time for attribute perturbation: 0.032s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:09, 10.09it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.34it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.25it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:28,  3.33it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:31,  3.00it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:32,  2.79it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:34,  2.62it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:34,  2.60it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:29,  3.02it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:26,  3.32it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:32,  2.66it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:33,  2.59it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:32,  2.61it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:27,  3.10it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:18,  4.52it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:18,  4.28it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:24,  3.27it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:24,  3.28it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:18,  4.21it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:06<00:18,  4.06it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:20,  3.71it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:07<00:20,  3.54it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:21,  3.40it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:21,  3.36it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:21,  3.26it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:08<00:21,  3.33it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:09<00:20,  3.40it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:09<00:14,  4.49it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:09<00:14,  4.49it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:09<00:15,  4.12it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:10<00:15,  4.24it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:10<00:14,  4.47it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:10<00:16,  3.65it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:11<00:20,  3.01it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:11<00:23,  2.51it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:12<00:23,  2.54it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:12<00:24,  2.37it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:13<00:24,  2.34it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:13<00:22,  2.51it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:13<00:18,  2.92it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:13<00:18,  2.90it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:14<00:20,  2.60it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:14<00:19,  2.66it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:15<00:17,  2.95it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:15<00:16,  3.03it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:15<00:17,  2.78it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:16<00:18,  2.62it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:18,  2.55it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:15,  3.13it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.38it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:18,  2.65it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.30it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:18,  2.47it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:17,  2.56it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:17,  2.49it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:18,  2.31it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:03<00:18,  2.33it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:04<00:20,  1.98it/s]Computing product RWR scores:  20%|██        | 10/50 [00:04<00:20,  1.94it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:20,  1.98it/s]
Time for cost matrix: 23.68s
Iter 0: wasserstein=1.166406, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990308, edge=0.000538, neigh=3.413648, align=3.921059, entropy=10.555502,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976639, edge=0.000481, neigh=3.099643, align=4.778353, entropy=9.647385,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973982, edge=0.000471, neigh=2.920116, align=5.055632, entropy=9.363539,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973795, edge=0.000465, neigh=2.828226, align=5.172964, entropy=9.245224,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973652, edge=0.000464, neigh=2.837149, align=5.238969, entropy=9.179014,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973066, edge=0.000466, neigh=2.969389, align=5.241696, entropy=9.176269,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972597, edge=0.000467, neigh=3.092389, align=5.237041, entropy=9.180923,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971741, edge=0.000468, neigh=3.215341, align=5.230514, entropy=9.187450,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971107, edge=0.000469, neigh=3.325725, align=5.228532, entropy=9.189396,s=1.000000, s_hat=1.000000
Time for optimization: 25.36s
Test results:
Top-1: 0.504
Top-10: 0.837
Top-30: 0.901
Top-50: 0.926
Top-100: 0.953
MRR: 0.621
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.063s
Time for attribute perturbation: 0.061s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:13,  7.08it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.34it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:09, 10.31it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:10,  9.00it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:08, 10.48it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:08, 10.86it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:10,  8.52it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:08,  9.96it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:08, 10.15it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:08,  9.88it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:08,  8.90it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:09,  7.94it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:10,  7.57it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:11,  6.68it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:10,  6.97it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:11,  6.57it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:12,  5.86it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.29it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:08,  8.41it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:03<00:07,  9.05it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:08,  7.62it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:09,  6.89it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:09,  6.59it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:10,  5.88it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:11,  5.47it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:11,  5.35it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:11,  5.10it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:11,  4.95it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:11,  4.91it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:11,  5.17it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.78it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:06,  7.61it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:07,  6.58it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:08,  6.37it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:07,  6.46it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:08,  5.91it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.04it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.04it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.22it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.21it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.29it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.45it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.36it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.24it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.12it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.23it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.20it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.55it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.10it/s]
Time for cost matrix: 12.42s
Iter 0: wasserstein=1.176177, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994068, edge=0.000535, neigh=3.595626, align=4.055052, entropy=10.422708,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980045, edge=0.000476, neigh=3.230910, align=4.875546, entropy=9.550726,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977712, edge=0.000468, neigh=3.061188, align=5.129605, entropy=9.289705,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977661, edge=0.000464, neigh=2.933930, align=5.230307, entropy=9.187955,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977716, edge=0.000464, neigh=2.925738, align=5.289533, entropy=9.128459,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977407, edge=0.000466, neigh=3.051903, align=5.286654, entropy=9.131311,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977117, edge=0.000468, neigh=3.188881, align=5.279059, entropy=9.138905,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976425, edge=0.000468, neigh=3.330300, align=5.269702, entropy=9.148262,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975792, edge=0.000469, neigh=3.449197, align=5.265636, entropy=9.152311,s=1.000000, s_hat=1.000000
Time for optimization: 21.40s
Test results:
Top-1: 0.558
Top-10: 0.874
Top-30: 0.943
Top-50: 0.956
Top-100: 0.977
MRR: 0.669
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.065s
Time for attribute perturbation: 0.064s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.72it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.77it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.48it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.51it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.40it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.28it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.20it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.27it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.73it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:18,  4.95it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.89it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.62it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.63it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.65it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.58it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.50it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.58it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.55it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.49it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.45it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.28it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.34it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.32it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.40it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.31it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.34it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.38it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.51it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.56it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:15,  4.66it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:14,  4.62it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:07<00:14,  4.62it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:14,  4.56it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:14,  4.61it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:13,  4.72it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:13,  4.66it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:13,  4.65it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:12,  4.79it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:12,  4.89it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:12,  4.70it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:12,  4.70it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:11,  5.00it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:11,  4.97it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:11,  4.82it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:11,  4.81it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:11,  4.71it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:11,  4.61it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:11,  4.53it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:11,  4.58it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:10,  4.60it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:10,  4.65it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:10,  4.65it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.47it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.49it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.62it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.59it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.18it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.07it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:15,  2.99it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  3.09it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.14it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.17it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.21it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:11,  3.36it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.91it/s]
Time for cost matrix: 17.13s
Iter 0: wasserstein=1.176051, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992822, edge=0.000535, neigh=3.586439, align=4.061748, entropy=10.414962,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978816, edge=0.000476, neigh=3.241566, align=4.878167, entropy=9.547545,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976407, edge=0.000468, neigh=3.068164, align=5.131000, entropy=9.288228,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976405, edge=0.000464, neigh=2.944569, align=5.230672, entropy=9.187574,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976490, edge=0.000464, neigh=2.925498, align=5.292482, entropy=9.125509,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976483, edge=0.000463, neigh=2.920316, align=5.333062, entropy=9.084904,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976029, edge=0.000465, neigh=3.066983, align=5.332139, entropy=9.085825,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975219, edge=0.000466, neigh=3.213738, align=5.325370, entropy=9.092594,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974595, edge=0.000466, neigh=3.332318, align=5.321071, entropy=9.096871,s=1.000000, s_hat=1.000000
Time for optimization: 20.40s
Test results:
Top-1: 0.535
Top-10: 0.860
Top-30: 0.921
Top-50: 0.940
Top-100: 0.963
MRR: 0.651
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.025s
Time for attribute perturbation: 0.046s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:06, 14.95it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:10,  9.14it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:08, 10.71it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:07, 12.62it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:06, 13.45it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.49it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:12,  7.09it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:13,  6.15it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.68it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.32it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  5.85it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:15,  5.33it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:15,  5.03it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:15,  4.88it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:16,  4.69it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:17,  4.38it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:17,  4.24it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:17,  4.26it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:17,  4.27it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:17,  4.23it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:16,  4.33it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:15,  4.38it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:15,  4.36it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:16,  4.17it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:15,  4.33it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:06<00:17,  3.76it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:06<00:16,  3.93it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:06<00:16,  4.00it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:06<00:15,  4.03it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:07<00:15,  4.09it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:07<00:13,  4.43it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:07<00:12,  4.73it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:07<00:09,  6.16it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:07<00:10,  5.26it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:08<00:10,  5.47it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:08<00:07,  7.00it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:08<00:06,  8.46it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:08<00:04, 10.42it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:04, 10.95it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  5.90it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.15it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.17it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.18it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.15it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.33it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.62it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.44it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.31it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  2.97it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.08it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.93it/s]
Time for cost matrix: 13.92s
Iter 0: wasserstein=1.173072, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991549, edge=0.000536, neigh=3.563347, align=4.037777, entropy=10.439032,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977590, edge=0.000477, neigh=3.208022, align=4.864800, entropy=9.560943,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975111, edge=0.000468, neigh=3.010626, align=5.128911, entropy=9.290448,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975186, edge=0.000463, neigh=2.917501, align=5.228950, entropy=9.189366,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975238, edge=0.000463, neigh=2.932645, align=5.292330, entropy=9.125669,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974932, edge=0.000465, neigh=3.064606, align=5.293011, entropy=9.124955,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974614, edge=0.000467, neigh=3.205678, align=5.287709, entropy=9.130255,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973821, edge=0.000467, neigh=3.345259, align=5.280215, entropy=9.137749,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973199, edge=0.000468, neigh=3.468500, align=5.276831, entropy=9.141109,s=1.000000, s_hat=1.000000
Time for optimization: 21.50s
Test results:
Top-1: 0.552
Top-10: 0.864
Top-30: 0.931
Top-50: 0.944
Top-100: 0.962
MRR: 0.662
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.065s
Time for attribute perturbation: 0.083s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:07, 13.90it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.59it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:16,  5.90it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:17,  5.44it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:18,  4.96it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.69it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.70it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:19,  4.69it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.63it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.50it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.52it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:19,  4.44it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.32it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.21it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:20,  4.14it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:20,  4.05it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.26it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.35it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.38it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:18,  4.30it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:18,  4.20it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:18,  4.16it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.27it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.57it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:14,  4.91it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:14,  5.06it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:14,  4.86it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:13,  5.22it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:12,  5.33it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:13,  5.03it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:13,  4.86it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:14,  4.67it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:14,  4.45it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:14,  4.41it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:14,  4.33it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:14,  4.35it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:13,  4.56it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:13,  4.56it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:13,  4.34it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:13,  4.44it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:12,  4.67it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:11,  4.96it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:11,  4.75it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:11,  4.59it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:11,  4.58it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:11,  4.54it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:11,  4.47it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:11,  4.51it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:10,  4.52it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:11,  4.34it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.41it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.55it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.12it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.30it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.91it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.71it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.87it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.45it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:13,  3.19it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.33it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.43it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.61it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.25it/s]
Time for cost matrix: 16.13s
Iter 0: wasserstein=1.172018, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991189, edge=0.000537, neigh=3.554677, align=4.012178, entropy=10.465093,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977428, edge=0.000480, neigh=3.180443, align=4.822387, entropy=9.603307,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975298, edge=0.000472, neigh=2.981962, align=5.073599, entropy=9.345575,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975176, edge=0.000466, neigh=2.906726, align=5.192945, entropy=9.225354,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975045, edge=0.000465, neigh=2.880647, align=5.267225, entropy=9.150772,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974883, edge=0.000464, neigh=2.898215, align=5.316835, entropy=9.101131,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974403, edge=0.000465, neigh=3.056086, align=5.317821, entropy=9.100143,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973593, edge=0.000466, neigh=3.206252, align=5.312838, entropy=9.105126,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972899, edge=0.000466, neigh=3.325598, align=5.309263, entropy=9.108681,s=1.000000, s_hat=1.000000
Time for optimization: 22.51s
Test results:
Top-1: 0.522
Top-10: 0.845
Top-30: 0.916
Top-50: 0.941
Top-100: 0.956
MRR: 0.635
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.056s
Time for attribute perturbation: 0.067s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.17it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.41it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.32it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.33it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.36it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.61it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.82it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.56it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:18,  4.99it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:18,  4.96it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.66it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.51it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.78it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  4.99it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.65it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:16,  5.07it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:11,  7.40it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:08,  9.43it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:05, 13.67it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:03, 18.45it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:03, 22.14it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:02, 23.64it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:02, 21.02it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:04<00:02, 24.61it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:04<00:02, 26.22it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:04<00:01, 28.05it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:04, 11.04it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  9.33it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  8.23it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  8.81it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:04, 10.22it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:03, 10.90it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 11.13it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.32it/s]
Time for cost matrix: 6.87s
Iter 0: wasserstein=1.174900, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992334, edge=0.000536, neigh=3.541504, align=4.034294, entropy=10.442482,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978227, edge=0.000478, neigh=3.204234, align=4.858727, entropy=9.566681,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975838, edge=0.000469, neigh=3.061323, align=5.114245, entropy=9.304815,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975785, edge=0.000465, neigh=2.947899, align=5.219819, entropy=9.198407,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975808, edge=0.000464, neigh=2.934157, align=5.285672, entropy=9.132315,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975446, edge=0.000466, neigh=3.059963, align=5.285076, entropy=9.132890,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975120, edge=0.000468, neigh=3.192923, align=5.278483, entropy=9.139481,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974362, edge=0.000468, neigh=3.327548, align=5.270541, entropy=9.147423,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973738, edge=0.000469, neigh=3.454102, align=5.266830, entropy=9.151081,s=1.000000, s_hat=1.000000
Time for optimization: 11.02s
Test results:
Top-1: 0.533
Top-10: 0.856
Top-30: 0.926
Top-50: 0.942
Top-100: 0.962
MRR: 0.652
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.048s
Time for attribute perturbation: 0.048s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.39it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.48it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.53it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.57it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  8.50it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:06, 13.27it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:05, 17.24it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:04, 20.27it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:03, 22.72it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:02, 26.94it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:02, 30.06it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:01<00:02, 32.54it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:02<00:04, 15.81it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:02<00:05, 10.72it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:06,  8.88it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:07,  7.90it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:03<00:08,  7.05it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:03<00:07,  7.83it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:04<00:04, 11.48it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:04<00:03, 12.68it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 12.39it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04, 10.67it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  8.14it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:05,  8.25it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:06,  7.17it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:06,  6.64it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:05,  7.66it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:05,  6.72it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:05,  6.67it/s]
Time for cost matrix: 6.66s
Iter 0: wasserstein=1.170962, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991360, edge=0.000538, neigh=3.550872, align=4.015091, entropy=10.461504,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977431, edge=0.000479, neigh=3.187200, align=4.831027, entropy=9.594537,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975114, edge=0.000471, neigh=3.022418, align=5.086966, entropy=9.332155,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974844, edge=0.000466, neigh=2.942206, align=5.200120, entropy=9.218104,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974919, edge=0.000466, neigh=2.927180, align=5.265718, entropy=9.152269,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974669, edge=0.000468, neigh=3.035457, align=5.263031, entropy=9.154934,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974209, edge=0.000470, neigh=3.177439, align=5.254803, entropy=9.163161,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973499, edge=0.000470, neigh=3.321774, align=5.246789, entropy=9.171175,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972898, edge=0.000470, neigh=3.451247, align=5.243707, entropy=9.174229,s=1.000000, s_hat=1.000000
Time for optimization: 13.20s
Test results:
Top-1: 0.515
Top-10: 0.850
Top-30: 0.922
Top-50: 0.943
Top-100: 0.963
MRR: 0.631
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.030s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 27.90it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:02, 31.28it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:03, 28.26it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:02, 29.80it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:02, 29.14it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:00<00:02, 29.11it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:00<00:03, 22.94it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:05, 12.03it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:01<00:07,  9.62it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:02<00:08,  8.17it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:02<00:09,  7.31it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:02<00:07,  8.73it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:02<00:05, 10.73it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:05, 11.04it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:03<00:05, 10.13it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:03<00:03, 14.50it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:03<00:02, 18.06it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:03<00:03, 14.70it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04, 11.64it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:03, 11.78it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:04,  9.99it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:05,  8.16it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:05,  8.07it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.27it/s]
Time for cost matrix: 5.52s
Iter 0: wasserstein=1.174004, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991895, edge=0.000537, neigh=3.556459, align=4.036550, entropy=10.440652,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977927, edge=0.000477, neigh=3.181153, align=4.848253, entropy=9.577331,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975507, edge=0.000470, neigh=3.009869, align=5.106933, entropy=9.312156,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975280, edge=0.000465, neigh=2.921281, align=5.214897, entropy=9.203331,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975341, edge=0.000466, neigh=2.912616, align=5.279303, entropy=9.138685,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975008, edge=0.000467, neigh=3.046688, align=5.279972, entropy=9.137993,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974662, edge=0.000469, neigh=3.190038, align=5.274368, entropy=9.143596,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973981, edge=0.000469, neigh=3.333142, align=5.266283, entropy=9.151680,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973275, edge=0.000469, neigh=3.461281, align=5.262677, entropy=9.155265,s=1.000000, s_hat=1.000000
Time for optimization: 17.94s
Test results:
Top-1: 0.528
Top-10: 0.861
Top-30: 0.925
Top-50: 0.944
Top-100: 0.964
MRR: 0.646
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.021s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:25,  3.83it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.76it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.83it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.55it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:13,  6.88it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:11,  8.00it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:10,  8.68it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.51it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:08, 10.58it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:07, 10.77it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:09,  9.08it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:10,  7.86it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:11,  7.07it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:12,  6.18it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:13,  5.77it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:14,  5.38it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:14,  5.08it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:15,  4.87it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:15,  4.82it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:15,  4.84it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:14,  5.13it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:13,  5.14it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:13,  5.14it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:13,  4.95it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:14,  4.71it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:14,  4.47it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:15,  4.32it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:15,  4.24it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:06<00:11,  5.34it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:12,  5.13it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:12,  4.90it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:12,  4.66it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:12,  4.70it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:07<00:12,  4.51it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:07<00:11,  4.79it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:07<00:11,  4.96it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:11,  4.73it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:08<00:11,  4.65it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:08<00:11,  4.51it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:08<00:11,  4.49it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:08<00:10,  4.66it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:08<00:10,  4.59it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:09<00:10,  4.55it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:09<00:10,  4.48it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:09<00:10,  4.38it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:09<00:08,  5.37it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.21it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.18it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.17it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.23it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.00it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  3.06it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.33it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.49it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.59it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.52it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.98it/s]
Time for cost matrix: 15.18s
Iter 0: wasserstein=1.165889, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989790, edge=0.000539, neigh=3.453481, align=3.920814, entropy=10.555430,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976169, edge=0.000482, neigh=3.096459, align=4.770006, entropy=9.655327,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973556, edge=0.000472, neigh=2.926308, align=5.046874, entropy=9.372227,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973253, edge=0.000466, neigh=2.850008, align=5.166828, entropy=9.251363,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973090, edge=0.000465, neigh=2.832736, align=5.241866, entropy=9.176117,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972648, edge=0.000467, neigh=2.961062, align=5.244631, entropy=9.173334,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972106, edge=0.000468, neigh=3.092546, align=5.237109, entropy=9.180855,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971226, edge=0.000468, neigh=3.218725, align=5.230948, entropy=9.187015,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970629, edge=0.000469, neigh=3.331772, align=5.227433, entropy=9.190499,s=1.000000, s_hat=1.000000
Time for optimization: 22.42s
Test results:
Top-1: 0.496
Top-10: 0.844
Top-30: 0.907
Top-50: 0.927
Top-100: 0.953
MRR: 0.617
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.007s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  5.85it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:09, 10.00it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:09, 10.30it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:09,  9.45it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:10,  8.72it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.68it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:08, 10.82it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:08, 10.12it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:07, 10.84it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:08,  9.22it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:08,  9.76it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:08,  9.29it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:08,  9.01it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:09,  8.23it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:09,  8.19it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  7.18it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:11,  6.20it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:12,  5.80it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:12,  5.51it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:11,  5.84it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  7.05it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:09,  6.94it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:08,  7.40it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:09,  6.56it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:09,  6.51it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:09,  6.16it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:09,  6.25it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:09,  6.06it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:08,  6.58it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:09,  6.08it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:08,  6.60it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  7.15it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  7.12it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:08,  6.38it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:09,  5.64it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:09,  5.09it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:09,  5.01it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:09,  4.89it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:10,  4.60it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.88it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.09it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.36it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.64it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.45it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.45it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  3.13it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.27it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.21it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.23it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:11,  3.36it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.00it/s]
Time for cost matrix: 12.79s
Iter 0: wasserstein=1.160006, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990790, edge=0.000543, neigh=3.214199, align=3.733487, entropy=10.741883,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977883, edge=0.000492, neigh=2.973985, align=4.604015, entropy=9.821409,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975318, edge=0.000479, neigh=2.785368, align=4.898741, entropy=9.521248,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974833, edge=0.000469, neigh=2.746763, align=5.040414, entropy=9.377850,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974438, edge=0.000466, neigh=2.765312, align=5.133455, entropy=9.284531,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973797, edge=0.000468, neigh=2.905723, align=5.136952, entropy=9.281013,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973165, edge=0.000469, neigh=3.037506, align=5.131977, entropy=9.285987,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972358, edge=0.000470, neigh=3.165642, align=5.126567, entropy=9.291397,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971788, edge=0.000470, neigh=3.280739, align=5.123384, entropy=9.294518,s=1.000000, s_hat=1.000000
Time for optimization: 23.57s
Test results:
Top-1: 0.387
Top-10: 0.769
Top-30: 0.857
Top-50: 0.880
Top-100: 0.914
MRR: 0.520
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.061s
Time for attribute perturbation: 0.066s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.31it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.48it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:16,  5.87it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.38it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.53it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:12,  7.69it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.78it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  5.86it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:17,  5.02it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:17,  5.13it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  5.14it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.70it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.33it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.31it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:16,  5.19it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.83it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  5.86it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.72it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:13,  5.96it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.65it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:15,  4.98it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:14,  5.37it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:12,  5.90it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:13,  5.58it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:14,  5.08it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:14,  4.80it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:15,  4.66it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:15,  4.62it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:15,  4.57it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:14,  4.61it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:14,  4.61it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:06<00:14,  4.57it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:06<00:15,  4.21it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:15,  4.09it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:14,  4.26it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:07<00:14,  4.38it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:07<00:14,  4.35it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:07<00:12,  4.79it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:12,  4.68it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:08<00:12,  4.73it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:08<00:11,  4.95it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:08<00:11,  5.01it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:08<00:10,  5.05it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:11,  4.87it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:09<00:11,  4.62it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:09<00:11,  4.63it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:09<00:11,  4.59it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:09<00:10,  4.70it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:10,  4.54it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:10<00:10,  4.68it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:09,  4.77it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:09,  4.89it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  2.91it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.03it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.10it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.10it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.04it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  2.97it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:14,  3.00it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.02it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.21it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:10,  3.69it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.96it/s]
Time for cost matrix: 16.07s
Iter 0: wasserstein=1.173656, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996244, edge=0.000538, neigh=3.392278, align=3.914740, entropy=10.562073,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982599, edge=0.000481, neigh=3.098099, align=4.747066, entropy=9.678488,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980219, edge=0.000472, neigh=2.865756, align=5.023341, entropy=9.395877,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980033, edge=0.000466, neigh=2.841362, align=5.144450, entropy=9.273817,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979995, edge=0.000463, neigh=2.824976, align=5.219588, entropy=9.198402,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979863, edge=0.000462, neigh=2.839914, align=5.266420, entropy=9.151545,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979488, edge=0.000463, neigh=2.985335, align=5.264842, entropy=9.153122,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978681, edge=0.000464, neigh=3.121504, align=5.257460, entropy=9.160504,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978092, edge=0.000464, neigh=3.235682, align=5.252363, entropy=9.165584,s=1.000000, s_hat=1.000000
Time for optimization: 20.16s
Test results:
Top-1: 0.492
Top-10: 0.837
Top-30: 0.907
Top-50: 0.928
Top-100: 0.947
MRR: 0.615
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.049s
Time for attribute perturbation: 0.022s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.39it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:25,  3.78it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:25,  3.75it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:25,  3.71it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:24,  3.83it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:24,  3.92it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.07it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:22,  4.13it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.24it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.31it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.47it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.34it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:19,  4.50it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.46it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.56it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.56it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.63it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:17,  4.56it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.49it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.61it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.47it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:17,  4.47it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:15,  5.05it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:15,  5.01it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:15,  4.83it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:15,  4.77it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:15,  4.63it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.57it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.36it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:15,  4.39it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:07<00:15,  4.37it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:07<00:14,  4.61it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:14,  4.54it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:14,  4.47it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:14,  4.57it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:08<00:13,  4.59it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:13,  4.73it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:12,  4.92it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:13,  4.52it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:13,  4.43it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:09<00:13,  4.50it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:12,  4.47it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:12,  4.52it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:13,  4.25it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:10<00:12,  4.35it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:12,  4.34it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:11,  4.51it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:11,  4.41it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:11<00:11,  4.37it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:11<00:11,  4.29it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:11,  4.32it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:10,  4.38it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.47it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:12<00:10,  4.35it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.80it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.01it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.84it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:15,  3.05it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.16it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.15it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.22it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.23it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.39it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.28it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.92it/s]
Time for cost matrix: 17.36s
Iter 0: wasserstein=1.158391, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.986789, edge=0.000543, neigh=3.204257, align=3.733100, entropy=10.742894,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.973640, edge=0.000493, neigh=2.907734, align=4.588737, entropy=9.836775,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.971440, edge=0.000480, neigh=2.743411, align=4.875838, entropy=9.544815,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.970973, edge=0.000471, neigh=2.744798, align=5.009871, entropy=9.408434,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.970933, edge=0.000469, neigh=2.768277, align=5.099397, entropy=9.318588,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.970522, edge=0.000470, neigh=2.897433, align=5.102789, entropy=9.315176,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.970000, edge=0.000471, neigh=3.011018, align=5.098690, entropy=9.319274,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.969146, edge=0.000472, neigh=3.131584, align=5.092729, entropy=9.325235,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.968556, edge=0.000472, neigh=3.247918, align=5.089098, entropy=9.328715,s=1.000000, s_hat=1.000000
Time for optimization: 23.10s
Test results:
Top-1: 0.364
Top-10: 0.749
Top-30: 0.850
Top-50: 0.870
Top-100: 0.908
MRR: 0.488
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.067s
Time for attribute perturbation: 0.075s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.21it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.82it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.55it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.47it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.21it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.17it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.39it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.47it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.25it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.34it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.35it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.37it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:20,  4.34it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.40it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.33it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.36it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.23it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.24it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.35it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.46it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.41it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:17,  4.42it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.45it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.46it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.31it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.23it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.35it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.34it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.37it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:15,  4.39it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:07<00:15,  4.46it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:07<00:14,  4.72it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:14,  4.65it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:14,  4.55it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:14,  4.41it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:08<00:14,  4.29it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:14,  4.21it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:14,  4.23it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:14,  4.29it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:09<00:14,  4.22it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:09<00:13,  4.32it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:13,  4.31it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:13,  4.14it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:10<00:13,  4.23it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:10<00:12,  4.32it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:12,  4.22it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:12,  4.35it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:11<00:11,  4.34it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:11<00:11,  4.42it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:11<00:11,  4.44it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:11,  4.34it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:11,  4.20it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:12<00:10,  4.32it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:12<00:10,  4.28it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.82it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.83it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:15,  2.97it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.18it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.09it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  3.05it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.20it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.33it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.51it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:11,  3.39it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.94it/s]
Time for cost matrix: 17.33s
Iter 0: wasserstein=1.164953, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989759, edge=0.000541, neigh=3.226376, align=3.793779, entropy=10.683622,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976119, edge=0.000487, neigh=2.965395, align=4.636539, entropy=9.789118,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973782, edge=0.000476, neigh=2.824460, align=4.922778, entropy=9.496628,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973461, edge=0.000468, neigh=2.805975, align=5.061327, entropy=9.356931,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973470, edge=0.000467, neigh=2.772319, align=5.145990, entropy=9.271998,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973432, edge=0.000464, neigh=2.815366, align=5.200773, entropy=9.217192,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972820, edge=0.000466, neigh=2.955124, align=5.199883, entropy=9.218081,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971957, edge=0.000466, neigh=3.078110, align=5.193259, entropy=9.224705,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971319, edge=0.000467, neigh=3.195223, align=5.188607, entropy=9.229294,s=1.000000, s_hat=1.000000
Time for optimization: 23.50s
Test results:
Top-1: 0.409
Top-10: 0.765
Top-30: 0.869
Top-50: 0.895
Top-100: 0.913
MRR: 0.533
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.079s
Time for attribute perturbation: 0.056s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.58it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.67it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.39it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.48it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.48it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.35it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.44it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.56it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.49it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.37it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.26it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.38it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.45it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.51it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.52it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.43it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.31it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.54it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:17,  4.61it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.47it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.39it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.39it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.31it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.28it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.43it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.47it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.56it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.62it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.51it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:16,  4.37it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:15,  4.46it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:07<00:15,  4.41it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:15,  4.32it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:13,  4.98it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:11,  5.45it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:11,  5.68it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:11,  5.31it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:12,  4.98it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:12,  4.70it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:12,  4.73it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:09<00:12,  4.59it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:12,  4.55it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:12,  4.51it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:13,  4.14it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:10<00:14,  3.91it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:14,  3.84it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:11,  4.69it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:12,  4.31it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:12,  3.92it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:11<00:13,  3.73it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:12,  3.77it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:10,  4.55it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.36it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:12<00:10,  4.35it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:19,  2.51it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:20,  2.39it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.61it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:19,  2.40it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:18,  2.39it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:18,  2.42it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:19,  2.21it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:03<00:17,  2.45it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:03<00:17,  2.40it/s]Computing product RWR scores:  20%|██        | 10/50 [00:04<00:16,  2.49it/s]Computing product RWR scores:  20%|██        | 10/50 [00:04<00:18,  2.21it/s]
Time for cost matrix: 19.09s
Iter 0: wasserstein=1.164916, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992258, edge=0.000541, neigh=3.258776, align=3.801332, entropy=10.673927,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979003, edge=0.000487, neigh=2.976019, align=4.666938, entropy=9.758449,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976703, edge=0.000474, neigh=2.812930, align=4.955457, entropy=9.464529,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976446, edge=0.000467, neigh=2.781979, align=5.077478, entropy=9.340751,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976309, edge=0.000465, neigh=2.797107, align=5.159971, entropy=9.258015,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975838, edge=0.000467, neigh=2.934919, align=5.161139, entropy=9.256826,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975310, edge=0.000468, neigh=3.069134, align=5.155116, entropy=9.262848,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974436, edge=0.000469, neigh=3.208778, align=5.147574, entropy=9.270390,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973837, edge=0.000469, neigh=3.339850, align=5.143285, entropy=9.274607,s=1.000000, s_hat=1.000000
Time for optimization: 37.21s
Test results:
Top-1: 0.444
Top-10: 0.791
Top-30: 0.877
Top-50: 0.898
Top-100: 0.921
MRR: 0.561
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.063s
Time for attribute perturbation: 0.063s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:31,  3.10it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:35,  2.73it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:38,  2.55it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:39,  2.40it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:35,  2.69it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:30,  3.09it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:30,  3.01it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:36,  2.55it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:32,  2.82it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:24,  3.61it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:24,  3.67it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:23,  3.73it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:24,  3.62it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:24,  3.48it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:24,  3.54it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:23,  3.59it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:18,  4.38it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:18,  4.40it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:20,  4.03it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:20,  3.92it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:21,  3.71it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:21,  3.66it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:21,  3.50it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:22,  3.36it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:27,  2.73it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:30,  2.46it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:28,  2.60it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:26,  2.74it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:28,  2.51it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:09<00:29,  2.40it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:10<00:25,  2.75it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:10<00:21,  3.15it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:10<00:21,  3.16it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:11<00:23,  2.77it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:11<00:24,  2.70it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:11<00:20,  3.05it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:11<00:19,  3.22it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:12<00:23,  2.69it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:12<00:24,  2.48it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:13<00:21,  2.75it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:13<00:19,  3.09it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:13<00:15,  3.63it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:13<00:15,  3.74it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:14<00:14,  3.93it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:14<00:12,  4.34it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:14<00:11,  4.62it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:14<00:12,  4.24it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:14<00:13,  3.91it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:15<00:14,  3.54it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:15<00:14,  3.54it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:15<00:13,  3.56it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:16<00:13,  3.50it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:13,  3.59it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:14,  3.18it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:23,  2.10it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:24,  1.92it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.92it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:21,  2.17it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:22,  2.04it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:03<00:23,  1.84it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:03<00:22,  1.87it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:04<00:22,  1.90it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:04<00:22,  1.84it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:21,  1.83it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:22,  1.77it/s]
Time for cost matrix: 25.59s
Iter 0: wasserstein=1.161959, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990411, edge=0.000539, neigh=3.261885, align=3.793306, entropy=10.682484,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976810, edge=0.000483, neigh=2.969088, align=4.664952, entropy=9.760375,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974211, edge=0.000471, neigh=2.805223, align=4.970910, entropy=9.448275,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974022, edge=0.000464, neigh=2.758883, align=5.103778, entropy=9.314487,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973994, edge=0.000463, neigh=2.739768, align=5.177610, entropy=9.240377,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973553, edge=0.000465, neigh=2.870173, align=5.177153, entropy=9.240812,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972969, edge=0.000467, neigh=3.000370, align=5.170249, entropy=9.247715,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972012, edge=0.000467, neigh=3.129543, align=5.164584, entropy=9.253380,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971447, edge=0.000468, neigh=3.240841, align=5.162244, entropy=9.255680,s=1.000000, s_hat=1.000000
Time for optimization: 34.66s
Test results:
Top-1: 0.437
Top-10: 0.791
Top-30: 0.863
Top-50: 0.895
Top-100: 0.921
MRR: 0.557
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.046s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:28,  3.47it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:38,  2.58it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:42,  2.31it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:38,  2.52it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:33,  2.84it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:31,  3.02it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:29,  3.16it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:23,  3.89it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.23it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.17it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:21,  4.12it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:21,  4.04it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:22,  3.82it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:23,  3.63it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:23,  3.56it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:23,  3.62it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:23,  3.58it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:20,  3.93it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:21,  3.73it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:25,  3.09it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:30,  2.61it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:23,  3.31it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:25,  3.01it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:27,  2.77it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:30,  2.47it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:26,  2.81it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:21,  3.32it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:20,  3.43it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:09<00:21,  3.25it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:09<00:22,  3.01it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:09<00:22,  3.01it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:10<00:22,  2.99it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:10<00:24,  2.69it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:11<00:25,  2.59it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:11<00:22,  2.80it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:11<00:20,  3.01it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:11<00:17,  3.53it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:12<00:16,  3.80it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:12<00:15,  3.99it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:12<00:14,  4.15it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:12<00:14,  3.94it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:13<00:14,  3.91it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:13<00:13,  4.07it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:13<00:14,  3.87it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:13<00:14,  3.66it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:14<00:13,  3.83it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:14<00:13,  4.00it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:14<00:13,  3.86it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:14<00:11,  4.30it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:14<00:09,  4.93it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:15<00:12,  3.82it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:15<00:16,  2.90it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:14,  3.26it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:29,  1.64it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:27,  1.73it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:20,  2.27it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:02<00:23,  1.92it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:24,  1.86it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:03<00:22,  1.92it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:03<00:20,  2.07it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:03<00:18,  2.31it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:04<00:17,  2.30it/s]Computing product RWR scores:  20%|██        | 10/50 [00:04<00:17,  2.25it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:20,  1.94it/s]
Time for cost matrix: 24.23s
Iter 0: wasserstein=1.165723, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992982, edge=0.000541, neigh=3.254975, align=3.783640, entropy=10.691308,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979905, edge=0.000487, neigh=2.982428, align=4.653469, entropy=9.771891,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977685, edge=0.000474, neigh=2.796575, align=4.942520, entropy=9.477465,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977385, edge=0.000466, neigh=2.772599, align=5.069578, entropy=9.348702,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977131, edge=0.000465, neigh=2.786108, align=5.154428, entropy=9.263562,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976610, edge=0.000467, neigh=2.915536, align=5.157452, entropy=9.260513,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976026, edge=0.000468, neigh=3.047645, align=5.153410, entropy=9.264554,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975196, edge=0.000469, neigh=3.180495, align=5.146892, entropy=9.271072,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974604, edge=0.000469, neigh=3.306273, align=5.143012, entropy=9.274905,s=1.000000, s_hat=1.000000
Time for optimization: 23.32s
Test results:
Top-1: 0.431
Top-10: 0.769
Top-30: 0.860
Top-50: 0.886
Top-100: 0.914
MRR: 0.547
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.058s
Time for attribute perturbation: 0.056s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:25,  3.84it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  3.97it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.14it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.27it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.21it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.20it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.19it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:22,  4.16it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.15it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.30it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:17,  5.14it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:16,  5.22it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.14it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:16,  5.18it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:14,  5.86it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:14,  5.66it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:15,  5.30it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:15,  5.23it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:15,  5.13it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:16,  4.89it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:16,  4.72it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.47it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:16,  4.70it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.62it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.54it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.38it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:16,  4.40it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.73it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.62it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:15,  4.57it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:13,  5.16it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:11,  5.77it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:12,  5.39it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:13,  5.01it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:09,  6.48it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:07<00:08,  7.02it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:07<00:09,  6.38it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:10,  5.81it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:10,  5.70it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:08<00:10,  5.44it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:08<00:11,  5.16it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:08<00:11,  4.94it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:11,  4.81it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:11,  4.62it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:09<00:11,  4.63it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:09<00:11,  4.63it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:09<00:10,  4.66it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:10,  4.64it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:10,  4.63it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:10<00:10,  4.61it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:09,  4.73it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:09,  4.82it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.13it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.82it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.79it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:17,  2.68it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:15,  2.85it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:14,  3.07it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:14,  3.03it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.22it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.17it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.12it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:14,  2.74it/s]
Time for cost matrix: 16.40s
Iter 0: wasserstein=1.159388, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990392, edge=0.000544, neigh=3.179803, align=3.711791, entropy=10.762915,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977368, edge=0.000492, neigh=2.963209, align=4.589037, entropy=9.836147,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974722, edge=0.000478, neigh=2.802983, align=4.890393, entropy=9.529396,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974291, edge=0.000470, neigh=2.751389, align=5.028394, entropy=9.389859,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973846, edge=0.000467, neigh=2.775375, align=5.121272, entropy=9.296713,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973228, edge=0.000469, neigh=2.926867, align=5.124132, entropy=9.293833,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972682, edge=0.000470, neigh=3.060976, align=5.119078, entropy=9.298886,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971899, edge=0.000471, neigh=3.190997, align=5.113444, entropy=9.304520,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971319, edge=0.000471, neigh=3.307385, align=5.109680, entropy=9.308153,s=1.000000, s_hat=1.000000
Time for optimization: 23.24s
Test results:
Top-1: 0.372
Top-10: 0.746
Top-30: 0.840
Top-50: 0.868
Top-100: 0.898
MRR: 0.500
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.069s
Time for attribute perturbation: 0.071s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.95it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.62it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.76it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.79it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.59it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.57it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.54it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.41it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.56it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:18,  4.84it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.88it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  5.01it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  6.02it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  5.97it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:15,  5.51it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:15,  5.25it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:13,  5.91it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.75it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:15,  5.26it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:14,  5.30it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:13,  5.90it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:13,  5.61it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:14,  5.15it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:14,  5.09it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:14,  4.94it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:14,  4.88it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:14,  4.85it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  4.74it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:15,  4.61it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:15,  4.41it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:14,  4.60it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:14,  4.60it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:06<00:14,  4.63it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:14,  4.63it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:14,  4.43it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:14,  4.46it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:07<00:13,  4.47it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:07<00:13,  4.39it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:14,  4.28it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:13,  4.39it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:08<00:13,  4.33it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:08<00:13,  4.07it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:13,  4.16it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:12,  4.24it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:12,  4.30it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:09<00:12,  4.14it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:12,  4.18it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:12,  4.18it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:11,  4.23it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:11,  4.31it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:11,  4.28it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:09,  4.82it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.63it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.09it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.13it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.27it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.30it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.21it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.31it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.30it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.38it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.57it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.85it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.20it/s]
Time for cost matrix: 16.66s
Iter 0: wasserstein=1.151246, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.984373, edge=0.000545, neigh=3.125700, align=3.641744, entropy=10.835185,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.971324, edge=0.000496, neigh=2.864527, align=4.505765, entropy=9.919996,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.968621, edge=0.000482, neigh=2.679337, align=4.821258, entropy=9.598287,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.967832, edge=0.000472, neigh=2.699237, align=4.974184, entropy=9.443994,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.967539, edge=0.000469, neigh=2.723243, align=5.079645, entropy=9.338333,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.967114, edge=0.000472, neigh=2.854992, align=5.082665, entropy=9.335300,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.966546, edge=0.000473, neigh=2.984854, align=5.075292, entropy=9.342672,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.965676, edge=0.000473, neigh=3.096003, align=5.068581, entropy=9.349382,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.964994, edge=0.000473, neigh=3.203288, align=5.063692, entropy=9.354091,s=1.000000, s_hat=1.000000
Time for optimization: 15.90s
Test results:
Top-1: 0.289
Top-10: 0.670
Top-30: 0.799
Top-50: 0.832
Top-100: 0.873
MRR: 0.415
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.021s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.59it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.62it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.61it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.62it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:16,  5.59it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:16,  5.62it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:16,  5.58it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:16,  5.57it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.57it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:16,  5.56it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.54it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:11,  7.85it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:07, 11.63it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.94it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:09,  8.11it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:10,  7.43it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:08,  9.05it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:05, 12.76it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:04, 16.39it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:03<00:03, 18.04it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:02, 21.80it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:02, 24.61it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:03<00:02, 26.85it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:04<00:01, 27.19it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:04<00:01, 28.95it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 12.55it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:03, 12.16it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:04, 10.71it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:06,  7.15it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:05,  7.32it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:05,  7.86it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:04,  8.33it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.29it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:05,  7.72it/s]
Time for cost matrix: 6.33s
Iter 0: wasserstein=1.166366, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992743, edge=0.000540, neigh=3.256449, align=3.805291, entropy=10.669602,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979571, edge=0.000485, neigh=3.001669, align=4.666289, entropy=9.759007,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977182, edge=0.000473, neigh=2.840841, align=4.955062, entropy=9.464234,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976811, edge=0.000467, neigh=2.790584, align=5.082095, entropy=9.336194,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976616, edge=0.000466, neigh=2.796166, align=5.163581, entropy=9.254411,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976077, edge=0.000467, neigh=2.927178, align=5.162471, entropy=9.255495,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975587, edge=0.000469, neigh=3.062151, align=5.157095, entropy=9.260869,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974813, edge=0.000469, neigh=3.195770, align=5.149849, entropy=9.268115,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974186, edge=0.000470, neigh=3.324400, align=5.145505, entropy=9.272398,s=1.000000, s_hat=1.000000
Time for optimization: 8.58s
Test results:
Top-1: 0.451
Top-10: 0.779
Top-30: 0.850
Top-50: 0.877
Top-100: 0.908
MRR: 0.563
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.006s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 24.45it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 25.91it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:04, 19.76it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:06, 14.61it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:04, 17.60it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:03, 21.62it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:03, 24.67it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:02, 25.42it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:01<00:02, 25.35it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:01<00:02, 26.41it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:01<00:02, 27.00it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:01<00:02, 27.73it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:01<00:02, 26.86it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:01<00:02, 26.11it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:02<00:02, 23.64it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:02<00:01, 24.78it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:01, 23.57it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04, 10.50it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:04, 10.70it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:04, 10.38it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:04, 10.11it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.58it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.78it/s]
Time for cost matrix: 4.21s
Iter 0: wasserstein=1.169001, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997276, edge=0.000542, neigh=3.187556, align=3.740120, entropy=10.735416,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984082, edge=0.000487, neigh=2.946402, align=4.603375, entropy=9.822119,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981666, edge=0.000475, neigh=2.738448, align=4.903933, entropy=9.515620,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981186, edge=0.000467, neigh=2.746930, align=5.034113, entropy=9.384218,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981032, edge=0.000465, neigh=2.733863, align=5.120363, entropy=9.297632,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980841, edge=0.000463, neigh=2.751794, align=5.174458, entropy=9.243507,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980275, edge=0.000464, neigh=2.887304, align=5.177489, entropy=9.240475,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979459, edge=0.000465, neigh=3.017541, align=5.172336, entropy=9.245628,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978823, edge=0.000465, neigh=3.127725, align=5.168720, entropy=9.249209,s=1.000000, s_hat=1.000000
Time for optimization: 11.22s
Test results:
Top-1: 0.421
Top-10: 0.772
Top-30: 0.873
Top-50: 0.897
Top-100: 0.928
MRR: 0.544
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.027s
Time for attribute perturbation: 0.005s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 24.68it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 25.34it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 26.89it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:04, 20.67it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:04, 18.46it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:03, 23.23it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:03, 21.32it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:03, 19.90it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:03, 21.50it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:02, 23.40it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:01<00:05, 11.50it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:02<00:07,  8.65it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:02<00:08,  6.90it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:03<00:09,  6.03it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:10,  5.66it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:03<00:10,  5.44it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:03<00:10,  5.27it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:04<00:11,  4.92it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:04<00:11,  4.74it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:04<00:11,  4.70it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:04<00:09,  5.47it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:10,  5.10it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:05<00:10,  4.97it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:05<00:10,  4.82it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:05<00:10,  4.69it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:10,  4.55it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.36it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.88it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.03it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.31it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.22it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.24it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  3.14it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.15it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.56it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.57it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.22it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.97it/s]
Time for cost matrix: 11.28s
Iter 0: wasserstein=1.173490, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997494, edge=0.000538, neigh=3.284979, align=3.847604, entropy=10.628507,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983611, edge=0.000480, neigh=3.067491, align=4.702121, entropy=9.723264,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981477, edge=0.000470, neigh=2.873073, align=4.982636, entropy=9.436595,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981354, edge=0.000465, neigh=2.786102, align=5.110698, entropy=9.307562,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981331, edge=0.000464, neigh=2.770555, align=5.188703, entropy=9.229286,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981251, edge=0.000462, neigh=2.766036, align=5.238068, entropy=9.179898,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980656, edge=0.000463, neigh=2.905197, align=5.239042, entropy=9.178922,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979845, edge=0.000464, neigh=3.037036, align=5.232613, entropy=9.185351,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979241, edge=0.000464, neigh=3.148625, align=5.228577, entropy=9.189373,s=1.000000, s_hat=1.000000
Time for optimization: 23.19s
Test results:
Top-1: 0.491
Top-10: 0.812
Top-30: 0.889
Top-50: 0.909
Top-100: 0.930
MRR: 0.606
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.066s
Time for attribute perturbation: 0.066s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.47it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.49it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.41it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:24,  3.97it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:25,  3.80it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  4.01it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.35it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.30it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.52it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.37it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.47it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.48it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.55it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.61it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.65it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.59it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:16,  5.04it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  5.08it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:16,  4.96it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.58it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.58it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:16,  4.63it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:16,  4.55it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.56it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.59it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.60it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:16,  4.54it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.51it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.65it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:14,  4.84it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:13,  4.95it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:07<00:14,  4.76it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:13,  4.83it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:13,  4.85it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:13,  4.84it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:13,  4.73it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:13,  4.59it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:13,  4.75it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:12,  4.71it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:13,  4.59it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:13,  4.41it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:13,  4.41it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:12,  4.45it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:12,  4.33it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:12,  4.37it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:12,  4.49it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:11,  4.43it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:11,  4.34it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:11,  4.40it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:11<00:11,  4.47it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:11,  4.38it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:11,  4.35it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.39it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.45it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.13it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.06it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.80it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:15,  2.99it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.39it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.31it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.43it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.23it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.05it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.11it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:14,  2.85it/s]
Time for cost matrix: 17.33s
Iter 0: wasserstein=1.157455, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989666, edge=0.000544, neigh=3.079480, align=3.641910, entropy=10.834807,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976443, edge=0.000494, neigh=2.851798, align=4.509099, entropy=9.916365,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973843, edge=0.000479, neigh=2.680296, align=4.818083, entropy=9.601351,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973326, edge=0.000470, neigh=2.683410, align=4.963235, entropy=9.454964,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973074, edge=0.000467, neigh=2.699455, align=5.064574, entropy=9.353406,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972607, edge=0.000470, neigh=2.843187, align=5.068531, entropy=9.349434,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972032, edge=0.000471, neigh=2.958431, align=5.061945, entropy=9.356019,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971275, edge=0.000472, neigh=3.072516, align=5.055392, entropy=9.362572,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970553, edge=0.000472, neigh=3.185125, align=5.050098, entropy=9.367730,s=1.000000, s_hat=1.000000
Time for optimization: 22.99s
Test results:
Top-1: 0.313
Top-10: 0.713
Top-30: 0.816
Top-50: 0.844
Top-100: 0.880
MRR: 0.443
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.067s
Time for attribute perturbation: 0.081s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.81it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.17it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.61it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.57it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.71it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.69it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.65it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.50it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:20,  4.45it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.36it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.12it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:21,  4.06it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:21,  4.11it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.66it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:14,  5.62it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:15,  5.21it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  4.98it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:16,  4.93it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:16,  4.75it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.58it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.35it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.17it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.32it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.45it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.44it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.58it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.57it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.58it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:15,  4.55it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:15,  4.48it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:15,  4.47it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:14,  4.52it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:14,  4.47it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:14,  4.48it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:15,  4.23it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:14,  4.25it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:14,  4.31it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:12,  4.88it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:12,  5.00it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:11,  4.95it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:12,  4.63it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:12,  4.47it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:12,  4.60it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:11,  4.73it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:11,  4.67it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:11,  4.54it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:11,  4.58it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:11,  4.60it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:10,  4.63it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:11,  4.36it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:10,  4.38it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.48it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.48it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.37it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.90it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.07it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:15,  3.00it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:15,  2.91it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:14,  2.95it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:14,  2.95it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.05it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.01it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.02it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:14,  2.74it/s]
Time for cost matrix: 17.46s
Iter 0: wasserstein=1.165398, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993573, edge=0.000543, neigh=3.190420, align=3.752171, entropy=10.723395,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980317, edge=0.000488, neigh=2.966767, align=4.615621, entropy=9.809704,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978102, edge=0.000476, neigh=2.762745, align=4.911319, entropy=9.508585,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977881, edge=0.000468, neigh=2.750249, align=5.039022, entropy=9.379284,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977723, edge=0.000465, neigh=2.745013, align=5.127898, entropy=9.290093,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977198, edge=0.000467, neigh=2.876500, align=5.128462, entropy=9.289503,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976698, edge=0.000469, neigh=3.012717, align=5.121679, entropy=9.296285,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975886, edge=0.000469, neigh=3.142598, align=5.114330, entropy=9.303633,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975309, edge=0.000470, neigh=3.264715, align=5.110932, entropy=9.306964,s=1.000000, s_hat=1.000000
Time for optimization: 22.71s
Test results:
Top-1: 0.426
Top-10: 0.766
Top-30: 0.845
Top-50: 0.873
Top-100: 0.905
MRR: 0.541
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.051s
Time for attribute perturbation: 0.059s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:25,  3.83it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:26,  3.77it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:24,  3.95it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.22it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.42it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.52it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.73it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.62it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:19,  4.62it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.42it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.55it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.31it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.40it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.47it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.45it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.38it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.40it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.24it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.28it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.38it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.43it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.58it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:16,  4.58it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.65it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.47it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:14,  5.21it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:13,  5.33it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:14,  5.00it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:14,  4.96it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:14,  4.90it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:14,  4.80it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:07<00:14,  4.75it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:14,  4.56it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:14,  4.62it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:14,  4.47it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:14,  4.45it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:14,  4.31it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:12,  4.88it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:11,  5.21it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:11,  5.08it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:12,  4.86it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:12,  4.66it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:12,  4.72it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:12,  4.64it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:12,  4.55it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:11,  4.52it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:11,  4.60it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:11,  4.66it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:10,  4.66it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:10,  4.62it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:10,  4.54it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:10,  4.44it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:09,  4.92it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.53it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.24it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.23it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.02it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.11it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.21it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.31it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.27it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.02it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.10it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.14it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.90it/s]
Time for cost matrix: 16.93s
Iter 0: wasserstein=1.166503, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994573, edge=0.000541, neigh=3.180414, align=3.754108, entropy=10.721145,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981446, edge=0.000487, neigh=2.933211, align=4.612509, entropy=9.812770,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979212, edge=0.000475, neigh=2.748766, align=4.907498, entropy=9.511875,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978895, edge=0.000467, neigh=2.744788, align=5.035992, entropy=9.382258,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978773, edge=0.000465, neigh=2.743098, align=5.122057, entropy=9.295931,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978265, edge=0.000467, neigh=2.862778, align=5.121945, entropy=9.296020,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977743, edge=0.000469, neigh=2.993747, align=5.116539, entropy=9.301425,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976952, edge=0.000470, neigh=3.124549, align=5.110263, entropy=9.307701,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976315, edge=0.000470, neigh=3.244363, align=5.106810, entropy=9.311096,s=1.000000, s_hat=1.000000
Time for optimization: 23.32s
Test results:
Top-1: 0.415
Top-10: 0.751
Top-30: 0.836
Top-50: 0.861
Top-100: 0.897
MRR: 0.532
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.051s
Time for attribute perturbation: 0.065s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.38it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.86it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  5.06it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.65it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.62it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.57it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.37it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.40it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.57it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.70it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.77it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.54it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.50it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.35it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:20,  4.16it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:20,  4.20it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.29it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.21it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:19,  4.19it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:19,  4.00it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.17it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:18,  4.21it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.27it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.30it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.43it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.35it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:17,  4.24it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:17,  4.20it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.28it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:16,  4.34it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:07<00:15,  4.49it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:07<00:15,  4.47it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:14,  4.50it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:14,  4.44it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:12,  5.05it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:08<00:12,  5.16it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:12,  5.15it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:12,  4.94it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:13,  4.69it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:13,  4.60it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:09<00:12,  4.70it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:12,  4.52it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:12,  4.44it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:12,  4.47it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:10<00:12,  4.23it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:12,  4.18it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:12,  4.23it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:11,  4.38it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:11<00:11,  4.42it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:11<00:11,  4.44it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:11,  4.44it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:10,  4.52it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:09,  4.97it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.43it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.14it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.22it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.81it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.25it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.27it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.21it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.18it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.28it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.57it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.69it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.13it/s]
Time for cost matrix: 17.03s
Iter 0: wasserstein=1.161565, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992832, edge=0.000544, neigh=3.182992, align=3.706182, entropy=10.768891,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979630, edge=0.000491, neigh=2.921576, align=4.567511, entropy=9.857781,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977200, edge=0.000477, neigh=2.731029, align=4.876209, entropy=9.543051,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976950, edge=0.000468, neigh=2.742445, align=5.010691, entropy=9.407583,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976917, edge=0.000466, neigh=2.740429, align=5.098897, entropy=9.319093,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976424, edge=0.000468, neigh=2.852496, align=5.101505, entropy=9.316460,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975885, edge=0.000470, neigh=2.981421, align=5.094859, entropy=9.323105,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974993, edge=0.000470, neigh=3.111514, align=5.088622, entropy=9.329341,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974436, edge=0.000470, neigh=3.225034, align=5.085969, entropy=9.331910,s=1.000000, s_hat=1.000000
Time for optimization: 22.87s
Test results:
Top-1: 0.366
Top-10: 0.736
Top-30: 0.831
Top-50: 0.864
Top-100: 0.902
MRR: 0.488
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.053s
Time for attribute perturbation: 0.016s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.80it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.21it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.13it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:16,  5.67it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:16,  5.58it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:18,  5.06it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:18,  4.92it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:18,  4.94it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:19,  4.57it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.58it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.88it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.23it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.24it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.62it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:15,  5.58it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:16,  5.18it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  4.90it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:16,  4.77it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:17,  4.50it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.41it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:19,  4.08it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:18,  4.10it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:18,  4.16it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:18,  4.11it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:17,  4.18it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:17,  4.13it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:17,  4.19it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.33it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:14,  4.69it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:14,  4.67it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:15,  4.42it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:15,  4.45it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:15,  4.39it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:15,  4.27it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:14,  4.41it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:14,  4.50it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:13,  4.55it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:13,  4.51it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:12,  4.72it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:13,  4.40it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:12,  4.46it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:12,  4.64it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:12,  4.59it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:11,  4.59it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:11,  4.67it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:11,  4.63it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:11,  4.62it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:11,  4.57it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:10,  4.88it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:09,  4.91it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:09,  4.86it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:09,  4.74it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.57it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.56it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.42it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.39it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.58it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.36it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  3.13it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.32it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.55it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.33it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.30it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.05it/s]
Time for cost matrix: 16.78s
Iter 0: wasserstein=1.162605, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994305, edge=0.000543, neigh=3.152905, align=3.690815, entropy=10.784236,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981247, edge=0.000491, neigh=2.909687, align=4.564364, entropy=9.860987,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978408, edge=0.000476, neigh=2.722648, align=4.875306, entropy=9.543975,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977989, edge=0.000467, neigh=2.703272, align=5.020242, entropy=9.397966,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977828, edge=0.000464, neigh=2.720940, align=5.113316, entropy=9.304667,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977248, edge=0.000467, neigh=2.849593, align=5.113751, entropy=9.304214,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976680, edge=0.000468, neigh=2.981443, align=5.108474, entropy=9.309490,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975836, edge=0.000469, neigh=3.113551, align=5.102345, entropy=9.315619,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975265, edge=0.000469, neigh=3.220881, align=5.100284, entropy=9.317628,s=1.000000, s_hat=1.000000
Time for optimization: 22.66s
Test results:
Top-1: 0.380
Top-10: 0.744
Top-30: 0.847
Top-50: 0.870
Top-100: 0.908
MRR: 0.507
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.054s
Time for attribute perturbation: 0.060s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.68it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  4.98it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  4.89it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.89it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:19,  4.87it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:19,  4.87it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.66it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:17,  5.31it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.90it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  9.35it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:10,  8.07it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.16it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.17it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.69it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:13,  5.95it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  5.87it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.75it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:14,  5.55it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:15,  5.01it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:15,  4.82it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:16,  4.64it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:16,  4.60it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:15,  4.72it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:15,  4.71it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.75it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:14,  4.81it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:14,  4.90it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:14,  4.67it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:14,  4.64it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:14,  4.48it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:06<00:14,  4.41it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:06<00:14,  4.52it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:06<00:13,  4.58it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:13,  4.60it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:07<00:13,  4.62it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:07<00:13,  4.57it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:07<00:12,  4.62it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:07<00:12,  4.62it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:08<00:12,  4.52it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:08<00:13,  4.31it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:08<00:13,  4.22it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:08<00:13,  4.23it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:12,  4.28it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:09<00:11,  4.50it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:09<00:11,  4.52it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:09<00:11,  4.38it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:09<00:11,  4.33it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:11,  4.39it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:10<00:10,  4.37it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:11,  4.26it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:09,  4.86it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.48it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.16it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.46it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.32it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.21it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.25it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.23it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.12it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.34it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.26it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.98it/s]
Time for cost matrix: 16.08s
Iter 0: wasserstein=1.158147, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989691, edge=0.000544, neigh=3.118266, align=3.664170, entropy=10.812010,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976520, edge=0.000495, neigh=2.901377, align=4.523358, entropy=9.902060,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974211, edge=0.000481, neigh=2.727085, align=4.824547, entropy=9.595196,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973812, edge=0.000473, neigh=2.709663, align=4.963992, entropy=9.454285,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973566, edge=0.000469, neigh=2.723244, align=5.063207, entropy=9.354780,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973231, edge=0.000471, neigh=2.841526, align=5.066610, entropy=9.351355,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972719, edge=0.000472, neigh=2.952213, align=5.059466, entropy=9.358498,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971824, edge=0.000473, neigh=3.076788, align=5.053959, entropy=9.364005,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971215, edge=0.000473, neigh=3.185202, align=5.051683, entropy=9.366124,s=1.000000, s_hat=1.000000
Time for optimization: 23.10s
Test results:
Top-1: 0.312
Top-10: 0.712
Top-30: 0.823
Top-50: 0.856
Top-100: 0.899
MRR: 0.444
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.081s
Time for attribute perturbation: 0.069s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.47it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.49it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.31it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.28it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.30it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.11it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.26it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.34it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:21,  4.28it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.36it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.29it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:20,  4.38it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.44it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.48it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.49it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.43it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:17,  4.63it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.55it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:17,  4.59it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.46it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:18,  4.37it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.52it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.40it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.36it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.41it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.56it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:15,  4.58it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.46it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.34it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:15,  4.40it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:07<00:15,  4.38it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:07<00:15,  4.43it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:14,  4.59it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:13,  4.87it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:13,  4.79it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:08<00:13,  4.74it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:13,  4.65it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:13,  4.53it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:13,  4.57it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:13,  4.48it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:09<00:13,  4.45it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:10,  5.50it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:10,  5.30it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:09,  5.91it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:09,  5.53it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:09,  5.46it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:09,  5.19it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:09,  5.17it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:10,  4.71it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:10,  4.55it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.58it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.53it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.07it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.80it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.09it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.19it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.17it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  2.99it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.13it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.23it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.12it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.10it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:14,  2.81it/s]
Time for cost matrix: 17.11s
Iter 0: wasserstein=1.165808, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995235, edge=0.000540, neigh=3.194344, align=3.748701, entropy=10.728101,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981540, edge=0.000484, neigh=2.946834, align=4.630798, entropy=9.794776,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979072, edge=0.000471, neigh=2.778286, align=4.938288, entropy=9.481289,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978789, edge=0.000465, neigh=2.733491, align=5.075372, entropy=9.342980,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978628, edge=0.000464, neigh=2.731107, align=5.154540, entropy=9.263458,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978181, edge=0.000466, neigh=2.866795, align=5.156015, entropy=9.261951,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977608, edge=0.000467, neigh=2.992796, align=5.150082, entropy=9.267882,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976856, edge=0.000468, neigh=3.120666, align=5.142867, entropy=9.275097,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976265, edge=0.000468, neigh=3.228280, align=5.138914, entropy=9.279017,s=1.000000, s_hat=1.000000
Time for optimization: 24.42s
Test results:
Top-1: 0.430
Top-10: 0.777
Top-30: 0.859
Top-50: 0.883
Top-100: 0.917
MRR: 0.551
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.054s
Time for attribute perturbation: 0.095s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:30,  3.23it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:31,  3.12it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:30,  3.16it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:29,  3.24it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:29,  3.27it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:26,  3.52it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:26,  3.53it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:26,  3.52it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:27,  3.37it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:27,  3.26it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:27,  3.25it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:26,  3.36it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:25,  3.45it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:25,  3.41it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:23,  3.68it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:23,  3.65it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:22,  3.73it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:23,  3.53it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:24,  3.33it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:25,  3.17it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:25,  3.06it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:26,  2.98it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:24,  3.14it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:18,  4.04it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:07<00:16,  4.60it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:16,  4.49it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:07<00:18,  3.99it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:17,  4.10it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:08<00:17,  3.90it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:08<00:18,  3.78it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:08<00:16,  4.07it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:09<00:16,  3.96it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:09<00:16,  3.89it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:09<00:16,  3.83it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:10<00:17,  3.60it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:10<00:21,  2.94it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:10<00:21,  2.87it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:11<00:21,  2.88it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:11<00:18,  3.24it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:11<00:18,  3.15it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:12<00:16,  3.59it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:12<00:19,  2.98it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:12<00:17,  3.23it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:13<00:20,  2.69it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:13<00:22,  2.37it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:14<00:20,  2.59it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:14<00:20,  2.51it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:14<00:20,  2.43it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:15<00:13,  3.72it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:15<00:13,  3.63it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:15<00:14,  3.15it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:14,  3.24it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.40it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:24,  2.00it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:24,  1.91it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:19,  2.35it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:22,  2.02it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:03<00:24,  1.80it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:03<00:23,  1.87it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:04<00:22,  1.89it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:04<00:21,  1.89it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:20,  1.97it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:22,  1.80it/s]
Time for cost matrix: 24.44s
Iter 0: wasserstein=1.173541, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998177, edge=0.000536, neigh=3.277237, align=3.842704, entropy=10.633421,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984400, edge=0.000480, neigh=3.041333, align=4.703273, entropy=9.722114,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982329, edge=0.000469, neigh=2.874247, align=4.987387, entropy=9.431805,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982195, edge=0.000463, neigh=2.775988, align=5.112251, entropy=9.306031,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982197, edge=0.000463, neigh=2.763346, align=5.184940, entropy=9.233051,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982136, edge=0.000462, neigh=2.766167, align=5.225775, entropy=9.192191,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.981556, edge=0.000463, neigh=2.902964, align=5.224666, entropy=9.193298,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.980659, edge=0.000464, neigh=3.034027, align=5.217808, entropy=9.200156,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980061, edge=0.000464, neigh=3.141949, align=5.214878, entropy=9.203060,s=1.000000, s_hat=1.000000
Time for optimization: 36.90s
Test results:
Top-1: 0.476
Top-10: 0.804
Top-30: 0.891
Top-50: 0.915
Top-100: 0.936
MRR: 0.590
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.092s
Time for attribute perturbation: 0.063s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:06, 15.96it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  7.27it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  8.33it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:09,  9.62it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:09,  9.90it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:08, 10.19it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:07, 11.00it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:06, 12.61it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:07, 10.35it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:06, 12.19it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:06, 12.45it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:07, 10.61it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:11,  6.28it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:11,  6.50it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:12,  5.86it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:14,  4.92it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:12,  5.52it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:10,  6.64it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:07,  8.54it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:10,  6.15it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:11,  5.29it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:12,  4.98it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:13,  4.40it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:14,  4.10it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:15,  3.76it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:13,  4.15it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:09,  6.07it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:06,  8.30it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:05,  9.69it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:04, 10.45it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.50it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  4.06it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.17it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.97it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.45it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:09,  4.67it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.28it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  3.99it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:10,  4.14it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:08,  4.76it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:07,  5.18it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.73it/s]
Time for cost matrix: 11.06s
Iter 0: wasserstein=1.155557, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990316, edge=0.000547, neigh=3.072040, align=3.599673, entropy=10.877090,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977015, edge=0.000497, neigh=2.823461, align=4.463708, entropy=9.961489,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974558, edge=0.000481, neigh=2.620126, align=4.781342, entropy=9.639012,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973951, edge=0.000471, neigh=2.647326, align=4.928113, entropy=9.490179,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973780, edge=0.000468, neigh=2.671133, align=5.028286, entropy=9.389699,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973313, edge=0.000470, neigh=2.786753, align=5.029803, entropy=9.388162,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972671, edge=0.000471, neigh=2.908366, align=5.022465, entropy=9.395499,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971859, edge=0.000472, neigh=3.020283, align=5.015780, entropy=9.402184,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971252, edge=0.000472, neigh=3.130222, align=5.012846, entropy=9.404970,s=1.000000, s_hat=1.000000
Time for optimization: 21.53s
Test results:
Top-1: 0.280
Top-10: 0.699
Top-30: 0.802
Top-50: 0.836
Top-100: 0.877
MRR: 0.414
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.026s
Time for attribute perturbation: 0.005s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.70it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:26,  3.68it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.75it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.95it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:10,  9.24it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.12it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.52it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:21,  4.19it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.06it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.62it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:22,  3.82it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:24,  3.46it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:26,  3.20it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:26,  3.18it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:24,  3.37it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:21,  3.76it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:20,  3.89it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:17,  4.58it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.05it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:21,  3.57it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:06<00:20,  3.66it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:18,  3.95it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:19,  3.79it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.59it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.47it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:07<00:15,  4.60it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:07<00:14,  4.61it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:07<00:13,  4.93it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:12,  5.17it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:11,  5.85it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:08<00:14,  4.47it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:08<00:19,  3.22it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:09<00:22,  2.82it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:09<00:23,  2.69it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:09<00:23,  2.58it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:10<00:23,  2.53it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:10<00:20,  2.88it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:10<00:20,  2.84it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:11<00:19,  2.90it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:11<00:19,  2.87it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:11<00:19,  2.89it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:12<00:18,  2.91it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:12<00:17,  2.98it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:12<00:14,  3.66it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:12<00:13,  3.79it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:13<00:14,  3.53it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:13<00:15,  3.14it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:14<00:17,  2.76it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:14<00:16,  2.84it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:14<00:13,  3.60it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:22,  2.14it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:21,  2.23it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  1.99it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:22,  2.05it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:19,  2.28it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:19,  2.26it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:03<00:17,  2.51it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:03<00:13,  3.03it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:03<00:11,  3.46it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.20it/s]Computing product RWR scores:  20%|██        | 10/50 [00:04<00:16,  2.38it/s]
Time for cost matrix: 21.00s
Iter 0: wasserstein=1.168435, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996258, edge=0.000542, neigh=3.121256, align=3.712052, entropy=10.765365,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982491, edge=0.000487, neigh=2.926221, align=4.574096, entropy=9.851572,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980333, edge=0.000475, neigh=2.753657, align=4.861536, entropy=9.558638,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980084, edge=0.000468, neigh=2.712460, align=5.005629, entropy=9.412839,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979930, edge=0.000465, neigh=2.710145, align=5.095353, entropy=9.322667,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979828, edge=0.000462, neigh=2.724248, align=5.159337, entropy=9.258630,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979248, edge=0.000464, neigh=2.855842, align=5.159862, entropy=9.258102,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978405, edge=0.000465, neigh=2.969136, align=5.154044, entropy=9.263920,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977802, edge=0.000465, neigh=3.078401, align=5.150000, entropy=9.267930,s=1.000000, s_hat=1.000000
Time for optimization: 22.92s
Test results:
Top-1: 0.404
Top-10: 0.782
Top-30: 0.877
Top-50: 0.907
Top-100: 0.932
MRR: 0.530
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.078s
Time for attribute perturbation: 0.052s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.24it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  4.93it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.67it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.40it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.40it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:19,  4.76it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.67it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:18,  4.94it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:18,  4.90it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:18,  4.80it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.67it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:16,  5.27it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:17,  5.01it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:18,  4.74it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.54it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.42it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.31it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.46it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.31it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.50it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.59it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.58it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:17,  4.44it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.45it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.47it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.58it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.58it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.54it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.56it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:15,  4.56it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:14,  4.88it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:14,  4.73it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:14,  4.61it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:14,  4.58it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:13,  4.73it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:14,  4.46it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:14,  4.25it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:13,  4.47it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:13,  4.53it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:13,  4.56it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:12,  4.62it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:12,  4.62it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:10,  5.37it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:10,  5.30it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:11,  4.93it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:11,  4.66it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:11,  4.59it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:10,  4.83it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:10,  4.86it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:10,  4.68it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:10,  4.61it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:10,  4.53it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.30it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.52it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.62it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.45it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.56it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.32it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.42it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.33it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.54it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.79it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.41it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.29it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.05it/s]
Time for cost matrix: 17.07s
Iter 0: wasserstein=1.162142, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992862, edge=0.000543, neigh=3.089322, align=3.662902, entropy=10.815115,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979043, edge=0.000489, neigh=2.873845, align=4.529800, entropy=9.895625,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976744, edge=0.000476, neigh=2.716789, align=4.839007, entropy=9.580884,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976398, edge=0.000467, neigh=2.707900, align=4.983900, entropy=9.434495,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976166, edge=0.000471, neigh=2.783565, align=4.992847, entropy=9.425156,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975845, edge=0.000474, neigh=2.908337, align=4.983389, entropy=9.434578,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975414, edge=0.000475, neigh=3.044073, align=4.975191, entropy=9.442773,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974537, edge=0.000475, neigh=3.172042, align=4.969147, entropy=9.448817,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973854, edge=0.000476, neigh=3.285421, align=4.966201, entropy=9.451736,s=1.000000, s_hat=1.000000
Time for optimization: 22.26s
Test results:
Top-1: 0.353
Top-10: 0.728
Top-30: 0.829
Top-50: 0.856
Top-100: 0.880
MRR: 0.478
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.072s
Time for attribute perturbation: 0.057s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.08it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.21it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:22,  4.31it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.49it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.47it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.63it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.72it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.77it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.79it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.66it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:17,  5.22it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  4.94it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:17,  4.94it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:18,  4.67it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:17,  4.74it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:17,  4.93it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:16,  4.92it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:17,  4.73it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:16,  4.82it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.65it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.57it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.40it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:17,  4.46it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:14,  5.24it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:14,  5.31it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:14,  4.99it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.64it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.58it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.56it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:15,  4.60it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:12,  5.37it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:12,  5.49it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:12,  5.20it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:13,  4.88it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:12,  5.11it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:11,  5.43it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:11,  5.53it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:07<00:10,  5.85it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:07<00:10,  5.56it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:11,  5.20it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:12,  4.90it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:08<00:11,  4.93it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:08<00:12,  4.45it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:12,  4.36it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:12,  4.44it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:10,  5.28it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:09<00:09,  5.56it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:09<00:09,  5.42it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:10,  4.96it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:10,  4.77it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:10,  4.64it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:10<00:10,  4.60it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:10,  4.55it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:09,  4.74it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.35it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.44it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.65it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.45it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.14it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  3.06it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.19it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.13it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.08it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.15it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.92it/s]
Time for cost matrix: 16.51s
Iter 0: wasserstein=1.173555, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.999311, edge=0.000538, neigh=3.210865, align=3.788488, entropy=10.688596,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.985613, edge=0.000482, neigh=3.014762, align=4.655859, entropy=9.769717,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.983574, edge=0.000472, neigh=2.802421, align=4.944356, entropy=9.475366,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.983393, edge=0.000465, neigh=2.725392, align=5.077381, entropy=9.340992,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.983189, edge=0.000463, neigh=2.729942, align=5.160601, entropy=9.257402,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982779, edge=0.000465, neigh=2.855085, align=5.163802, entropy=9.254164,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.982288, edge=0.000466, neigh=2.983281, align=5.158642, entropy=9.259322,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.981523, edge=0.000467, neigh=3.110401, align=5.151528, entropy=9.266436,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980892, edge=0.000468, neigh=3.221581, align=5.148145, entropy=9.269797,s=1.000000, s_hat=1.000000
Time for optimization: 22.86s
Test results:
Top-1: 0.469
Top-10: 0.804
Top-30: 0.883
Top-50: 0.907
Top-100: 0.932
MRR: 0.587
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.050s
Time for attribute perturbation: 0.077s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.42it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.34it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.45it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:21,  4.39it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.35it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.23it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:18,  5.09it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:18,  5.00it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.79it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.67it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.59it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.65it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.53it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.51it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.46it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.55it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.50it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.35it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.29it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.44it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.44it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.38it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:17,  4.41it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:17,  4.26it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:17,  4.26it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.58it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.66it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.60it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.70it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:15,  4.54it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:15,  4.48it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:07<00:15,  4.40it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:15,  4.41it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:15,  4.28it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:13,  4.76it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:13,  4.84it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:13,  4.74it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:12,  4.91it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:09,  6.13it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:09,  5.92it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:08<00:10,  5.48it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:11,  5.10it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:11,  4.92it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:08,  6.27it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:09<00:07,  6.73it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:09<00:07,  7.25it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:07,  6.70it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:06,  8.16it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:10<00:06,  7.26it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:09,  5.02it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  4.05it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.84it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.80it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  4.15it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.33it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:09,  4.43it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.04it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:10,  4.10it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.86it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.76it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.49it/s]
Time for cost matrix: 14.73s
Iter 0: wasserstein=1.167408, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996551, edge=0.000543, neigh=3.160349, align=3.715520, entropy=10.760355,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983268, edge=0.000489, neigh=2.934822, align=4.577178, entropy=9.848216,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981005, edge=0.000476, neigh=2.711696, align=4.879373, entropy=9.540833,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980635, edge=0.000466, neigh=2.704126, align=5.013717, entropy=9.404569,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980618, edge=0.000464, neigh=2.701778, align=5.103569, entropy=9.314420,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980361, edge=0.000461, neigh=2.735988, align=5.162589, entropy=9.255376,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979770, edge=0.000463, neigh=2.869505, align=5.165384, entropy=9.252580,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978897, edge=0.000464, neigh=2.995368, align=5.160543, entropy=9.257421,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978285, edge=0.000464, neigh=3.102629, align=5.157630, entropy=9.260290,s=1.000000, s_hat=1.000000
Time for optimization: 23.73s
Test results:
Top-1: 0.410
Top-10: 0.770
Top-30: 0.856
Top-50: 0.878
Top-100: 0.915
MRR: 0.534
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.064s
Time for attribute perturbation: 0.063s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.45it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.76it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  7.21it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  7.16it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:12,  7.25it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:10,  8.68it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.17it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.12it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  6.93it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  6.95it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:10,  8.13it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.55it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.51it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:14,  5.57it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:15,  5.28it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:15,  5.19it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:16,  4.88it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:17,  4.46it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:17,  4.43it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:17,  4.43it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:16,  4.47it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:16,  4.43it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:16,  4.40it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:15,  4.56it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:15,  4.70it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:15,  4.48it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:15,  4.36it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:15,  4.39it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:14,  4.51it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:06<00:13,  4.91it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:06<00:13,  4.84it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:06<00:13,  4.72it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:06<00:13,  4.59it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:07<00:14,  4.43it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:07<00:13,  4.51it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:07<00:13,  4.54it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:07<00:13,  4.47it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:07<00:12,  4.52it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:08<00:12,  4.49it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:08<00:12,  4.65it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:08<00:11,  4.93it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:08<00:10,  5.06it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:08<00:10,  4.95it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:09<00:10,  4.91it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:09<00:10,  4.69it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:09<00:11,  4.52it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:09<00:10,  4.51it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:10<00:10,  4.42it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:10,  4.54it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:09,  5.07it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:19,  2.55it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.89it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.28it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.12it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.23it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.50it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.25it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.09it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.17it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.14it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:14,  2.82it/s]
Time for cost matrix: 15.80s
Iter 0: wasserstein=1.165413, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994302, edge=0.000543, neigh=3.135268, align=3.695375, entropy=10.782176,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980531, edge=0.000489, neigh=2.908871, align=4.555659, entropy=9.869933,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978538, edge=0.000478, neigh=2.697315, align=4.849904, entropy=9.570124,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978214, edge=0.000468, neigh=2.717896, align=4.991814, entropy=9.426616,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978216, edge=0.000466, neigh=2.705771, align=5.082681, entropy=9.335329,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978181, edge=0.000463, neigh=2.733621, align=5.147459, entropy=9.270508,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977626, edge=0.000464, neigh=2.866942, align=5.147103, entropy=9.270861,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976703, edge=0.000465, neigh=2.985665, align=5.139731, entropy=9.278233,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976072, edge=0.000466, neigh=3.093427, align=5.135084, entropy=9.282783,s=1.000000, s_hat=1.000000
Time for optimization: 23.87s
Test results:
Top-1: 0.372
Top-10: 0.749
Top-30: 0.865
Top-50: 0.894
Top-100: 0.927
MRR: 0.498
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.049s
Time for attribute perturbation: 0.066s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:26,  3.80it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:25,  3.87it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:25,  3.81it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.17it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.25it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.23it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.28it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.31it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:20,  4.37it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.31it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.41it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.47it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:18,  4.58it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:18,  4.56it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.29it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.44it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.45it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:18,  4.46it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:15,  5.08it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:15,  5.23it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:15,  5.06it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:15,  4.88it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:16,  4.75it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:16,  4.66it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.65it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:16,  4.61it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:06<00:16,  4.42it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:16,  4.49it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:16,  4.34it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:16,  4.19it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:16,  4.22it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:07<00:15,  4.42it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:15,  4.29it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:15,  4.27it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:14,  4.53it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:08<00:13,  4.59it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:13,  4.74it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:12,  4.79it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:12,  4.77it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:12,  4.87it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:09<00:12,  4.62it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:13,  4.43it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:13,  4.29it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:12,  4.36it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:10<00:12,  4.39it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:13,  4.15it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:12,  4.13it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:12,  4.26it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:11<00:11,  4.35it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:11<00:11,  4.25it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:11,  4.21it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:10,  4.41it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.35it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:12<00:10,  4.34it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.74it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.39it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.52it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.82it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.25it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.79it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.63it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.48it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.08it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.09it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.24it/s]
Time for cost matrix: 17.35s
Iter 0: wasserstein=1.166392, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997554, edge=0.000543, neigh=3.146028, align=3.678171, entropy=10.797689,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984261, edge=0.000489, neigh=2.915873, align=4.549539, entropy=9.875883,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981864, edge=0.000476, neigh=2.676341, align=4.860181, entropy=9.559657,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981537, edge=0.000466, neigh=2.689188, align=4.997516, entropy=9.420794,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981467, edge=0.000464, neigh=2.687036, align=5.087317, entropy=9.330674,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981192, edge=0.000461, neigh=2.720454, align=5.151242, entropy=9.266724,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980614, edge=0.000462, neigh=2.846412, align=5.153936, entropy=9.264028,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979739, edge=0.000463, neigh=2.970573, align=5.148770, entropy=9.269194,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979115, edge=0.000464, neigh=3.075676, align=5.146233, entropy=9.271692,s=1.000000, s_hat=1.000000
Time for optimization: 23.04s
Test results:
Top-1: 0.387
Top-10: 0.760
Top-30: 0.866
Top-50: 0.895
Top-100: 0.927
MRR: 0.516
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.034s
Time for attribute perturbation: 0.039s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.72it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:16,  5.72it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.86it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:19,  4.76it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.60it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.43it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.39it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:20,  4.40it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.42it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:20,  4.41it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:19,  4.49it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:19,  4.56it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.37it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.65it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.55it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.55it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.45it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:15,  5.13it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:15,  5.11it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.61it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:17,  4.43it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:05<00:18,  4.23it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:14,  5.09it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:14,  5.26it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:14,  5.02it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.81it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.70it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:13,  5.45it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:12,  5.48it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:13,  5.22it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:13,  5.13it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:13,  5.07it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:13,  4.90it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:13,  4.83it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:13,  4.73it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:13,  4.54it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:14,  4.41it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:13,  4.58it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:12,  4.99it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:11,  5.21it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:08<00:11,  5.20it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:08<00:11,  4.76it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:12,  4.50it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:12,  4.32it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:12,  4.37it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:09<00:12,  4.14it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:12,  4.13it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:12,  4.04it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:11,  4.17it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:12,  3.96it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:11,  4.04it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:11,  4.08it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.52it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.85it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.06it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.12it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:15,  3.04it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.13it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  2.96it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:14,  3.04it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:14,  2.81it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:03<00:14,  2.90it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:14,  2.85it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:14,  2.67it/s]
Time for cost matrix: 17.36s
Iter 0: wasserstein=1.159442, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991724, edge=0.000545, neigh=3.098382, align=3.636219, entropy=10.840104,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978440, edge=0.000497, neigh=2.831756, align=4.486575, entropy=9.938653,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976175, edge=0.000482, neigh=2.648659, align=4.786454, entropy=9.633103,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975737, edge=0.000472, neigh=2.694909, align=4.933663, entropy=9.484593,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975602, edge=0.000469, neigh=2.708666, align=5.036113, entropy=9.381872,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975138, edge=0.000471, neigh=2.823165, align=5.041207, entropy=9.376758,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974543, edge=0.000472, neigh=2.933922, align=5.034749, entropy=9.383215,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973585, edge=0.000472, neigh=3.057123, align=5.029059, entropy=9.388905,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972970, edge=0.000473, neigh=3.168603, align=5.026936, entropy=9.390943,s=1.000000, s_hat=1.000000
Time for optimization: 23.23s
Test results:
Top-1: 0.314
Top-10: 0.698
Top-30: 0.823
Top-50: 0.848
Top-100: 0.884
MRR: 0.441
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.058s
Time for attribute perturbation: 0.076s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:26,  3.69it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  4.03it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.78it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.89it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:19,  4.77it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.59it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:21,  4.40it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.58it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.04it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:15,  5.63it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:16,  5.36it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.13it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  4.98it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:17,  4.74it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.63it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.58it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.44it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:17,  4.52it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:17,  4.60it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.64it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:16,  4.65it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:16,  4.70it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:16,  4.58it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:14,  5.07it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:14,  5.00it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:14,  4.91it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:15,  4.69it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:15,  4.64it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:14,  4.68it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:13,  5.04it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:12,  5.56it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:12,  5.38it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:06<00:12,  5.08it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:13,  4.75it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:14,  4.56it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:12,  4.92it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:07<00:12,  4.81it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:13,  4.39it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:13,  4.36it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:13,  4.44it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:08<00:13,  4.46it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:08<00:13,  4.31it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:13,  4.22it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:12,  4.35it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:12,  4.43it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:09<00:11,  4.56it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:11,  4.69it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:11,  4.63it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:10,  4.62it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:10,  4.60it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:10<00:10,  4.57it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.61it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.65it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.33it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.22it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.33it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:10,  4.41it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:09,  4.55it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  4.00it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.57it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.28it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.31it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.40it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.18it/s]
Time for cost matrix: 16.43s
Iter 0: wasserstein=1.171921, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998727, edge=0.000539, neigh=3.204298, align=3.773082, entropy=10.703050,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984922, edge=0.000483, neigh=3.015020, align=4.643221, entropy=9.782193,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982616, edge=0.000471, neigh=2.789023, align=4.939773, entropy=9.479537,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982453, edge=0.000464, neigh=2.742154, align=5.072757, entropy=9.345547,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982321, edge=0.000462, neigh=2.737394, align=5.156019, entropy=9.261975,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982257, edge=0.000460, neigh=2.737070, align=5.210500, entropy=9.207466,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.981699, edge=0.000462, neigh=2.862961, align=5.209393, entropy=9.208571,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.980811, edge=0.000463, neigh=2.996382, align=5.202991, entropy=9.214973,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980199, edge=0.000464, neigh=3.106709, align=5.200063, entropy=9.217874,s=1.000000, s_hat=1.000000
Time for optimization: 23.51s
Test results:
Top-1: 0.442
Top-10: 0.807
Top-30: 0.886
Top-50: 0.912
Top-100: 0.937
MRR: 0.565
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.060s
Time for attribute perturbation: 0.077s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.81it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.71it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.45it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.28it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.38it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.51it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.56it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.50it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:19,  4.61it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.64it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:19,  4.63it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.69it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.67it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:19,  4.48it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:19,  4.46it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:18,  4.62it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:18,  4.53it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.48it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:18,  4.47it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:18,  4.41it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:17,  4.64it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:16,  4.60it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:15,  5.04it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:15,  4.87it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:15,  4.81it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:15,  4.85it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:14,  4.99it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:15,  4.78it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:15,  4.68it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:06<00:15,  4.58it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:16,  4.25it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:15,  4.32it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:15,  4.45it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:14,  4.56it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:14,  4.61it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:13,  4.60it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:14,  4.47it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:08<00:13,  4.57it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:08<00:13,  4.45it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:12,  4.71it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:12,  4.68it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:12,  4.60it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:12,  4.56it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:09<00:12,  4.62it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:11,  4.66it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:11,  4.53it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:11,  4.68it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:10,  4.80it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:10,  4.82it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:11,  4.52it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:11,  4.36it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:10,  4.40it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:11,  4.27it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.48it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:06,  7.42it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:06,  7.64it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  8.05it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  8.68it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:05,  8.85it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:05,  8.67it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:05,  8.54it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:06,  6.92it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:06,  6.27it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:06,  5.83it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:06,  6.22it/s]
Time for cost matrix: 14.82s
Iter 0: wasserstein=1.167639, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995427, edge=0.000542, neigh=3.114914, align=3.702130, entropy=10.775196,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981771, edge=0.000487, neigh=2.901074, align=4.558602, entropy=9.867167,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979552, edge=0.000476, neigh=2.719051, align=4.852517, entropy=9.567528,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979091, edge=0.000467, neigh=2.723405, align=4.999854, entropy=9.418590,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979084, edge=0.000465, neigh=2.701250, align=5.090638, entropy=9.327381,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979015, edge=0.000462, neigh=2.732388, align=5.151921, entropy=9.266046,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978436, edge=0.000464, neigh=2.871499, align=5.153073, entropy=9.264891,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977524, edge=0.000464, neigh=2.991049, align=5.148586, entropy=9.269378,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976907, edge=0.000465, neigh=3.102630, align=5.145334, entropy=9.272590,s=1.000000, s_hat=1.000000
Time for optimization: 9.38s
Test results:
Top-1: 0.404
Top-10: 0.769
Top-30: 0.863
Top-50: 0.897
Top-100: 0.924
MRR: 0.527
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.012s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 28.43it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:03, 30.60it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:03, 28.50it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:02, 29.60it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:02, 27.95it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:02, 27.17it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 26.44it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:02, 25.41it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:02, 24.10it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:01<00:02, 24.74it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:01<00:02, 26.85it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:01<00:02, 26.71it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:01<00:02, 26.20it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:01<00:01, 26.63it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:01<00:01, 26.74it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:01<00:01, 26.66it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:01, 26.25it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.87it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  8.08it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  8.56it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  8.93it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:04,  9.28it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:04,  9.42it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:04,  9.52it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:04,  9.44it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:00<00:04,  9.27it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.44it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.35it/s]
Time for cost matrix: 4.00s
Iter 0: wasserstein=1.165140, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994625, edge=0.000541, neigh=3.086252, align=3.666443, entropy=10.810308,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980796, edge=0.000489, neigh=2.892861, align=4.524513, entropy=9.900714,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978653, edge=0.000476, neigh=2.722022, align=4.816586, entropy=9.602796,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978495, edge=0.000468, neigh=2.689174, align=4.966049, entropy=9.452234,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978422, edge=0.000465, neigh=2.667472, align=5.060395, entropy=9.357595,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978200, edge=0.000462, neigh=2.681534, align=5.130752, entropy=9.287214,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977593, edge=0.000464, neigh=2.806785, align=5.131898, entropy=9.286066,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976706, edge=0.000465, neigh=2.923021, align=5.125289, entropy=9.292675,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976091, edge=0.000465, neigh=3.036720, align=5.122047, entropy=9.295863,s=1.000000, s_hat=1.000000
Time for optimization: 10.25s
Test results:
Top-1: 0.354
Top-10: 0.726
Top-30: 0.825
Top-50: 0.859
Top-100: 0.896
MRR: 0.482
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.018s
Time for attribute perturbation: 0.005s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 28.71it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:03, 30.45it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:02, 30.48it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 28.15it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:02, 27.82it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:03, 26.22it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:03, 21.63it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:03, 20.08it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:02, 23.26it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:01<00:02, 24.80it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:01<00:02, 25.34it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:01<00:02, 25.45it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:01<00:01, 28.44it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:01<00:01, 28.26it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:01<00:01, 26.86it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:01, 25.75it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:03, 12.52it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:03, 11.64it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:03, 11.10it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:03, 11.07it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 10.24it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.70it/s]
Time for cost matrix: 4.12s
Iter 0: wasserstein=1.162111, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994024, edge=0.000545, neigh=3.087338, align=3.633887, entropy=10.842472,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980756, edge=0.000496, neigh=2.835997, align=4.487704, entropy=9.937757,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978542, edge=0.000482, neigh=2.641468, align=4.790386, entropy=9.629429,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978080, edge=0.000471, neigh=2.669896, align=4.933787, entropy=9.484540,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977915, edge=0.000468, neigh=2.681197, align=5.033202, entropy=9.384790,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977413, edge=0.000470, neigh=2.792961, align=5.040511, entropy=9.377454,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976812, edge=0.000471, neigh=2.901316, align=5.036960, entropy=9.381004,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975897, edge=0.000472, neigh=3.024158, align=5.031251, entropy=9.386712,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975264, edge=0.000472, neigh=3.133425, align=5.028721, entropy=9.389138,s=1.000000, s_hat=1.000000
Time for optimization: 14.86s
Test results:
Top-1: 0.330
Top-10: 0.731
Top-30: 0.835
Top-50: 0.863
Top-100: 0.893
MRR: 0.460
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.052s
Time for attribute perturbation: 0.067s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.85it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.33it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.52it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.83it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  8.13it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:12,  7.56it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  8.01it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.72it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  6.05it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  7.11it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:12,  7.01it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.93it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.36it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.14it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.48it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.45it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:08,  9.50it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:09,  8.32it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:08,  8.36it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  7.98it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.56it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:12,  5.99it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:11,  6.21it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:11,  5.87it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:11,  5.91it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:10,  6.67it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:08,  7.52it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:10,  6.34it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:10,  6.12it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  8.03it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:08,  7.19it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:09,  6.54it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:09,  5.83it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  5.82it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.44it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:07,  6.89it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:06,  8.18it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:05,  9.97it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:05,  9.05it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:05,  8.26it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.17it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.84it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.43it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.50it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.43it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.30it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.75it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.82it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.37it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.21it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.30it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.06it/s]
Time for cost matrix: 12.19s
Iter 0: wasserstein=1.165538, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994854, edge=0.000543, neigh=3.094161, align=3.666498, entropy=10.810201,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981111, edge=0.000490, neigh=2.886213, align=4.524791, entropy=9.900585,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978943, edge=0.000477, neigh=2.697519, align=4.817739, entropy=9.601803,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978751, edge=0.000468, neigh=2.682441, align=4.963504, entropy=9.454813,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978631, edge=0.000465, neigh=2.670681, align=5.058498, entropy=9.359495,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978473, edge=0.000461, neigh=2.682979, align=5.129916, entropy=9.288049,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977905, edge=0.000463, neigh=2.804179, align=5.131145, entropy=9.286819,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976977, edge=0.000464, neigh=2.918396, align=5.124569, entropy=9.293395,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976374, edge=0.000464, neigh=3.031079, align=5.121536, entropy=9.296370,s=1.000000, s_hat=1.000000
Time for optimization: 18.78s
Test results:
Top-1: 0.365
Top-10: 0.746
Top-30: 0.842
Top-50: 0.874
Top-100: 0.912
MRR: 0.494
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.055s
Time for attribute perturbation: 0.051s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.55it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.49it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.17it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:14,  6.70it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:15,  6.21it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.48it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.19it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.10it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.08it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  6.95it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  7.32it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.61it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:10,  8.10it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:10,  8.01it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:13,  6.23it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:13,  5.90it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  5.94it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.55it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.31it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:13,  5.86it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:13,  5.59it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:14,  5.31it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:14,  5.18it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:12,  5.63it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.37it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:11,  6.00it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:11,  6.01it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:09,  7.33it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:08,  7.52it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:08,  7.77it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.15it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  7.34it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:09,  6.37it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:08,  6.78it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:09,  6.13it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:10,  5.61it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  6.28it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:06,  7.99it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:08,  6.42it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:08,  6.46it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:09,  5.51it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:10,  4.98it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:10,  4.67it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:08<00:09,  5.03it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:08,  5.81it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.33it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.69it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.73it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  5.03it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.27it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.79it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.72it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.39it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.21it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.83it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.78it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.36it/s]
Time for cost matrix: 12.82s
Iter 0: wasserstein=1.167684, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997954, edge=0.000541, neigh=3.104328, align=3.681724, entropy=10.794327,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984258, edge=0.000486, neigh=2.911798, align=4.556532, entropy=9.868715,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981783, edge=0.000473, neigh=2.714791, align=4.866483, entropy=9.553001,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981631, edge=0.000466, neigh=2.693480, align=5.012186, entropy=9.406157,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981410, edge=0.000464, neigh=2.673883, align=5.101509, entropy=9.316489,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980984, edge=0.000466, neigh=2.808445, align=5.105521, entropy=9.312445,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980402, edge=0.000468, neigh=2.939903, align=5.099819, entropy=9.318146,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979575, edge=0.000468, neigh=3.069487, align=5.093260, entropy=9.324704,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979016, edge=0.000469, neigh=3.179994, align=5.090210, entropy=9.327726,s=1.000000, s_hat=1.000000
Time for optimization: 18.98s
Test results:
Top-1: 0.423
Top-10: 0.773
Top-30: 0.849
Top-50: 0.878
Top-100: 0.905
MRR: 0.543
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.048s
Time for attribute perturbation: 0.078s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.41it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  4.03it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:24,  3.97it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.02it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:14,  6.53it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  7.04it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.59it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.44it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.03it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  5.98it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:15,  5.72it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:15,  5.56it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:10,  8.10it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:10,  8.26it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.16it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:08,  9.51it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:07,  9.80it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:09,  7.81it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  6.93it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  7.03it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.36it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.28it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.35it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:07,  8.87it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:07,  8.71it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:08,  7.54it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:08,  7.14it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:09,  6.81it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  6.91it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:09,  6.26it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:11,  5.44it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:12,  4.83it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:11,  4.96it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:10,  5.28it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:11,  5.08it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:10,  5.05it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:09,  5.62it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:09,  5.39it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:09,  5.73it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:08,  5.84it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.74it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  7.06it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.55it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.16it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.80it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.39it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  4.16it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.93it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.78it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.40it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.08it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.00it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.21it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.10it/s]
Time for cost matrix: 12.93s
Iter 0: wasserstein=1.161657, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994023, edge=0.000545, neigh=3.074347, align=3.617879, entropy=10.858363,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980720, edge=0.000495, neigh=2.832958, align=4.478563, entropy=9.946617,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978545, edge=0.000481, neigh=2.638991, align=4.781684, entropy=9.638575,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978152, edge=0.000472, neigh=2.655549, align=4.927541, entropy=9.490860,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977897, edge=0.000468, neigh=2.669569, align=5.028225, entropy=9.389770,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977482, edge=0.000470, neigh=2.788818, align=5.031701, entropy=9.386264,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976924, edge=0.000471, neigh=2.907749, align=5.025571, entropy=9.392393,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976119, edge=0.000472, neigh=3.024395, align=5.018995, entropy=9.398969,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975492, edge=0.000472, neigh=3.134328, align=5.015691, entropy=9.402213,s=1.000000, s_hat=1.000000
Time for optimization: 18.81s
Test results:
Top-1: 0.311
Top-10: 0.708
Top-30: 0.813
Top-50: 0.850
Top-100: 0.884
MRR: 0.440
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.060s
Time for attribute perturbation: 0.021s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.91it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.66it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  7.06it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:10,  9.17it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  8.14it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.49it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.56it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:17,  5.12it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:15,  5.79it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:13,  6.62it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.37it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.21it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:10,  7.47it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:09,  8.11it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:10,  7.19it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.03it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:13,  5.63it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.29it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  7.23it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.52it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  7.01it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:10,  6.44it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:09,  7.53it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  6.80it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:09,  7.32it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:09,  7.00it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  6.86it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:07,  8.76it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  7.06it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:10,  5.69it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:10,  5.51it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:09,  6.14it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:08,  6.76it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:06,  7.93it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:06,  8.13it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:06,  7.45it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:07,  6.70it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  6.66it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:07,  6.74it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:08,  5.73it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  6.68it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.93it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.28it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.28it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.26it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.05it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.20it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.36it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.63it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.85it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.59it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.13it/s]
Time for cost matrix: 12.70s
Iter 0: wasserstein=1.158922, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991955, edge=0.000544, neigh=3.053619, align=3.603344, entropy=10.874055,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978276, edge=0.000492, neigh=2.836103, align=4.467143, entropy=9.958374,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975925, edge=0.000477, neigh=2.643220, align=4.782293, entropy=9.637681,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975485, edge=0.000468, neigh=2.655350, align=4.940912, entropy=9.477487,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975463, edge=0.000466, neigh=2.620679, align=5.038680, entropy=9.379325,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975181, edge=0.000464, neigh=2.661993, align=5.107841, entropy=9.310126,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974491, edge=0.000465, neigh=2.790481, align=5.110083, entropy=9.307881,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973505, edge=0.000465, neigh=2.909518, align=5.105652, entropy=9.312312,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972881, edge=0.000466, neigh=3.024366, align=5.103417, entropy=9.314476,s=1.000000, s_hat=1.000000
Time for optimization: 18.46s
Test results:
Top-1: 0.312
Top-10: 0.697
Top-30: 0.806
Top-50: 0.838
Top-100: 0.880
MRR: 0.438
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.042s
Time for attribute perturbation: 0.051s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  5.85it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.39it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.63it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.03it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.00it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:15,  5.94it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  5.98it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.48it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.20it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.37it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:14,  5.87it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  5.88it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  5.95it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  5.76it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:15,  5.41it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.35it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:11,  6.96it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:11,  6.81it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:09,  8.52it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:09,  7.90it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:08,  8.52it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:10,  6.92it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:12,  6.04it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.15it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.52it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.78it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:09,  7.27it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:10,  6.46it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:09,  6.62it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:07,  9.13it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:07,  8.11it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  7.95it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:07,  7.63it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:06,  9.32it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:07,  8.13it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.46it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.60it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  6.86it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:08,  6.43it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  7.11it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.52it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.72it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:08,  5.82it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.54it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.88it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.71it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.95it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.40it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.92it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:09,  4.44it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.28it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.36it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.20it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.31it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.36it/s]
Time for cost matrix: 12.83s
Iter 0: wasserstein=1.162243, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997069, edge=0.000544, neigh=3.078422, align=3.601707, entropy=10.874101,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983920, edge=0.000492, neigh=2.850002, align=4.475236, entropy=9.950104,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981138, edge=0.000477, neigh=2.637224, align=4.801179, entropy=9.618658,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980641, edge=0.000467, neigh=2.654134, align=4.950447, entropy=9.467886,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980472, edge=0.000464, neigh=2.668055, align=5.049328, entropy=9.368663,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979954, edge=0.000466, neigh=2.778491, align=5.052491, entropy=9.365474,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979347, edge=0.000468, neigh=2.901696, align=5.047888, entropy=9.370076,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978499, edge=0.000468, neigh=3.033789, align=5.043032, entropy=9.374932,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977885, edge=0.000468, neigh=3.140469, align=5.041713, entropy=9.376204,s=1.000000, s_hat=1.000000
Time for optimization: 19.15s
Test results:
Top-1: 0.344
Top-10: 0.724
Top-30: 0.827
Top-50: 0.856
Top-100: 0.903
MRR: 0.473
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.054s
Time for attribute perturbation: 0.044s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.31it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:09, 10.44it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.46it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.77it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:12,  7.68it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  8.17it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.77it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.64it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.45it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:11,  7.34it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.56it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.75it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.89it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  6.97it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  6.22it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:11,  6.83it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:09,  8.44it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.97it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:12,  6.07it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.44it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.77it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.25it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.61it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:08,  7.76it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:07,  9.47it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:09,  7.24it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:10,  6.13it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:09,  6.59it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:06,  9.03it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:07,  7.78it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  8.04it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:07,  8.08it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:07,  7.99it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:07,  7.89it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:07,  7.28it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  7.02it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  6.81it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:05,  8.56it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:04,  9.93it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:04, 11.11it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:06,  7.68it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:21,  2.25it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.33it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.48it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.56it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.88it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.77it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.43it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.54it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.26it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.38it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.09it/s]
Time for cost matrix: 12.35s
Iter 0: wasserstein=1.156076, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991065, edge=0.000546, neigh=3.041476, align=3.577780, entropy=10.899144,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977897, edge=0.000497, neigh=2.813919, align=4.440159, entropy=9.985197,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975630, edge=0.000482, neigh=2.605914, align=4.754680, entropy=9.665888,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975080, edge=0.000471, neigh=2.636898, align=4.905536, entropy=9.512804,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974821, edge=0.000468, neigh=2.649941, align=5.013046, entropy=9.404943,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974263, edge=0.000470, neigh=2.779247, align=5.016667, entropy=9.401299,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973595, edge=0.000472, neigh=2.895723, align=5.010236, entropy=9.407728,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972711, edge=0.000472, neigh=3.010685, align=5.003379, entropy=9.414585,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972096, edge=0.000473, neigh=3.124616, align=5.000671, entropy=9.417154,s=1.000000, s_hat=1.000000
Time for optimization: 18.84s
Test results:
Top-1: 0.272
Top-10: 0.674
Top-30: 0.790
Top-50: 0.827
Top-100: 0.866
MRR: 0.401
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.063s
Time for attribute perturbation: 0.011s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:14,  6.90it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.32it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.62it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  7.94it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:14,  6.51it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  6.78it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.11it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.30it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.76it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  6.88it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.47it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:11,  7.24it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.23it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.04it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.27it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:17,  4.61it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:17,  4.52it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.23it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.48it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.09it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:09,  7.60it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:09,  7.40it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.59it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.43it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:10,  6.48it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  7.99it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:08,  7.87it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:06,  9.38it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:07,  8.12it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.66it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:07,  7.79it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  7.18it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:10,  5.97it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:09,  6.02it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:07,  7.47it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:07,  7.28it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  7.12it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:06,  7.63it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:05,  8.70it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  7.55it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:05,  8.29it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.53it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.92it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:19,  2.48it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.40it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.22it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.77it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.63it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.78it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.79it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.61it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.66it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.66it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.30it/s]
Time for cost matrix: 12.25s
Iter 0: wasserstein=1.158842, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992334, edge=0.000547, neigh=3.072834, align=3.591371, entropy=10.884753,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979122, edge=0.000499, neigh=2.818475, align=4.442326, entropy=9.983081,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976902, edge=0.000484, neigh=2.595604, align=4.755815, entropy=9.664758,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976399, edge=0.000472, neigh=2.640493, align=4.909413, entropy=9.508953,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976247, edge=0.000468, neigh=2.648262, align=5.016386, entropy=9.401605,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976010, edge=0.000465, neigh=2.696029, align=5.092705, entropy=9.325261,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975398, edge=0.000466, neigh=2.815570, align=5.095120, entropy=9.322844,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974407, edge=0.000467, neigh=2.932025, align=5.092243, entropy=9.325721,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973783, edge=0.000467, neigh=3.039510, align=5.089559, entropy=9.328247,s=1.000000, s_hat=1.000000
Time for optimization: 19.70s
Test results:
Top-1: 0.289
Top-10: 0.689
Top-30: 0.800
Top-50: 0.834
Top-100: 0.883
MRR: 0.416
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.045s
Time for attribute perturbation: 0.022s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.58it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.79it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:11,  8.28it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:09,  9.56it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:10,  8.94it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  7.79it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.76it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:15,  5.78it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:15,  5.80it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:15,  5.47it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.36it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.38it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:13,  5.99it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:14,  5.67it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.40it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.50it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:11,  6.63it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:09,  7.81it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  9.19it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:07, 10.01it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:07,  9.97it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  8.02it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:08,  7.57it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:08,  7.61it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:09,  7.06it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:08,  7.47it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.41it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:09,  6.25it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:09,  6.44it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:08,  6.88it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  7.44it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:09,  6.38it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  5.74it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:09,  5.97it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.77it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  7.43it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:06,  7.81it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:06,  7.44it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:05,  8.48it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:05,  8.76it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:05,  8.86it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.16it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.86it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.83it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.95it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.47it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.37it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.66it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.58it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.60it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.65it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.62it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.28it/s]
Time for cost matrix: 12.14s
Iter 0: wasserstein=1.164981, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998161, edge=0.000542, neigh=3.071933, align=3.631536, entropy=10.843811,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984974, edge=0.000491, neigh=2.861761, align=4.506998, entropy=9.918380,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982392, edge=0.000476, neigh=2.675630, align=4.817426, entropy=9.602194,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981937, edge=0.000467, neigh=2.649364, align=4.966460, entropy=9.451854,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981673, edge=0.000464, neigh=2.671358, align=5.067566, entropy=9.350425,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981131, edge=0.000467, neigh=2.794290, align=5.069452, entropy=9.348514,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980525, edge=0.000469, neigh=2.924272, align=5.062736, entropy=9.355228,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979684, edge=0.000469, neigh=3.057333, align=5.057316, entropy=9.360648,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979079, edge=0.000470, neigh=3.163677, align=5.055688, entropy=9.362238,s=1.000000, s_hat=1.000000
Time for optimization: 18.12s
Test results:
Top-1: 0.373
Top-10: 0.747
Top-30: 0.831
Top-50: 0.860
Top-100: 0.899
MRR: 0.500
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.032s
Time for attribute perturbation: 0.056s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.34it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.33it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.20it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.45it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:16,  5.93it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:17,  5.37it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:18,  5.06it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  5.99it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:16,  5.51it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.46it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:14,  6.05it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:17,  4.98it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  4.88it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:20,  4.13it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:17,  4.75it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:15,  5.32it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:15,  5.44it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.93it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:14,  5.39it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:14,  5.24it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:14,  5.38it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:14,  5.18it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:14,  5.06it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:14,  5.28it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:15,  4.67it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:13,  5.35it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:13,  5.27it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:12,  5.45it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:12,  5.52it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:09,  7.04it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:06<00:09,  7.18it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:06<00:09,  7.09it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:06<00:08,  7.24it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:08,  6.92it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:06,  9.23it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:06,  8.52it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:07<00:06,  8.35it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:07<00:07,  7.92it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:07<00:07,  7.70it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:07,  7.54it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:07,  7.41it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:06,  7.83it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:08<00:06,  7.65it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:08<00:06,  7.96it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:08<00:06,  7.39it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:06,  7.25it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.03it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.10it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.25it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.57it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.60it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.73it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.96it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.01it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.17it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:14,  2.87it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.06it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.12it/s]
Time for cost matrix: 13.73s
Iter 0: wasserstein=1.156763, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992272, edge=0.000546, neigh=3.039471, align=3.563657, entropy=10.912855,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979035, edge=0.000498, neigh=2.805734, align=4.418933, entropy=10.006393,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976616, edge=0.000482, neigh=2.596451, align=4.733604, entropy=9.686182,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976114, edge=0.000471, neigh=2.618664, align=4.886362, entropy=9.531932,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975913, edge=0.000468, neigh=2.631911, align=4.993666, entropy=9.424321,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975386, edge=0.000470, neigh=2.757069, align=4.998441, entropy=9.419524,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974743, edge=0.000471, neigh=2.874332, align=4.990777, entropy=9.427187,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973845, edge=0.000472, neigh=2.991376, align=4.984239, entropy=9.433725,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973189, edge=0.000472, neigh=3.104110, align=4.981981, entropy=9.435896,s=1.000000, s_hat=1.000000
Time for optimization: 20.33s
Test results:
Top-1: 0.266
Top-10: 0.658
Top-30: 0.783
Top-50: 0.819
Top-100: 0.859
MRR: 0.393
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.043s
Time for attribute perturbation: 0.057s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.25it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.66it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.71it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  7.18it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:15,  6.13it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:18,  5.16it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.05it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.70it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  8.88it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:09,  8.81it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:09,  8.83it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:07, 10.44it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:07, 11.16it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:08,  8.88it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:09,  8.34it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:09,  7.73it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.23it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:12,  6.17it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:13,  5.53it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:10,  6.89it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  7.25it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:09,  7.32it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  7.24it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:08,  7.72it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:07,  8.18it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:07,  8.01it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:09,  6.52it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:09,  6.69it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:06,  8.93it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:05, 11.39it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:05,  9.65it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:08,  6.35it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:08,  6.36it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:07,  7.07it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:06,  7.48it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:07,  6.94it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:06,  6.86it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.72it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.38it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.21it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.30it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.18it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.55it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.63it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.80it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.07it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:08,  4.83it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:08,  4.83it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.76it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.86it/s]
Time for cost matrix: 11.28s
Iter 0: wasserstein=1.166529, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998854, edge=0.000544, neigh=3.069214, align=3.620866, entropy=10.855223,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.985502, edge=0.000491, neigh=2.875491, align=4.491315, entropy=9.934221,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.983102, edge=0.000477, neigh=2.661138, align=4.809924, entropy=9.610385,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982710, edge=0.000468, neigh=2.650229, align=4.954851, entropy=9.463464,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982492, edge=0.000465, neigh=2.662075, align=5.057093, entropy=9.360899,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982008, edge=0.000466, neigh=2.777125, align=5.063153, entropy=9.354813,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.981535, edge=0.000468, neigh=2.900272, align=5.056751, entropy=9.361213,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.980665, edge=0.000469, neigh=3.033481, align=5.049205, entropy=9.368759,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980038, edge=0.000469, neigh=3.152965, align=5.045109, entropy=9.372815,s=1.000000, s_hat=1.000000
Time for optimization: 19.25s
Test results:
Top-1: 0.365
Top-10: 0.739
Top-30: 0.830
Top-50: 0.858
Top-100: 0.901
MRR: 0.491
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.053s
Time for attribute perturbation: 0.028s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.85it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.41it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:08, 10.67it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.26it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:13,  6.80it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.46it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:09,  9.02it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  9.14it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:06, 12.02it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:08,  9.57it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:07, 10.46it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:07, 10.93it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:06, 11.07it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:08,  9.01it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:07,  9.31it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:07,  9.39it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:07,  9.41it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:03<00:06, 11.00it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:03<00:05, 11.96it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:03<00:05, 10.99it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:05, 11.52it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:04<00:04, 12.72it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:04<00:04, 11.52it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:06,  8.04it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:05,  8.87it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:05<00:05,  8.75it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:04,  9.77it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:04,  9.56it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.73it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.94it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.86it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.13it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.46it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.65it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.72it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.79it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  4.02it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.47it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.59it/s]
Time for cost matrix: 9.70s
Iter 0: wasserstein=1.171584, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=1.000584, edge=0.000541, neigh=3.126128, align=3.704596, entropy=10.772089,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.986693, edge=0.000485, neigh=2.928731, align=4.567083, entropy=9.858344,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.984544, edge=0.000473, neigh=2.692225, align=4.868858, entropy=9.550772,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.984368, edge=0.000465, neigh=2.696702, align=5.013425, entropy=9.404943,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.984369, edge=0.000463, neigh=2.677413, align=5.103394, entropy=9.314608,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.984223, edge=0.000461, neigh=2.711305, align=5.162983, entropy=9.254983,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.983714, edge=0.000463, neigh=2.846233, align=5.163325, entropy=9.254639,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.982849, edge=0.000464, neigh=2.976457, align=5.158033, entropy=9.259931,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.982263, edge=0.000464, neigh=3.083642, align=5.156122, entropy=9.261825,s=1.000000, s_hat=1.000000
Time for optimization: 9.10s
Test results:
Top-1: 0.429
Top-10: 0.778
Top-30: 0.859
Top-50: 0.885
Top-100: 0.920
MRR: 0.543
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.032s
Time for attribute perturbation: 0.024s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 25.85it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 25.40it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 26.14it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 23.17it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:04, 19.44it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:04, 18.09it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:00<00:04, 17.95it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:03, 21.58it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:03, 21.53it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:01<00:03, 18.19it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:01<00:03, 21.70it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:01<00:02, 23.38it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:01<00:02, 22.15it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:01<00:02, 23.35it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:02<00:02, 24.11it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:02<00:01, 25.96it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:02, 22.25it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.69it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.98it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.93it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.45it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.47it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.90it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.14it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.75it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.81it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.86it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.66it/s]
Time for cost matrix: 6.08s
Iter 0: wasserstein=1.157314, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993010, edge=0.000547, neigh=3.021031, align=3.543057, entropy=10.933661,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979726, edge=0.000499, neigh=2.777133, align=4.399522, entropy=10.025759,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977185, edge=0.000483, neigh=2.568198, align=4.725971, entropy=9.694406,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976553, edge=0.000472, neigh=2.609280, align=4.881455, entropy=9.536880,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976458, edge=0.000468, neigh=2.626947, align=4.988374, entropy=9.429614,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976171, edge=0.000465, neigh=2.662694, align=5.061847, entropy=9.356118,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975509, edge=0.000466, neigh=2.788763, align=5.062775, entropy=9.355189,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974561, edge=0.000467, neigh=2.904584, align=5.058328, entropy=9.359636,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973955, edge=0.000467, neigh=3.008059, align=5.055284, entropy=9.362546,s=1.000000, s_hat=1.000000
Time for optimization: 26.80s
Test results:
Top-1: 0.261
Top-10: 0.676
Top-30: 0.792
Top-50: 0.828
Top-100: 0.879
MRR: 0.392
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.058s
Time for attribute perturbation: 0.072s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.54it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.74it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.41it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:25,  3.72it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:28,  3.28it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:30,  3.06it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:28,  3.21it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:27,  3.33it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:27,  3.33it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:26,  3.39it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:26,  3.30it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:25,  3.46it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:25,  3.41it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:31,  2.74it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:33,  2.51it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:37,  2.24it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:36,  2.28it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:31,  2.58it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:25,  3.15it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:25,  3.11it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:26,  2.93it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:28,  2.75it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:27,  2.85it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:25,  3.01it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:27,  2.72it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:30,  2.46it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:09<00:29,  2.47it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:09<00:23,  3.11it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:09<00:16,  4.16it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:09<00:15,  4.50it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:10<00:15,  4.47it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:10<00:16,  4.12it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:10<00:15,  4.34it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:10<00:15,  4.18it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:11<00:15,  4.14it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:11<00:10,  5.94it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:11<00:11,  5.16it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:11<00:13,  4.37it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:12<00:16,  3.68it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:12<00:15,  3.83it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:12<00:13,  4.10it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:12<00:14,  3.93it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:13<00:14,  3.88it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:13<00:14,  3.72it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:13<00:15,  3.33it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:14<00:16,  3.14it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:14<00:17,  2.99it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:15<00:18,  2.65it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:15<00:19,  2.52it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:15<00:20,  2.36it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:18,  2.51it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:14,  3.16it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:29,  1.64it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:29,  1.65it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:27,  1.73it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:20,  2.27it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:19,  2.26it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:19,  2.30it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:03<00:19,  2.23it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:03<00:19,  2.18it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:04<00:18,  2.25it/s]Computing product RWR scores:  20%|██        | 10/50 [00:04<00:20,  1.96it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:21,  1.87it/s]
Time for cost matrix: 24.64s
Iter 0: wasserstein=1.159627, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994190, edge=0.000547, neigh=3.028171, align=3.556718, entropy=10.919784,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980984, edge=0.000497, neigh=2.786691, align=4.411751, entropy=10.013449,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978405, edge=0.000482, neigh=2.566606, align=4.730596, entropy=9.689012,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977763, edge=0.000471, neigh=2.611031, align=4.889374, entropy=9.528905,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977636, edge=0.000468, neigh=2.633802, align=4.997925, entropy=9.420062,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977099, edge=0.000469, neigh=2.754821, align=5.003454, entropy=9.414512,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976403, edge=0.000470, neigh=2.877470, align=4.997938, entropy=9.420026,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975488, edge=0.000471, neigh=2.990768, align=4.991624, entropy=9.426340,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974887, edge=0.000471, neigh=3.107772, align=4.988130, entropy=9.429754,s=1.000000, s_hat=1.000000
Time for optimization: 36.00s
Test results:
Top-1: 0.278
Top-10: 0.686
Top-30: 0.806
Top-50: 0.839
Top-100: 0.882
MRR: 0.406
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.068s
Time for attribute perturbation: 0.076s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:29,  3.41it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.70it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  4.91it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:23,  4.14it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:30,  3.15it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:34,  2.72it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:35,  2.63it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:39,  2.32it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:39,  2.32it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:33,  2.69it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:29,  3.04it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:24,  3.52it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:26,  3.27it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:30,  2.80it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:29,  2.85it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:24,  3.41it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:25,  3.21it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:26,  3.05it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:28,  2.85it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:26,  2.99it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:27,  2.92it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:27,  2.83it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:26,  2.86it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:22,  3.34it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:21,  3.45it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:21,  3.37it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:21,  3.40it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:09<00:21,  3.36it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:20,  3.53it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:09<00:21,  3.31it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:09<00:18,  3.77it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:10<00:17,  3.78it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:10<00:19,  3.50it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:10<00:17,  3.85it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:11<00:19,  3.28it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:11<00:20,  3.07it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:11<00:21,  2.96it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:12<00:21,  2.82it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:12<00:21,  2.77it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:12<00:22,  2.61it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:13<00:21,  2.78it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:13<00:21,  2.74it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:14<00:22,  2.57it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:14<00:21,  2.62it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:14<00:17,  3.15it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:14<00:12,  4.10it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:15<00:15,  3.43it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:15<00:16,  3.07it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:16<00:16,  2.98it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:16<00:14,  3.28it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:16<00:15,  3.16it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:17<00:14,  3.24it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:17<00:15,  3.07it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:24,  2.02it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:27,  1.74it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:26,  1.76it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:02<00:23,  1.92it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:24,  1.81it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:03<00:23,  1.90it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:03<00:23,  1.79it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:04<00:21,  1.96it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:04<00:19,  2.09it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:21,  1.84it/s]Computing product RWR scores:  20%|██        | 10/50 [00:06<00:24,  1.65it/s]
Time for cost matrix: 25.38s
Iter 0: wasserstein=1.161165, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993924, edge=0.000544, neigh=3.033344, align=3.602739, entropy=10.874415,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980229, edge=0.000492, neigh=2.854248, align=4.473297, entropy=9.952011,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977987, edge=0.000477, neigh=2.678213, align=4.789586, entropy=9.630399,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977592, edge=0.000468, neigh=2.666793, align=4.946970, entropy=9.471435,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977469, edge=0.000466, neigh=2.637321, align=5.040745, entropy=9.377261,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977373, edge=0.000464, neigh=2.675396, align=5.109969, entropy=9.307998,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976694, edge=0.000466, neigh=2.825445, align=5.113135, entropy=9.304829,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975697, edge=0.000466, neigh=2.956935, align=5.108034, entropy=9.309930,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975022, edge=0.000467, neigh=3.075593, align=5.104991, entropy=9.312841,s=1.000000, s_hat=1.000000
Time for optimization: 22.06s
Test results:
Top-1: 0.323
Top-10: 0.716
Top-30: 0.816
Top-50: 0.848
Top-100: 0.888
MRR: 0.455
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.038s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:12,  7.75it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.27it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:10,  8.76it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:09,  9.81it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:09,  9.57it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:08, 10.25it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.70it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.56it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:12,  6.77it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:11,  7.31it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:08,  9.66it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:08,  9.71it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:09,  7.99it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:10,  7.52it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:09,  7.96it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:08,  9.14it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:08,  8.42it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:10,  7.04it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:09,  7.27it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:08,  7.95it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:03<00:06,  9.75it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:07,  8.80it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:08,  7.68it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:08,  7.03it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:09,  6.28it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:08,  6.81it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:06,  9.06it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:05,  9.94it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:08,  6.52it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:06,  7.79it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:06,  7.79it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:06,  7.50it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:06,  6.88it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  7.85it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.46it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.03it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.80it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:16,  2.84it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.14it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.60it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:11,  3.78it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  3.94it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.81it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.08it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.24it/s]
Time for cost matrix: 11.25s
Iter 0: wasserstein=1.172623, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=1.000953, edge=0.000541, neigh=3.146167, align=3.717509, entropy=10.758898,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.986955, edge=0.000485, neigh=2.954965, align=4.584096, entropy=9.841355,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.984748, edge=0.000473, neigh=2.747274, align=4.884096, entropy=9.535524,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.984506, edge=0.000465, neigh=2.734332, align=5.022452, entropy=9.395916,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.984530, edge=0.000463, neigh=2.695789, align=5.111422, entropy=9.306580,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.984421, edge=0.000461, neigh=2.728339, align=5.173872, entropy=9.244095,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.983845, edge=0.000463, neigh=2.862339, align=5.173034, entropy=9.244930,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.982910, edge=0.000464, neigh=3.000251, align=5.166907, entropy=9.251057,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.982326, edge=0.000464, neigh=3.111730, align=5.163925, entropy=9.254010,s=1.000000, s_hat=1.000000
Time for optimization: 19.26s
Test results:
Top-1: 0.439
Top-10: 0.796
Top-30: 0.874
Top-50: 0.896
Top-100: 0.926
MRR: 0.563
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.066s
Time for attribute perturbation: 0.088s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.51it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.66it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.47it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.66it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:20,  4.71it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:19,  4.77it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.36it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:17,  5.31it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:18,  4.88it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:19,  4.60it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:18,  4.93it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:15,  5.73it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:10,  8.18it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.77it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.37it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:13,  6.01it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:14,  5.75it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  6.11it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:10,  7.34it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:10,  7.66it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.77it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:11,  6.82it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:11,  6.29it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:12,  6.08it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:10,  6.83it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:07,  8.98it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:07,  8.91it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  7.64it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:11,  5.77it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:11,  5.98it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:09,  6.70it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:08,  7.17it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:09,  6.66it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:09,  6.41it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:09,  6.69it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:08,  7.33it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:09,  6.17it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  6.07it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:07<00:09,  6.09it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:10,  5.21it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:11,  4.55it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:11,  4.67it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:10,  5.08it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:08<00:10,  5.02it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:08<00:08,  5.66it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:06,  6.93it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.14it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.81it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.86it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.73it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:17,  2.66it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.29it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.43it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:11,  3.66it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.70it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.61it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.58it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.10it/s]
Time for cost matrix: 13.49s
Iter 0: wasserstein=1.161778, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997191, edge=0.000545, neigh=3.052873, align=3.577497, entropy=10.898124,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984142, edge=0.000493, neigh=2.859537, align=4.448217, entropy=9.977208,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981492, edge=0.000478, neigh=2.621413, align=4.776617, entropy=9.643550,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980948, edge=0.000467, neigh=2.639908, align=4.933809, entropy=9.484472,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980770, edge=0.000464, neigh=2.649295, align=5.034022, entropy=9.383966,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980286, edge=0.000466, neigh=2.753408, align=5.038070, entropy=9.379895,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979684, edge=0.000468, neigh=2.874222, align=5.032709, entropy=9.385255,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978799, edge=0.000468, neigh=3.005116, align=5.026863, entropy=9.391101,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978231, edge=0.000469, neigh=3.110870, align=5.025641, entropy=9.392273,s=1.000000, s_hat=1.000000
Time for optimization: 19.47s
Test results:
Top-1: 0.341
Top-10: 0.716
Top-30: 0.818
Top-50: 0.848
Top-100: 0.897
MRR: 0.468
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.061s
Time for attribute perturbation: 0.061s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:14,  6.73it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:06, 15.60it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:06, 15.30it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:07, 11.70it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.96it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.12it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:09,  8.62it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:11,  7.34it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:11,  7.52it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:12,  6.86it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.40it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:14,  5.69it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:13,  5.87it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:13,  5.81it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:09,  7.71it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:09,  8.31it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  7.15it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:08,  8.44it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.35it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:09,  7.25it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:09,  7.33it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  7.62it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  7.25it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:09,  7.17it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:09,  7.17it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:09,  6.96it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:08,  7.37it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  6.95it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:08,  6.86it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:10,  5.80it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:07,  7.99it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:08,  6.77it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:08,  6.48it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  6.81it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:08,  6.32it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:08,  6.04it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:08,  5.82it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:09,  5.36it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  7.49it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  6.65it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.11it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.12it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.40it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.07it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  3.93it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.89it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.30it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:14,  2.99it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.05it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.25it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.42it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.15it/s]
Time for cost matrix: 12.27s
Iter 0: wasserstein=1.159436, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992784, edge=0.000546, neigh=3.042749, align=3.581178, entropy=10.895330,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979423, edge=0.000497, neigh=2.805387, align=4.434165, entropy=9.991204,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977141, edge=0.000483, neigh=2.583268, align=4.747973, entropy=9.672538,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976680, edge=0.000472, neigh=2.630401, align=4.901827, entropy=9.516539,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976623, edge=0.000468, neigh=2.629062, align=5.004755, entropy=9.413236,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976327, edge=0.000464, neigh=2.677598, align=5.078014, entropy=9.339952,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975715, edge=0.000466, neigh=2.801576, align=5.080671, entropy=9.337293,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974741, edge=0.000466, neigh=2.912603, align=5.077430, entropy=9.340534,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974129, edge=0.000467, neigh=3.023895, align=5.075228, entropy=9.342590,s=1.000000, s_hat=1.000000
Time for optimization: 19.71s
Test results:
Top-1: 0.292
Top-10: 0.688
Top-30: 0.799
Top-50: 0.837
Top-100: 0.876
MRR: 0.421
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.052s
Time for attribute perturbation: 0.068s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.73it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:12,  8.08it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.32it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  7.38it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.14it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:14,  6.31it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:16,  5.64it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:18,  5.00it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:20,  4.52it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:18,  4.97it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:18,  4.81it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:15,  5.52it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  5.84it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.56it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.43it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.69it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:12,  6.26it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:12,  6.63it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  7.12it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.31it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.26it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:14,  5.19it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:11,  6.36it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:12,  5.73it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:13,  5.32it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.85it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:11,  6.19it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:11,  6.12it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:10,  6.34it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:09,  6.80it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:10,  6.39it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:11,  5.77it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:10,  5.90it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:06<00:09,  6.39it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:10,  6.17it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:09,  6.59it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:09,  5.99it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:10,  5.54it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:07<00:07,  7.09it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:08,  6.58it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:09,  5.66it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:07,  6.69it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:08<00:07,  6.90it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:08<00:08,  5.91it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:09,  5.29it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:08,  5.73it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.06it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.91it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.23it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.44it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:15,  3.03it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:15,  2.83it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  3.07it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.28it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.55it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.53it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.42it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.02it/s]
Time for cost matrix: 14.16s
Iter 0: wasserstein=1.168218, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996996, edge=0.000542, neigh=3.060866, align=3.662121, entropy=10.815308,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983066, edge=0.000488, neigh=2.866338, align=4.525426, entropy=9.900029,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980912, edge=0.000476, neigh=2.700821, align=4.822828, entropy=9.596566,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980682, edge=0.000468, neigh=2.678005, align=4.968530, entropy=9.449768,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980682, edge=0.000465, neigh=2.659315, align=5.056517, entropy=9.361475,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980541, edge=0.000462, neigh=2.688467, align=5.123019, entropy=9.294947,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979985, edge=0.000463, neigh=2.818256, align=5.123288, entropy=9.294676,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979134, edge=0.000464, neigh=2.930212, align=5.116605, entropy=9.301358,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978496, edge=0.000465, neigh=3.039304, align=5.111597, entropy=9.306324,s=1.000000, s_hat=1.000000
Time for optimization: 20.16s
Test results:
Top-1: 0.372
Top-10: 0.739
Top-30: 0.839
Top-50: 0.874
Top-100: 0.901
MRR: 0.500
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.058s
Time for attribute perturbation: 0.031s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:09, 10.20it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:07, 13.64it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:07, 11.82it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:09,  9.43it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:09,  9.49it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:10,  8.79it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.38it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:08,  9.73it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:11,  7.19it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  7.01it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:12,  6.68it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:10,  7.87it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:09,  8.24it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:08,  8.97it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:06, 11.02it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:07, 10.18it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:07,  9.37it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:07,  9.00it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:03<00:07,  9.36it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:08,  7.89it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:08,  7.73it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:07,  8.07it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:08,  7.06it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:08,  7.55it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:04<00:05, 11.47it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:04<00:06,  9.33it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:05<00:05,  9.09it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:05<00:05,  9.86it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:05<00:05,  9.90it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:05<00:04,  9.91it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.69it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.87it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.74it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.57it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  3.99it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.66it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.84it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.57it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.54it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.28it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.10it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.08it/s]
Time for cost matrix: 11.22s
Iter 0: wasserstein=1.163174, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997962, edge=0.000545, neigh=3.025109, align=3.572097, entropy=10.903462,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984710, edge=0.000493, neigh=2.835867, align=4.438716, entropy=9.986656,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982035, edge=0.000477, neigh=2.626350, align=4.768398, entropy=9.651523,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981499, edge=0.000467, neigh=2.636360, align=4.924134, entropy=9.494229,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981334, edge=0.000464, neigh=2.643395, align=5.029219, entropy=9.388775,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981152, edge=0.000462, neigh=2.674562, align=5.093641, entropy=9.324325,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980520, edge=0.000464, neigh=2.799034, align=5.092703, entropy=9.325261,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979586, edge=0.000464, neigh=2.920982, align=5.086719, entropy=9.331245,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978995, edge=0.000465, neigh=3.031991, align=5.084852, entropy=9.333054,s=1.000000, s_hat=1.000000
Time for optimization: 19.96s
Test results:
Top-1: 0.339
Top-10: 0.722
Top-30: 0.817
Top-50: 0.854
Top-100: 0.895
MRR: 0.466
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.061s
Time for attribute perturbation: 0.034s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.36it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.71it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.28it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  7.19it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.56it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:09,  9.87it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.43it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.40it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:18,  4.75it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:17,  5.07it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.25it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.10it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:09,  8.32it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.25it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.75it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:07,  9.85it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.86it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.29it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  6.81it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.28it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.68it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.12it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  8.27it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:07,  8.57it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:08,  7.64it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:07,  8.32it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:08,  7.19it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:09,  5.95it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:10,  5.53it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:10,  5.57it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.23it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:08,  6.44it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:06,  8.14it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:07,  7.12it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  6.65it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  7.01it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.79it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.48it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.04it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.87it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  3.98it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.99it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.80it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:13,  3.09it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.35it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.78it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.64it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.35it/s]
Time for cost matrix: 12.48s
Iter 0: wasserstein=1.156379, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992212, edge=0.000547, neigh=3.025988, align=3.552923, entropy=10.923404,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979023, edge=0.000498, neigh=2.792430, align=4.404412, entropy=10.020802,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976591, edge=0.000482, neigh=2.564305, align=4.723324, entropy=9.696322,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976072, edge=0.000471, neigh=2.598167, align=4.880367, entropy=9.537914,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976021, edge=0.000468, neigh=2.613762, align=4.984930, entropy=9.433057,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975703, edge=0.000465, neigh=2.657193, align=5.057687, entropy=9.360278,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975045, edge=0.000466, neigh=2.778744, align=5.058186, entropy=9.359778,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974070, edge=0.000466, neigh=2.892053, align=5.053402, entropy=9.364562,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973406, edge=0.000467, neigh=2.992203, align=5.051491, entropy=9.366303,s=1.000000, s_hat=1.000000
Time for optimization: 19.45s
Test results:
Top-1: 0.239
Top-10: 0.650
Top-30: 0.783
Top-50: 0.820
Top-100: 0.860
MRR: 0.372
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.066s
Time for attribute perturbation: 0.073s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.55it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:13,  7.03it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  7.07it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.52it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.07it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:16,  5.84it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  5.82it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.32it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.59it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:09,  8.92it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.05it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:12,  6.72it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  5.81it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:15,  5.46it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.31it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  6.79it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:11,  7.19it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.82it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:11,  6.61it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.51it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:09,  7.68it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  7.19it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:13,  5.57it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:12,  5.76it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:10,  6.62it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:11,  6.02it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:11,  5.72it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:08,  7.56it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:08,  7.88it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:08,  7.62it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:06,  9.79it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:07,  7.95it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  8.13it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:07,  8.28it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:06,  8.61it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:07,  6.93it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:09,  5.76it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:08,  6.45it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  7.70it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.67it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  6.95it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.76it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.95it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.37it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.58it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.32it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.96it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.14it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  3.93it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:09,  4.47it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:09,  4.46it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.11it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.61it/s]
Time for cost matrix: 12.19s
Iter 0: wasserstein=1.159997, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994324, edge=0.000546, neigh=3.011522, align=3.567422, entropy=10.909216,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980983, edge=0.000495, neigh=2.811666, align=4.431135, entropy=9.994261,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978634, edge=0.000479, neigh=2.604364, align=4.749153, entropy=9.671062,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978126, edge=0.000470, neigh=2.616332, align=4.898992, entropy=9.519418,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977940, edge=0.000467, neigh=2.632834, align=5.000999, entropy=9.416996,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977473, edge=0.000469, neigh=2.756758, align=5.002018, entropy=9.415948,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976909, edge=0.000471, neigh=2.877333, align=4.994095, entropy=9.423869,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976069, edge=0.000472, neigh=2.989993, align=4.987025, entropy=9.430939,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975466, edge=0.000472, neigh=3.098938, align=4.981869, entropy=9.436025,s=1.000000, s_hat=1.000000
Time for optimization: 19.10s
Test results:
Top-1: 0.280
Top-10: 0.678
Top-30: 0.785
Top-50: 0.820
Top-100: 0.857
MRR: 0.408
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.051s
Time for attribute perturbation: 0.025s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  5.05it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.45it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.42it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.53it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:14,  6.39it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:11,  7.75it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.51it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.79it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.64it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:09,  8.72it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.35it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.93it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.40it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:13,  6.14it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:15,  5.19it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.42it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:10,  7.12it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.63it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:12,  5.84it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:11,  6.21it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.31it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.60it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:11,  6.17it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.40it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:12,  5.50it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:13,  4.81it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:09,  6.58it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:11,  5.79it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:09,  6.42it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:10,  5.88it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:10,  5.96it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:10,  5.69it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:09,  6.34it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:10,  5.60it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.27it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:09,  6.08it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:09,  5.87it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:09,  5.48it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:09,  5.78it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:08,  5.74it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  6.38it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:05,  8.66it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:05,  7.96it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.39it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.33it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.55it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.32it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.29it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.98it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.01it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.75it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.74it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.72it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.85it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.64it/s]
Time for cost matrix: 12.46s
Iter 0: wasserstein=1.158186, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993146, edge=0.000546, neigh=3.016769, align=3.558462, entropy=10.918260,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979997, edge=0.000497, neigh=2.798401, align=4.417960, entropy=10.007454,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977693, edge=0.000481, neigh=2.585175, align=4.735903, entropy=9.684555,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977124, edge=0.000471, neigh=2.607393, align=4.888039, entropy=9.530315,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976925, edge=0.000468, neigh=2.625594, align=4.989726, entropy=9.428264,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976426, edge=0.000470, neigh=2.751322, align=4.992399, entropy=9.425566,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975849, edge=0.000472, neigh=2.868028, align=4.984927, entropy=9.433037,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974990, edge=0.000472, neigh=2.980020, align=4.978616, entropy=9.439348,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974358, edge=0.000473, neigh=3.088030, align=4.974161, entropy=9.443730,s=1.000000, s_hat=1.000000
Time for optimization: 19.36s
Test results:
Top-1: 0.259
Top-10: 0.665
Top-30: 0.790
Top-50: 0.822
Top-100: 0.863
MRR: 0.392
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.068s
Time for attribute perturbation: 0.075s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:25,  3.93it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.32it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.23it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.83it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.56it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:17,  5.35it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.65it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:10,  8.63it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:10,  8.52it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:10,  8.26it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.45it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.68it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.60it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  7.24it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:08,  8.87it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:08,  9.43it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:08,  8.43it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:08,  8.12it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:10,  6.85it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.81it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:13,  5.05it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:12,  5.55it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:11,  6.01it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:10,  6.10it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:08,  7.34it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  6.74it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:07,  7.85it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  8.13it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:05, 10.00it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:05, 11.19it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:06,  8.16it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:05,  9.36it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:07,  6.90it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.11it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.27it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  5.88it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.79it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  4.07it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.38it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.76it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:16,  2.87it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:15,  2.97it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  2.99it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.21it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.42it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.54it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.26it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.90it/s]
Time for cost matrix: 12.64s
Iter 0: wasserstein=1.155736, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992024, edge=0.000548, neigh=3.024902, align=3.537746, entropy=10.938790,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978714, edge=0.000499, neigh=2.787398, align=4.393392, entropy=10.031980,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976245, edge=0.000483, neigh=2.560413, align=4.716318, entropy=9.704137,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975629, edge=0.000472, neigh=2.599065, align=4.874137, entropy=9.544213,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975590, edge=0.000468, neigh=2.614037, align=4.978378, entropy=9.439611,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975312, edge=0.000465, neigh=2.660555, align=5.051148, entropy=9.366818,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974649, edge=0.000467, neigh=2.780334, align=5.052356, entropy=9.365608,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973677, edge=0.000467, neigh=2.893822, align=5.047723, entropy=9.370241,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973033, edge=0.000468, neigh=2.995829, align=5.045702, entropy=9.372089,s=1.000000, s_hat=1.000000
Time for optimization: 19.73s
Test results:
Top-1: 0.238
Top-10: 0.648
Top-30: 0.780
Top-50: 0.811
Top-100: 0.857
MRR: 0.369
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.020s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.75it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:07, 12.81it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:04, 22.32it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:03, 23.94it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 28.10it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:02, 28.57it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:02, 28.76it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:02, 27.04it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:02, 28.02it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:02, 27.35it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:01<00:02, 29.11it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:01<00:01, 31.06it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:01<00:02, 26.51it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:01<00:02, 25.26it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:01<00:02, 24.69it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:01, 27.69it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:01, 26.06it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:08,  5.56it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:08,  5.48it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:08,  5.43it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:08,  5.55it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:08,  5.58it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:06,  6.38it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:07,  5.83it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:07,  5.55it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:06,  5.89it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:06,  6.49it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:07,  5.37it/s]
Time for cost matrix: 4.76s
Iter 0: wasserstein=1.166043, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998926, edge=0.000543, neigh=3.056141, align=3.625973, entropy=10.850239,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.985326, edge=0.000488, neigh=2.872817, align=4.490144, entropy=9.935378,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982894, edge=0.000475, neigh=2.645384, align=4.803399, entropy=9.616331,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982530, edge=0.000466, neigh=2.655891, align=4.962880, entropy=9.455491,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982459, edge=0.000463, neigh=2.636493, align=5.062213, entropy=9.355787,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982164, edge=0.000461, neigh=2.666958, align=5.132513, entropy=9.285453,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.981504, edge=0.000463, neigh=2.796773, align=5.134259, entropy=9.283705,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.980556, edge=0.000463, neigh=2.918703, align=5.130518, entropy=9.287445,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980003, edge=0.000464, neigh=3.025919, align=5.129428, entropy=9.288512,s=1.000000, s_hat=1.000000
Time for optimization: 9.73s
Test results:
Top-1: 0.383
Top-10: 0.764
Top-30: 0.847
Top-50: 0.869
Top-100: 0.903
MRR: 0.511
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.029s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:06, 15.13it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:04, 22.44it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:03, 25.56it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:03, 24.41it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 27.68it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:02, 29.13it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:00<00:02, 26.02it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:00<00:02, 28.70it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:01<00:02, 30.35it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:01<00:02, 23.45it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:01<00:02, 23.37it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:01<00:02, 24.44it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:01<00:02, 27.62it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:01<00:01, 29.23it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:01<00:01, 28.18it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:01, 26.28it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.34it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:06,  7.52it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  9.15it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:05,  9.00it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:05,  8.10it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:04,  8.94it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:04,  9.09it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.27it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.23it/s]
Time for cost matrix: 4.03s
Iter 0: wasserstein=1.159530, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994658, edge=0.000545, neigh=3.016642, align=3.564005, entropy=10.912485,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981372, edge=0.000495, neigh=2.807526, align=4.428362, entropy=9.997010,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979010, edge=0.000479, neigh=2.616085, align=4.747314, entropy=9.673214,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978383, edge=0.000470, neigh=2.628202, align=4.903953, entropy=9.514415,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978180, edge=0.000466, neigh=2.638275, align=5.007330, entropy=9.410661,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977744, edge=0.000469, neigh=2.748745, align=5.009181, entropy=9.408784,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977131, edge=0.000471, neigh=2.872470, align=5.001073, entropy=9.416891,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976282, edge=0.000471, neigh=2.990174, align=4.994355, entropy=9.423609,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975653, edge=0.000472, neigh=3.099405, align=4.991439, entropy=9.426463,s=1.000000, s_hat=1.000000
Time for optimization: 11.12s
Test results:
Top-1: 0.289
Top-10: 0.683
Top-30: 0.785
Top-50: 0.822
Top-100: 0.870
MRR: 0.414
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.023s
Time for attribute perturbation: 0.006s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:02, 33.61it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:02, 30.77it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:02, 32.50it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:02, 32.73it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:00<00:02, 29.38it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:00<00:02, 26.82it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:00<00:03, 23.76it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:03, 22.27it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:01<00:02, 23.76it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:01<00:02, 22.95it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:01<00:03, 16.36it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:02<00:05, 11.48it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:02<00:05, 10.92it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:02<00:06,  8.86it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:02<00:05,  9.91it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:02<00:05,  9.29it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:03<00:05,  9.57it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:03<00:05,  9.54it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:03<00:03, 13.77it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.12it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.15it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.07it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.24it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.07it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.19it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.20it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.56it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.46it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.73it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.21it/s]
Time for cost matrix: 8.21s
Iter 0: wasserstein=1.158497, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993494, edge=0.000547, neigh=3.028645, align=3.560088, entropy=10.916439,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980397, edge=0.000498, neigh=2.787529, align=4.413554, entropy=10.011912,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977962, edge=0.000482, neigh=2.563711, align=4.729792, entropy=9.689967,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977329, edge=0.000471, neigh=2.602511, align=4.888875, entropy=9.529424,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977264, edge=0.000467, neigh=2.622929, align=4.990649, entropy=9.427339,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976782, edge=0.000469, neigh=2.738441, align=4.995264, entropy=9.422701,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976169, edge=0.000471, neigh=2.854591, align=4.989019, entropy=9.428945,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975289, edge=0.000471, neigh=2.962433, align=4.982685, entropy=9.435279,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974647, edge=0.000472, neigh=3.067779, align=4.978713, entropy=9.439172,s=1.000000, s_hat=1.000000
Time for optimization: 18.87s
Test results:
Top-1: 0.264
Top-10: 0.657
Top-30: 0.797
Top-50: 0.841
Top-100: 0.869
MRR: 0.391
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.048s
Time for attribute perturbation: 0.008s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.76it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:16,  5.90it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.68it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:14,  6.45it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:16,  5.79it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.30it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  5.89it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  5.92it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  6.00it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:10,  8.20it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.52it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:12,  7.07it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:09,  8.94it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:10,  8.26it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.53it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.58it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.24it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:09,  7.79it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.35it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.40it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  7.24it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.55it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.81it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:08,  8.15it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  7.26it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:07,  8.92it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:08,  7.78it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:08,  7.78it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:08,  7.93it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.05it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:10,  5.81it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:09,  6.45it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:08,  6.63it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:08,  6.53it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:08,  6.65it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.52it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:07,  7.19it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  7.31it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:05,  8.71it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:04, 11.03it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:04,  9.60it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.22it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.74it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.65it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.61it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.70it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.90it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.89it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.05it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.79it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.78it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.01it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.47it/s]
Time for cost matrix: 11.88s
Iter 0: wasserstein=1.157418, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993159, edge=0.000546, neigh=3.024490, align=3.554767, entropy=10.921650,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979974, edge=0.000497, neigh=2.785982, align=4.406513, entropy=10.018833,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977427, edge=0.000481, neigh=2.575036, align=4.725566, entropy=9.694202,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976868, edge=0.000470, neigh=2.608763, align=4.886636, entropy=9.531660,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976793, edge=0.000467, neigh=2.621629, align=4.992730, entropy=9.425258,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976500, edge=0.000464, neigh=2.662214, align=5.063921, entropy=9.354045,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975857, edge=0.000465, neigh=2.779136, align=5.063781, entropy=9.354183,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974830, edge=0.000466, neigh=2.889941, align=5.058462, entropy=9.359502,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974191, edge=0.000467, neigh=2.989698, align=5.056473, entropy=9.361329,s=1.000000, s_hat=1.000000
Time for optimization: 19.22s
Test results:
Top-1: 0.253
Top-10: 0.660
Top-30: 0.797
Top-50: 0.830
Top-100: 0.872
MRR: 0.386
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.045s
Time for attribute perturbation: 0.023s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.63it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:11,  8.72it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  6.87it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.65it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:10,  8.54it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:10,  8.47it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:10,  8.45it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.23it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  7.12it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:13,  6.29it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:14,  5.96it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.44it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:17,  4.77it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:17,  4.66it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:12,  6.57it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  6.12it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:09,  7.94it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:10,  7.03it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.48it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:12,  6.03it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:13,  5.66it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:13,  5.28it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:13,  5.33it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.66it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:11,  6.13it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  8.44it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:08,  7.46it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:07,  8.51it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:08,  7.45it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:10,  6.12it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:11,  5.37it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:12,  5.00it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:10,  5.71it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:10,  5.56it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:09,  5.87it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  6.09it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:09,  6.10it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.41it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:06,  7.60it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:07,  7.24it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:07,  6.94it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  7.47it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.01it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.34it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:08,  5.63it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.27it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.50it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.18it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.88it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.20it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:15,  2.85it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  3.03it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.35it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.25it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.43it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.55it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.06it/s]
Time for cost matrix: 13.37s
Iter 0: wasserstein=1.161601, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995137, edge=0.000544, neigh=3.020375, align=3.587164, entropy=10.890183,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981429, edge=0.000493, neigh=2.827696, align=4.450972, entropy=9.974607,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979195, edge=0.000478, neigh=2.621345, align=4.764246, entropy=9.655691,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978772, edge=0.000469, neigh=2.630692, align=4.924394, entropy=9.494007,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978745, edge=0.000466, neigh=2.609696, align=5.021198, entropy=9.396808,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978544, edge=0.000464, neigh=2.643995, align=5.091058, entropy=9.326908,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977887, edge=0.000465, neigh=2.776325, align=5.093138, entropy=9.324826,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976956, edge=0.000466, neigh=2.890966, align=5.088608, entropy=9.329356,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976312, edge=0.000466, neigh=2.992106, align=5.084582, entropy=9.333331,s=1.000000, s_hat=1.000000
Time for optimization: 19.73s
Test results:
Top-1: 0.306
Top-10: 0.692
Top-30: 0.810
Top-50: 0.844
Top-100: 0.880
MRR: 0.434
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.010s
Time for attribute perturbation: 0.068s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:06, 15.64it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:07, 13.21it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:08, 11.60it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:12,  7.39it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.59it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.85it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.32it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:17,  5.16it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:17,  4.92it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  4.83it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:18,  4.68it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:18,  4.54it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:19,  4.32it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:20,  4.10it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:20,  3.96it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:20,  3.90it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:17,  4.55it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:16,  4.64it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:16,  4.61it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:16,  4.58it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:15,  4.97it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:13,  5.51it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:10,  6.79it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:09,  7.52it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:09,  7.55it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:08,  8.26it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:08,  8.00it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:06<00:07,  8.04it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:07,  8.11it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:07,  8.39it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:08,  7.35it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:08,  6.94it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:08,  7.02it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:07<00:09,  6.09it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:07<00:10,  5.42it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:09,  6.11it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:08,  6.47it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:07,  7.19it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:07,  7.11it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:05,  8.60it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:05,  9.37it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:05,  8.34it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.27it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.48it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.42it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.58it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.71it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.79it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.30it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.79it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.29it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.59it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.56it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.32it/s]
Time for cost matrix: 13.00s
Iter 0: wasserstein=1.158121, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994193, edge=0.000546, neigh=3.016709, align=3.544287, entropy=10.932331,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980885, edge=0.000497, neigh=2.788431, align=4.402454, entropy=10.022965,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978459, edge=0.000482, neigh=2.570847, align=4.724729, entropy=9.695784,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977898, edge=0.000470, neigh=2.602435, align=4.881213, entropy=9.537164,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977850, edge=0.000467, neigh=2.614628, align=4.984057, entropy=9.433935,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977594, edge=0.000464, neigh=2.653986, align=5.051940, entropy=9.366025,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976958, edge=0.000466, neigh=2.773067, align=5.051493, entropy=9.366471,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975997, edge=0.000467, neigh=2.885247, align=5.045803, entropy=9.372161,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975344, edge=0.000467, neigh=2.988027, align=5.043922, entropy=9.373838,s=1.000000, s_hat=1.000000
Time for optimization: 18.99s
Test results:
Top-1: 0.241
Top-10: 0.657
Top-30: 0.793
Top-50: 0.823
Top-100: 0.866
MRR: 0.377
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.062s
Time for attribute perturbation: 0.080s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.51it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.67it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:16,  5.84it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.43it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:14,  6.50it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:12,  7.72it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:09,  9.55it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.89it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  8.76it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:08,  9.84it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:08,  9.84it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:06, 11.82it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:09,  8.50it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:11,  7.06it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:10,  7.35it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:08,  9.37it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.31it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:10,  7.18it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:09,  7.41it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.47it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  7.32it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:08,  7.90it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:08,  7.17it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:09,  6.49it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:09,  6.63it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:09,  6.53it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  7.54it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:08,  6.76it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:09,  6.07it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:08,  6.27it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:07,  6.89it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  7.42it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  6.94it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:07,  7.12it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:06,  8.05it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:07,  6.88it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.73it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  5.88it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.15it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.78it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.48it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.28it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  3.87it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.10it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.83it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  3.94it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:10,  3.89it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.79it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.68it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.56it/s]
Time for cost matrix: 12.07s
Iter 0: wasserstein=1.157566, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993397, edge=0.000546, neigh=3.013393, align=3.544604, entropy=10.931822,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980061, edge=0.000496, neigh=2.782321, align=4.400859, entropy=10.024328,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977685, edge=0.000481, neigh=2.566574, align=4.719497, entropy=9.700833,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977110, edge=0.000470, neigh=2.598573, align=4.877836, entropy=9.540512,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977060, edge=0.000467, neigh=2.613267, align=4.979079, entropy=9.438910,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976748, edge=0.000465, neigh=2.653288, align=5.047538, entropy=9.370428,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976080, edge=0.000466, neigh=2.775451, align=5.048163, entropy=9.369801,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975154, edge=0.000467, neigh=2.882163, align=5.043203, entropy=9.374761,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974518, edge=0.000467, neigh=2.987704, align=5.041743, entropy=9.376066,s=1.000000, s_hat=1.000000
Time for optimization: 18.80s
Test results:
Top-1: 0.250
Top-10: 0.650
Top-30: 0.783
Top-50: 0.816
Top-100: 0.859
MRR: 0.376
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.068s
Time for attribute perturbation: 0.054s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  5.92it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.57it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.43it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  7.30it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:09,  9.75it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.60it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.78it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:17,  5.13it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  4.94it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:13,  6.58it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.28it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.48it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  6.97it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:12,  6.73it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:12,  6.39it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.83it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:11,  6.77it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:08,  8.71it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:07,  9.25it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:07,  9.92it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:07,  9.81it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:06, 10.59it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:07,  8.57it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:07,  8.36it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:09,  6.50it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:10,  5.83it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:11,  5.65it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:11,  5.50it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:11,  5.25it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:10,  5.55it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:07,  7.67it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:05,  9.81it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:05,  9.20it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:05,  9.38it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:05,  8.99it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:05,  8.67it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.64it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.12it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.24it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.15it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.96it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.56it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.47it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.27it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.42it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.35it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.36it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.41it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.18it/s]
Time for cost matrix: 12.18s
Iter 0: wasserstein=1.157305, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993544, edge=0.000547, neigh=3.018725, align=3.539177, entropy=10.937396,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980236, edge=0.000498, neigh=2.786378, align=4.393867, entropy=10.031519,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977797, edge=0.000482, neigh=2.557919, align=4.717917, entropy=9.702342,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977180, edge=0.000470, neigh=2.600183, align=4.875923, entropy=9.542491,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977117, edge=0.000467, neigh=2.615561, align=4.979750, entropy=9.438246,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976847, edge=0.000464, neigh=2.649847, align=5.050798, entropy=9.367168,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976198, edge=0.000465, neigh=2.764746, align=5.051576, entropy=9.366388,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975248, edge=0.000466, neigh=2.876075, align=5.046447, entropy=9.371517,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974604, edge=0.000466, neigh=2.977101, align=5.044458, entropy=9.373356,s=1.000000, s_hat=1.000000
Time for optimization: 18.89s
Test results:
Top-1: 0.244
Top-10: 0.658
Top-30: 0.796
Top-50: 0.828
Top-100: 0.867
MRR: 0.376
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.054s
Time for attribute perturbation: 0.059s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  5.01it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:20,  4.70it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.65it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.42it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.42it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:17,  5.27it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.54it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.80it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.66it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  6.96it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:10,  8.59it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:08, 10.16it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:08, 10.26it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.42it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:07, 10.24it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:07, 10.30it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:08,  8.86it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  6.81it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:10,  6.96it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.48it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.67it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:11,  6.01it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:12,  5.54it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:09,  6.82it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  6.78it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.25it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:09,  6.52it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:11,  5.45it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:11,  5.36it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:08,  6.61it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:07,  7.59it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.84it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:06,  7.64it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:07,  6.81it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  7.82it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.22it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:05,  8.33it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.83it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.75it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.96it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.00it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  3.99it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.56it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.27it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.56it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.77it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.74it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.95it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.47it/s]
Time for cost matrix: 12.28s
Iter 0: wasserstein=1.165117, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997303, edge=0.000544, neigh=3.037486, align=3.603529, entropy=10.873483,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983464, edge=0.000493, neigh=2.839553, align=4.457932, entropy=9.967621,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981323, edge=0.000479, neigh=2.634029, align=4.758962, entropy=9.661062,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981029, edge=0.000470, neigh=2.643688, align=4.911865, entropy=9.506574,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981075, edge=0.000466, neigh=2.626107, align=5.012155, entropy=9.405860,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980868, edge=0.000463, neigh=2.663660, align=5.089779, entropy=9.328188,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980253, edge=0.000465, neigh=2.787712, align=5.092658, entropy=9.325306,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979305, edge=0.000466, neigh=2.907566, align=5.087582, entropy=9.330382,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978670, edge=0.000466, neigh=3.017775, align=5.084518, entropy=9.333386,s=1.000000, s_hat=1.000000
Time for optimization: 19.80s
Test results:
Top-1: 0.308
Top-10: 0.715
Top-30: 0.834
Top-50: 0.866
Top-100: 0.898
MRR: 0.443
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.066s
Time for attribute perturbation: 0.049s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:31,  3.12it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.24it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:20,  4.76it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.87it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:16,  5.73it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:16,  5.53it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:18,  4.98it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:17,  5.12it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:17,  5.25it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.36it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:12,  6.98it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  5.90it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.38it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.91it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:11,  6.88it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:11,  7.03it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:10,  7.38it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:09,  8.04it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:10,  7.60it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.74it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:09,  7.43it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:10,  7.15it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  5.92it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:10,  6.38it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.63it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:10,  6.42it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:11,  5.67it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:12,  5.22it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:12,  5.07it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:09,  6.94it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:08,  7.05it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:08,  7.18it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:06,  8.49it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:07,  8.03it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:08,  7.09it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:07,  7.63it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:08,  6.37it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:07,  7.10it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:07,  7.21it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:07,  6.56it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  6.81it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  7.28it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.63it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.40it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:08,  5.71it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:08,  5.34it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.65it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:09,  4.77it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.27it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.14it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.84it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:11,  3.69it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.48it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.44it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.48it/s]
Time for cost matrix: 13.36s
Iter 0: wasserstein=1.157242, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993594, edge=0.000547, neigh=3.014398, align=3.540793, entropy=10.935816,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980320, edge=0.000498, neigh=2.784495, align=4.393795, entropy=10.031593,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977959, edge=0.000482, neigh=2.558386, align=4.715128, entropy=9.705334,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977359, edge=0.000471, neigh=2.592038, align=4.873102, entropy=9.545265,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977305, edge=0.000467, neigh=2.608010, align=4.976538, entropy=9.441453,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977014, edge=0.000464, neigh=2.649059, align=5.048537, entropy=9.369428,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976334, edge=0.000466, neigh=2.766815, align=5.049447, entropy=9.368517,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975384, edge=0.000466, neigh=2.878012, align=5.044906, entropy=9.373058,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974749, edge=0.000467, neigh=2.978616, align=5.043140, entropy=9.374671,s=1.000000, s_hat=1.000000
Time for optimization: 20.26s
Test results:
Top-1: 0.241
Top-10: 0.658
Top-30: 0.792
Top-50: 0.826
Top-100: 0.869
MRR: 0.373
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.055s
Time for attribute perturbation: 0.070s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.23it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.66it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.33it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.54it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:13,  7.21it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.57it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.78it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  5.71it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:18,  4.90it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.35it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:12,  6.91it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:10,  7.81it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.37it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:13,  6.24it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:13,  6.11it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  5.88it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:12,  6.53it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:10,  7.71it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:09,  8.08it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.89it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:13,  5.61it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:15,  4.83it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:16,  4.56it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:13,  5.19it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:10,  6.61it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:10,  6.29it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:11,  5.97it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:11,  6.05it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:10,  6.50it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  6.99it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:10,  6.25it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:09,  6.42it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:07,  7.78it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:06,  9.36it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:05, 10.87it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:06,  8.83it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:06,  7.89it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:06,  7.45it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  6.33it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:07,  6.63it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.63it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.41it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.42it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.60it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.58it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:16,  2.87it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:15,  3.05it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.12it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.31it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.55it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.47it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.48it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.77it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.19it/s]
Time for cost matrix: 12.96s
Iter 0: wasserstein=1.158931, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994330, edge=0.000546, neigh=3.006906, align=3.550767, entropy=10.925760,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981101, edge=0.000498, neigh=2.789557, align=4.405661, entropy=10.019680,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978688, edge=0.000482, neigh=2.579976, align=4.722089, entropy=9.697736,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978220, edge=0.000471, neigh=2.598509, align=4.877389, entropy=9.540931,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978044, edge=0.000468, neigh=2.611468, align=4.984202, entropy=9.433788,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977517, edge=0.000470, neigh=2.731693, align=4.988611, entropy=9.429354,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976869, edge=0.000471, neigh=2.848185, align=4.981161, entropy=9.436803,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975966, edge=0.000472, neigh=2.964379, align=4.974376, entropy=9.443588,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975317, edge=0.000472, neigh=3.078497, align=4.971661, entropy=9.446239,s=1.000000, s_hat=1.000000
Time for optimization: 19.14s
Test results:
Top-1: 0.251
Top-10: 0.659
Top-30: 0.783
Top-50: 0.827
Top-100: 0.861
MRR: 0.383
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.059s
Time for attribute perturbation: 0.066s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  5.11it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:13,  7.11it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:11,  8.41it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  7.22it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:15,  6.23it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.86it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.50it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.71it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  6.03it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.70it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  6.95it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:10,  7.92it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:09,  9.15it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:10,  7.79it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  7.21it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.69it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:08,  9.67it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:09,  8.23it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:09,  8.05it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  8.00it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.37it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:11,  6.27it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.80it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.06it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.79it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:10,  6.57it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  6.84it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:08,  7.74it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:08,  7.90it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:07,  8.05it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  7.42it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  6.95it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:08,  6.82it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:08,  6.99it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:06,  8.51it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:07,  7.91it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.69it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:09,  5.87it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:09,  5.50it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:08,  5.81it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:08,  6.33it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  6.92it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.10it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.82it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.96it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.34it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.53it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.59it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.77it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.67it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.92it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  3.91it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.23it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:14,  2.79it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.16it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.05it/s]
Time for cost matrix: 12.61s
Iter 0: wasserstein=1.162768, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996030, edge=0.000545, neigh=3.021538, align=3.571977, entropy=10.904382,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982644, edge=0.000496, neigh=2.796813, align=4.430555, entropy=9.994833,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980480, edge=0.000480, neigh=2.593779, align=4.742495, entropy=9.677829,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980035, edge=0.000470, neigh=2.617748, align=4.896278, entropy=9.522179,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979881, edge=0.000467, neigh=2.623870, align=5.000534, entropy=9.417467,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979412, edge=0.000468, neigh=2.735877, align=5.007928, entropy=9.410038,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978807, edge=0.000470, neigh=2.853269, align=5.003265, entropy=9.414699,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977862, edge=0.000471, neigh=2.979157, align=4.996713, entropy=9.421251,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977254, edge=0.000471, neigh=3.095597, align=4.993798, entropy=9.424116,s=1.000000, s_hat=1.000000
Time for optimization: 20.24s
Test results:
Top-1: 0.293
Top-10: 0.688
Top-30: 0.802
Top-50: 0.840
Top-100: 0.883
MRR: 0.422
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.060s
Time for attribute perturbation: 0.014s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  5.03it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.82it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.78it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.62it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.26it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:15,  5.95it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.29it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  5.96it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  5.92it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.18it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.46it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  6.16it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:12,  6.72it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:10,  8.31it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.38it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  7.04it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  6.01it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:10,  7.11it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.52it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.02it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  7.41it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.91it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.85it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.27it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  7.61it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:09,  7.20it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:10,  6.58it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:11,  5.73it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:12,  5.03it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:11,  5.58it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:10,  6.16it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:09,  6.10it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:10,  5.87it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:09,  6.14it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:07,  8.14it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:06,  8.05it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:06,  8.30it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:05, 10.00it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:05,  9.34it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  8.07it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.58it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.81it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.27it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.58it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.71it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  3.92it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.44it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.64it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.56it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.47it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.35it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.35it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.14it/s]
Time for cost matrix: 12.63s
Iter 0: wasserstein=1.157176, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993475, edge=0.000547, neigh=3.017025, align=3.541868, entropy=10.934670,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980171, edge=0.000498, neigh=2.784581, align=4.394998, entropy=10.030394,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977789, edge=0.000482, neigh=2.555698, align=4.715996, entropy=9.704463,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977180, edge=0.000471, neigh=2.592233, align=4.874068, entropy=9.544301,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977131, edge=0.000468, neigh=2.609972, align=4.978063, entropy=9.439928,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976859, edge=0.000465, neigh=2.647973, align=5.049187, entropy=9.368779,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976203, edge=0.000466, neigh=2.766275, align=5.049591, entropy=9.368373,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975249, edge=0.000467, neigh=2.877401, align=5.044408, entropy=9.373556,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974619, edge=0.000467, neigh=2.977896, align=5.042216, entropy=9.375599,s=1.000000, s_hat=1.000000
Time for optimization: 25.63s
Test results:
Top-1: 0.241
Top-10: 0.650
Top-30: 0.783
Top-50: 0.819
Top-100: 0.863
MRR: 0.374
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.093s
Time for attribute perturbation: 0.114s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:43,  2.29it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:35,  2.75it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:36,  2.63it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:37,  2.55it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:35,  2.69it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:36,  2.55it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:39,  2.37it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:03<00:37,  2.42it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:34,  2.63it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:34,  2.63it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:04<00:33,  2.64it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:33,  2.61it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:31,  2.78it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:05<00:28,  3.02it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:28,  3.00it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:30,  2.78it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:06<00:29,  2.81it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:06<00:28,  2.92it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:26,  3.04it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:07<00:28,  2.78it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:07<00:29,  2.64it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:23,  3.36it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:08<00:19,  4.02it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:08<00:19,  3.83it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:25,  2.93it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:09<00:27,  2.68it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:09<00:27,  2.69it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:10<00:28,  2.49it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:10<00:29,  2.39it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:11<00:30,  2.28it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:11<00:28,  2.44it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:11<00:29,  2.33it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:12<00:26,  2.50it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:12<00:26,  2.51it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:12<00:22,  2.92it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:13<00:23,  2.75it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:13<00:24,  2.61it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:14<00:23,  2.66it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:14<00:22,  2.76it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:14<00:22,  2.67it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:15<00:22,  2.57it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:15<00:22,  2.62it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:16<00:23,  2.47it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:16<00:23,  2.34it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:16<00:23,  2.38it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:17<00:19,  2.73it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:17<00:19,  2.68it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:17<00:19,  2.64it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:18<00:18,  2.74it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:18<00:15,  3.19it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:18<00:14,  3.45it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:18<00:11,  4.26it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:19<00:11,  3.96it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:19<00:17,  2.71it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:29,  1.65it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:24,  1.99it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:25,  1.88it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:02<00:25,  1.78it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:25,  1.73it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:03<00:26,  1.69it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:04<00:25,  1.71it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:04<00:24,  1.73it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:05<00:21,  1.88it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:20,  1.93it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:23,  1.67it/s]
Time for cost matrix: 28.46s
Iter 0: wasserstein=1.157987, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993812, edge=0.000547, neigh=3.015299, align=3.545082, entropy=10.931487,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980519, edge=0.000498, neigh=2.795058, align=4.401448, entropy=10.023892,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978181, edge=0.000482, neigh=2.582405, align=4.721499, entropy=9.698979,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977690, edge=0.000471, neigh=2.602734, align=4.876324, entropy=9.542049,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977501, edge=0.000468, neigh=2.616693, align=4.982142, entropy=9.435850,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976993, edge=0.000470, neigh=2.736888, align=4.986390, entropy=9.431576,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976363, edge=0.000471, neigh=2.852896, align=4.978890, entropy=9.439074,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975459, edge=0.000472, neigh=2.970241, align=4.971878, entropy=9.446086,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974832, edge=0.000473, neigh=3.083903, align=4.968869, entropy=9.449024,s=1.000000, s_hat=1.000000
Time for optimization: 34.82s
Test results:
Top-1: 0.255
Top-10: 0.664
Top-30: 0.783
Top-50: 0.827
Top-100: 0.866
MRR: 0.383
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.093s
Time for attribute perturbation: 0.120s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:35,  2.82it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:33,  2.95it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:24,  3.90it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:25,  3.83it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:26,  3.58it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:24,  3.77it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:24,  3.78it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:24,  3.74it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:22,  3.98it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:20,  4.37it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:22,  3.96it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:23,  3.79it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:19,  4.56it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:17,  4.84it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:19,  4.24it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.29it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.16it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:20,  3.89it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:22,  3.56it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:23,  3.31it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:24,  3.16it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:24,  3.08it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:06<00:25,  3.03it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:06<00:27,  2.77it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:07<00:27,  2.72it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:27,  2.65it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:27,  2.65it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:25,  2.74it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:08<00:22,  3.13it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:08<00:17,  3.89it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:09<00:17,  3.99it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:09<00:18,  3.65it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:09<00:15,  4.36it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:09<00:10,  6.36it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:09<00:09,  6.52it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:09<00:08,  7.15it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:10<00:06,  8.89it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:10<00:06,  8.63it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:10<00:08,  7.09it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:10<00:07,  7.46it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:10<00:05,  9.74it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:04, 12.32it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:04, 12.30it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:11<00:04, 11.29it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.67it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:08,  5.82it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:09,  5.00it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.68it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:08,  5.25it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:09,  4.99it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.42it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:14,  2.92it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:17,  2.41it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:17,  2.29it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:14,  2.76it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.94it/s]
Time for cost matrix: 16.29s
Iter 0: wasserstein=1.157623, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993994, edge=0.000547, neigh=3.010981, align=3.535054, entropy=10.941558,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980720, edge=0.000499, neigh=2.785193, align=4.390425, entropy=10.034980,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978300, edge=0.000482, neigh=2.558185, align=4.714111, entropy=9.706345,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977679, edge=0.000471, neigh=2.593891, align=4.874290, entropy=9.544081,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977605, edge=0.000467, neigh=2.607563, align=4.979529, entropy=9.438462,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977322, edge=0.000464, neigh=2.648607, align=5.051103, entropy=9.366862,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976641, edge=0.000466, neigh=2.766934, align=5.051254, entropy=9.366710,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975720, edge=0.000466, neigh=2.877703, align=5.046242, entropy=9.371721,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975089, edge=0.000467, neigh=2.977269, align=5.044119, entropy=9.373698,s=1.000000, s_hat=1.000000
Time for optimization: 22.26s
Test results:
Top-1: 0.249
Top-10: 0.663
Top-30: 0.794
Top-50: 0.830
Top-100: 0.876
MRR: 0.380
Loading datasets/Douban.mat...
Run 1/1
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.013s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Iter 0: wasserstein=1.127491, edge=0.001135, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.791489, edge=0.001329, neigh=5.683800, align=4.896898, entropy=9.580899,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.763527, edge=0.000886, neigh=5.776975, align=5.452750, entropy=8.971920,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.760330, edge=0.000900, neigh=6.233625, align=5.493901, entropy=8.924694,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.760286, edge=0.000919, neigh=6.615016, align=5.463702, entropy=8.954404,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.760849, edge=0.000927, neigh=6.977295, align=5.432251, entropy=8.985785,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.761259, edge=0.000930, neigh=7.348690, align=5.414225, entropy=9.003747,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.761353, edge=0.000933, neigh=7.614799, align=5.401758, entropy=9.016206,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.761212, edge=0.000940, neigh=7.814715, align=5.391095, entropy=9.026416,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.761322, edge=0.000946, neigh=7.980967, align=5.382917, entropy=9.034051,s=1.000000, s_hat=1.000000
Time for optimization: 18.38s
Test results:
Top-1: 0.686
Top-10: 0.949
Top-30: 0.981
Top-50: 0.987
Top-100: 0.994
MRR: 0.784
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.007s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:12,  7.88it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.63it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  7.35it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:09, 10.42it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:08, 11.49it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:10,  8.53it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.85it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  6.79it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  6.72it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:15,  5.57it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  5.67it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:18,  4.66it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:18,  4.52it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:19,  4.17it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:17,  4.72it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:14,  5.46it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:15,  5.09it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:16,  4.59it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:17,  4.40it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:17,  4.19it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:18,  3.92it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:21,  3.45it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:17,  4.02it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:12,  5.44it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:11,  5.81it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:08,  7.56it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:07,  9.09it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:06<00:05, 10.74it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:05, 11.04it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:04, 11.81it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:06,  8.75it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:07,  7.27it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:07,  7.12it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:07,  6.95it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:08,  6.18it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  7.70it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.60it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:06,  7.61it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.39it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.38it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.53it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.57it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.49it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.83it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.20it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:09,  4.37it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:10,  4.20it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.11it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:13,  3.06it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.34it/s]
Time for cost matrix: 12.94s
Iter 0: wasserstein=1.167556, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.979210, edge=0.000538, neigh=3.816250, align=4.166030, entropy=10.310614,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.965488, edge=0.000477, neigh=3.353795, align=4.957811, entropy=9.466796,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.963109, edge=0.000470, neigh=3.150655, align=5.197616, entropy=9.221350,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.962845, edge=0.000466, neigh=3.013744, align=5.294155, entropy=9.124038,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.962856, edge=0.000466, neigh=3.047253, align=5.349017, entropy=9.068967,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.962646, edge=0.000468, neigh=3.183049, align=5.347862, entropy=9.070103,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.962331, edge=0.000469, neigh=3.320161, align=5.341142, entropy=9.076822,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.961489, edge=0.000470, neigh=3.459235, align=5.334525, entropy=9.083439,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.960873, edge=0.000470, neigh=3.583618, align=5.331807, entropy=9.085940,s=1.000000, s_hat=1.000000
Time for optimization: 19.78s
Test results:
Top-1: 0.533
Top-10: 0.858
Top-30: 0.913
Top-50: 0.934
Top-100: 0.951
MRR: 0.648
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.033s
Time for attribute perturbation: 0.070s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.45it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:16,  5.99it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  7.14it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.93it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  6.84it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:15,  5.88it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:16,  5.52it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  5.91it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.17it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:15,  5.76it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.34it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:11,  7.24it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:10,  7.90it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:08,  9.77it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:09,  8.33it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.78it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.84it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:12,  6.13it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  7.27it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:08,  8.09it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.12it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.58it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:06,  9.92it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:07,  9.38it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:06,  9.61it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:07,  8.84it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  7.53it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:09,  6.64it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:09,  6.46it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:06,  8.22it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:07,  7.81it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:05,  9.20it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:04, 10.41it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:04, 10.16it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:04, 11.90it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:06,  7.64it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.06it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.97it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.39it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.60it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.99it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.64it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.62it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.54it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.79it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.70it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.26it/s]
Time for cost matrix: 11.96s
Iter 0: wasserstein=1.172305, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.981079, edge=0.000536, neigh=3.943654, align=4.241237, entropy=10.235255,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.966798, edge=0.000475, neigh=3.409026, align=5.011476, entropy=9.413888,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.964492, edge=0.000469, neigh=3.250704, align=5.229236, entropy=9.189866,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.964426, edge=0.000466, neigh=3.092104, align=5.314234, entropy=9.103971,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.964557, edge=0.000467, neigh=3.086768, align=5.370282, entropy=9.047709,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.964300, edge=0.000469, neigh=3.222596, align=5.370179, entropy=9.047787,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.963996, edge=0.000471, neigh=3.368294, align=5.363029, entropy=9.054935,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.963270, edge=0.000471, neigh=3.510104, align=5.355574, entropy=9.062390,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.962716, edge=0.000472, neigh=3.641340, align=5.351721, entropy=9.066209,s=1.000000, s_hat=1.000000
Time for optimization: 20.92s
Test results:
Top-1: 0.556
Top-10: 0.885
Top-30: 0.944
Top-50: 0.963
Top-100: 0.977
MRR: 0.675
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.050s
Time for attribute perturbation: 0.064s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.82it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.98it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:09, 10.46it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:09, 10.09it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.25it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.30it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  8.02it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  7.04it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:13,  6.51it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:13,  6.30it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.47it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.28it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.77it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:15,  5.24it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:17,  4.59it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:14,  5.44it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.27it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:14,  5.55it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.39it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.79it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:12,  6.02it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:13,  5.30it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:13,  5.21it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.90it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:08,  7.83it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:09,  7.09it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:11,  5.76it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:10,  6.37it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  6.64it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:07,  8.49it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  8.04it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:06,  9.02it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:06,  9.01it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:06,  8.44it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:05,  9.74it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:05,  9.61it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:06,  8.79it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:06,  8.01it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:07,  7.15it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:08,  6.19it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:07,  6.23it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:05,  8.37it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.93it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.44it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.95it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.33it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  4.03it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.16it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.29it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.39it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.54it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.64it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.98it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.37it/s]
Time for cost matrix: 12.15s
Iter 0: wasserstein=1.172023, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.981173, edge=0.000536, neigh=3.943059, align=4.235129, entropy=10.241861,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.966948, edge=0.000476, neigh=3.394512, align=4.998764, entropy=9.426180,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.964813, edge=0.000471, neigh=3.210986, align=5.216815, entropy=9.202140,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.964829, edge=0.000467, neigh=3.071865, align=5.309465, entropy=9.108732,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.964929, edge=0.000466, neigh=3.080263, align=5.365155, entropy=9.052833,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.964654, edge=0.000468, neigh=3.210632, align=5.363485, entropy=9.054480,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.964310, edge=0.000470, neigh=3.350864, align=5.356739, entropy=9.061225,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.963490, edge=0.000471, neigh=3.493292, align=5.349705, entropy=9.068259,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.962863, edge=0.000471, neigh=3.625546, align=5.346521, entropy=9.071415,s=1.000000, s_hat=1.000000
Time for optimization: 19.96s
Test results:
Top-1: 0.571
Top-10: 0.887
Top-30: 0.943
Top-50: 0.963
Top-100: 0.977
MRR: 0.683
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.018s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.62it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.73it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.69it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.49it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:16,  5.83it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:14,  6.32it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:16,  5.75it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  6.07it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:10,  8.86it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.61it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.61it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  6.74it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.24it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:10,  7.67it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  7.40it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:12,  6.27it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.65it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:11,  6.88it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.53it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.55it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:11,  6.37it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:11,  6.44it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:08,  8.24it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:08,  7.82it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:09,  7.06it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:08,  7.46it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:08,  7.75it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:09,  6.65it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:11,  5.78it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:10,  5.82it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:09,  6.75it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  8.03it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:07,  7.88it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:07,  7.35it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:06,  9.04it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:06,  8.24it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:06,  8.00it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  7.62it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:07,  6.48it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:08,  5.67it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  5.99it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.78it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.76it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.33it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.03it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.73it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.64it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.37it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.09it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:09,  4.22it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  4.03it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.92it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.61it/s]
Time for cost matrix: 12.03s
Iter 0: wasserstein=1.175131, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.982513, edge=0.000535, neigh=3.994018, align=4.257042, entropy=10.219927,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.968374, edge=0.000474, neigh=3.466727, align=5.020639, entropy=9.404144,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.966150, edge=0.000469, neigh=3.258884, align=5.238236, entropy=9.180729,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.966111, edge=0.000466, neigh=3.083100, align=5.323788, entropy=9.094418,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.966323, edge=0.000467, neigh=3.090272, align=5.374318, entropy=9.043672,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.966137, edge=0.000469, neigh=3.222306, align=5.372505, entropy=9.045460,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.965901, edge=0.000470, neigh=3.369045, align=5.364009, entropy=9.053955,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.965156, edge=0.000471, neigh=3.514504, align=5.355752, entropy=9.062212,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.964573, edge=0.000471, neigh=3.645372, align=5.351970, entropy=9.065971,s=1.000000, s_hat=1.000000
Time for optimization: 19.27s
Test results:
Top-1: 0.594
Top-10: 0.899
Top-30: 0.954
Top-50: 0.973
Top-100: 0.983
MRR: 0.702
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.022s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.81it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.27it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.21it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:14,  6.62it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:13,  6.84it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  6.93it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.46it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.60it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  6.23it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.80it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:11,  7.68it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.87it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.72it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  7.24it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:10,  7.67it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:07,  9.97it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:08,  8.87it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.23it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:11,  6.21it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.28it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.34it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.72it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:09,  7.19it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:10,  6.26it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:09,  6.67it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:09,  6.64it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:10,  6.29it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:10,  6.15it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:09,  6.41it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:11,  5.36it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:11,  5.29it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  5.80it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:09,  5.77it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:09,  5.98it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:10,  5.25it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:10,  5.00it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:10,  4.95it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  7.00it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:05,  8.80it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.48it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.58it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:08,  5.94it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:09,  5.19it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  5.13it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.21it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.85it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.80it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.69it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.55it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.64it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.63it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.52it/s]
Time for cost matrix: 12.64s
Iter 0: wasserstein=1.173248, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.980785, edge=0.000536, neigh=3.949981, align=4.249376, entropy=10.227665,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.966549, edge=0.000476, neigh=3.432258, align=5.013874, entropy=9.411019,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.964321, edge=0.000470, neigh=3.257905, align=5.231235, entropy=9.187724,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.964335, edge=0.000467, neigh=3.088013, align=5.317339, entropy=9.100863,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.964529, edge=0.000467, neigh=3.099033, align=5.369182, entropy=9.048806,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.964324, edge=0.000469, neigh=3.225668, align=5.368496, entropy=9.049470,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.964057, edge=0.000471, neigh=3.363722, align=5.362199, entropy=9.055765,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.963303, edge=0.000471, neigh=3.505779, align=5.355143, entropy=9.062820,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.962755, edge=0.000472, neigh=3.631734, align=5.351293, entropy=9.066646,s=1.000000, s_hat=1.000000
Time for optimization: 20.09s
Test results:
Top-1: 0.572
Top-10: 0.892
Top-30: 0.949
Top-50: 0.966
Top-100: 0.978
MRR: 0.688
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.067s
Time for attribute perturbation: 0.036s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.57it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.58it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.09it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:14,  6.56it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:13,  7.03it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.49it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  7.84it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  8.12it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.48it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  9.03it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:08, 10.43it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:08,  9.31it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:10,  7.79it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  6.80it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:11,  6.72it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:13,  5.93it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:14,  5.45it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  6.96it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.32it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  7.29it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  7.96it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:08,  8.21it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  7.62it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  7.99it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  7.14it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:09,  6.97it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:10,  6.40it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:10,  5.86it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:12,  5.13it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:13,  4.64it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:13,  4.47it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:14,  4.12it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:14,  4.13it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:12,  4.83it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.93it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:06,  8.41it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  7.37it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:06,  7.56it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  7.87it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.44it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  7.11it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.79it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.29it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.59it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.14it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.11it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:16,  2.80it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:15,  2.85it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:14,  2.95it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.08it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.07it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.21it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:14,  2.85it/s]
Time for cost matrix: 12.86s
Iter 0: wasserstein=1.170819, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.979738, edge=0.000535, neigh=3.951791, align=4.247172, entropy=10.229199,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.965884, edge=0.000475, neigh=3.429195, align=5.007139, entropy=9.417715,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.963795, edge=0.000470, neigh=3.231537, align=5.221894, entropy=9.197050,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.964028, edge=0.000467, neigh=3.079795, align=5.310747, entropy=9.107441,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.964295, edge=0.000468, neigh=3.080964, align=5.362306, entropy=9.055679,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.964074, edge=0.000469, neigh=3.213532, align=5.359825, entropy=9.058140,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.963740, edge=0.000471, neigh=3.353580, align=5.352424, entropy=9.065540,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.963013, edge=0.000471, neigh=3.492273, align=5.344936, entropy=9.073028,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.962392, edge=0.000472, neigh=3.624542, align=5.340833, entropy=9.077098,s=1.000000, s_hat=1.000000
Time for optimization: 19.65s
Test results:
Top-1: 0.560
Top-10: 0.887
Top-30: 0.943
Top-50: 0.958
Top-100: 0.972
MRR: 0.677
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.057s
Time for attribute perturbation: 0.061s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:14,  6.81it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.94it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.74it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:09,  9.72it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  8.25it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.84it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.81it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  6.98it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  6.87it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:13,  6.37it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  6.12it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.55it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.43it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  6.90it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:14,  5.76it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:17,  4.69it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:15,  5.03it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:13,  5.86it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.34it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:12,  6.19it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:13,  5.64it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:12,  5.72it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.52it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  7.40it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:09,  6.78it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:10,  6.17it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  7.04it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.25it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  7.13it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:06,  8.86it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:06,  8.52it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:05, 10.13it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:06,  8.34it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  7.61it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  7.10it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:08,  6.34it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:08,  6.07it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:05,  8.27it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.37it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.76it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.30it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.44it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.68it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.42it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.48it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.18it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.26it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.42it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.36it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.47it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.14it/s]
Time for cost matrix: 12.50s
Iter 0: wasserstein=1.172225, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.980885, edge=0.000535, neigh=3.930275, align=4.246705, entropy=10.230210,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.966744, edge=0.000474, neigh=3.436868, align=5.014363, entropy=9.411068,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.964717, edge=0.000469, neigh=3.260389, align=5.233104, entropy=9.186188,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.964820, edge=0.000466, neigh=3.085324, align=5.318765, entropy=9.099533,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.965068, edge=0.000466, neigh=3.090838, align=5.374668, entropy=9.043329,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.964861, edge=0.000468, neigh=3.220765, align=5.374873, entropy=9.043093,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.964592, edge=0.000470, neigh=3.366881, align=5.367782, entropy=9.050182,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.963835, edge=0.000470, neigh=3.510501, align=5.361059, entropy=9.056905,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.963298, edge=0.000470, neigh=3.642069, align=5.357792, entropy=9.060140,s=1.000000, s_hat=1.000000
Time for optimization: 19.17s
Test results:
Top-1: 0.573
Top-10: 0.897
Top-30: 0.954
Top-50: 0.970
Top-100: 0.982
MRR: 0.689
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.070s
Time for attribute perturbation: 0.093s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.14it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  4.04it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.40it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:13,  6.95it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  7.03it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  5.94it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.11it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.20it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.69it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:15,  5.70it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.17it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  5.76it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.46it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.49it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:11,  7.12it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.14it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.97it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:14,  5.39it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.29it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:09,  7.47it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.29it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.59it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:08,  7.72it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:09,  7.15it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:10,  6.55it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:09,  7.07it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:09,  6.66it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:10,  5.85it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:11,  5.43it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:08,  7.06it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:06,  8.85it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:06,  7.94it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:05,  8.91it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:05,  9.02it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:05,  8.88it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:05,  9.09it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:05,  8.55it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:05,  8.29it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.90it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.48it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.60it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.63it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.50it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.60it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.57it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.35it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.36it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.13it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.37it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.17it/s]
Time for cost matrix: 12.70s
Iter 0: wasserstein=1.153707, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.969792, edge=0.000544, neigh=3.610752, align=4.023767, entropy=10.453119,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.956481, edge=0.000488, neigh=3.166461, align=4.834081, entropy=9.591406,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.954112, edge=0.000479, neigh=3.039625, align=5.090090, entropy=9.329280,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.953932, edge=0.000472, neigh=2.974202, align=5.202066, entropy=9.216169,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.953898, edge=0.000471, neigh=2.986849, align=5.272461, entropy=9.145523,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.953634, edge=0.000472, neigh=3.122695, align=5.268841, entropy=9.149125,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.953190, edge=0.000474, neigh=3.260033, align=5.259306, entropy=9.158658,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.952407, edge=0.000474, neigh=3.397675, align=5.253151, entropy=9.164813,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.951843, edge=0.000474, neigh=3.516888, align=5.249919, entropy=9.167855,s=1.000000, s_hat=1.000000
Time for optimization: 19.59s
Test results:
Top-1: 0.440
Top-10: 0.797
Top-30: 0.880
Top-50: 0.901
Top-100: 0.924
MRR: 0.562
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.045s
Time for attribute perturbation: 0.050s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:09, 10.56it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:07, 12.23it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:10,  9.39it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:11,  7.97it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.34it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.91it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.53it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:13,  6.31it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.80it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.54it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:13,  6.31it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  6.03it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:14,  5.64it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.25it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.52it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  8.94it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.89it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:11,  6.46it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.63it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:12,  5.74it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:11,  5.85it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:10,  6.47it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:10,  6.16it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:09,  6.67it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:09,  6.55it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.60it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:07,  7.95it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:06,  9.15it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  7.68it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:09,  6.42it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:10,  5.48it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:10,  5.49it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:08,  6.72it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  7.08it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:05,  8.51it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  7.77it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:05,  8.84it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:05,  8.22it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.02it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.22it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.39it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.22it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.73it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.64it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.65it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.75it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  3.85it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.33it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.30it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.16it/s]
Time for cost matrix: 12.19s
Iter 0: wasserstein=1.174780, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.982349, edge=0.000535, neigh=4.000356, align=4.261894, entropy=10.215309,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.968180, edge=0.000475, neigh=3.470293, align=5.020935, entropy=9.403964,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.965840, edge=0.000469, neigh=3.261687, align=5.237619, entropy=9.181375,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.965799, edge=0.000466, neigh=3.087657, align=5.325093, entropy=9.093121,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.966009, edge=0.000467, neigh=3.093433, align=5.375289, entropy=9.042703,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.965841, edge=0.000469, neigh=3.224637, align=5.372620, entropy=9.045345,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.965610, edge=0.000470, neigh=3.369607, align=5.364144, entropy=9.053820,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.964880, edge=0.000471, neigh=3.515455, align=5.356434, entropy=9.061530,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.964305, edge=0.000471, neigh=3.644160, align=5.352779, entropy=9.065165,s=1.000000, s_hat=1.000000
Time for optimization: 20.02s
Test results:
Top-1: 0.584
Top-10: 0.902
Top-30: 0.962
Top-50: 0.977
Top-100: 0.984
MRR: 0.699
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.070s
Time for attribute perturbation: 0.062s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.37it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:12,  7.68it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:10,  9.55it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:09, 10.13it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:07, 11.66it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:09,  9.76it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:10,  8.65it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.04it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:12,  7.05it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:13,  6.19it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:15,  5.57it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.48it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  5.96it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:12,  6.44it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:11,  6.88it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.95it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.20it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.63it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  6.81it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:10,  7.15it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.04it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  7.19it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:10,  6.43it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:10,  6.43it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:11,  5.55it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:10,  6.10it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.29it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  6.90it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  6.82it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:10,  5.76it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:09,  6.30it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:09,  6.18it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:07,  7.39it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:05,  9.02it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:06,  7.97it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:06,  8.03it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:05,  8.37it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:05,  9.57it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:05,  8.43it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.12it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.58it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.21it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.62it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  4.14it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.30it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.75it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:09,  4.44it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:10,  3.82it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.70it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.77it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.72it/s]
Time for cost matrix: 11.90s
Iter 0: wasserstein=1.172970, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.982350, edge=0.000536, neigh=3.946225, align=4.241045, entropy=10.236156,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.968072, edge=0.000476, neigh=3.388709, align=5.003013, entropy=9.421940,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.966054, edge=0.000470, neigh=3.203826, align=5.218148, entropy=9.200797,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.966060, edge=0.000467, neigh=3.071604, align=5.311313, entropy=9.106888,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.966234, edge=0.000467, neigh=3.085774, align=5.362604, entropy=9.055385,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.965977, edge=0.000468, neigh=3.213787, align=5.360696, entropy=9.057270,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.965691, edge=0.000470, neigh=3.354216, align=5.353479, entropy=9.064485,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.964931, edge=0.000471, neigh=3.496126, align=5.345707, entropy=9.072257,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.964317, edge=0.000471, neigh=3.626756, align=5.342296, entropy=9.075643,s=1.000000, s_hat=1.000000
Time for optimization: 19.69s
Test results:
Top-1: 0.565
Top-10: 0.902
Top-30: 0.956
Top-50: 0.973
Top-100: 0.983
MRR: 0.686
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.014s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 26.29it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 28.06it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:02, 30.24it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:00<00:02, 29.58it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:02, 30.60it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:00<00:02, 31.45it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:00<00:02, 27.18it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:02, 26.49it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:01<00:02, 28.55it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:01<00:02, 28.38it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:01<00:02, 27.49it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:01<00:02, 27.62it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:01<00:01, 27.94it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:01<00:01, 27.24it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:01<00:01, 26.97it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:01<00:01, 27.54it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04, 10.72it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:04, 10.46it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:04, 10.64it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:03, 10.68it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 10.66it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.56it/s]
Time for cost matrix: 3.83s
Iter 0: wasserstein=1.171325, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990117, edge=0.000538, neigh=3.528799, align=4.016185, entropy=10.460234,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976256, edge=0.000480, neigh=3.179301, align=4.832268, entropy=9.593102,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973817, edge=0.000472, neigh=2.985245, align=5.091441, entropy=9.327650,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973753, edge=0.000466, neigh=2.924059, align=5.201155, entropy=9.217135,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973818, edge=0.000465, neigh=2.916725, align=5.270905, entropy=9.147089,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973449, edge=0.000467, neigh=3.053555, align=5.270529, entropy=9.147436,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973131, edge=0.000469, neigh=3.192055, align=5.264157, entropy=9.153807,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972340, edge=0.000469, neigh=3.326847, align=5.255761, entropy=9.162203,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971687, edge=0.000470, neigh=3.452769, align=5.251311, entropy=9.166593,s=1.000000, s_hat=1.000000
Time for optimization: 9.27s
Test results:
Top-1: 0.521
Top-10: 0.845
Top-30: 0.914
Top-50: 0.934
Top-100: 0.961
MRR: 0.639
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.020s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.88it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:03, 25.25it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 29.36it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:02, 31.91it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:00<00:02, 33.81it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:02, 35.00it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:00<00:02, 35.31it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:00<00:01, 36.22it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:00<00:01, 35.94it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:01<00:01, 34.96it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:01<00:01, 35.18it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:01<00:01, 34.62it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:01<00:01, 35.47it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:01<00:01, 35.95it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:01<00:01, 32.29it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04, 10.95it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:04, 10.63it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:04, 10.31it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:03, 10.68it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 10.77it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.53it/s]
Time for cost matrix: 3.54s
Iter 0: wasserstein=1.172561, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991524, edge=0.000536, neigh=3.523928, align=4.005764, entropy=10.471086,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977724, edge=0.000477, neigh=3.166217, align=4.840775, entropy=9.584944,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975441, edge=0.000469, neigh=2.970361, align=5.106284, entropy=9.312915,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975216, edge=0.000463, neigh=2.885196, align=5.215769, entropy=9.202532,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975202, edge=0.000462, neigh=2.883486, align=5.282119, entropy=9.135876,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974816, edge=0.000464, neigh=3.003148, align=5.282754, entropy=9.135212,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974383, edge=0.000466, neigh=3.136834, align=5.277402, entropy=9.140562,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973611, edge=0.000467, neigh=3.276504, align=5.269421, entropy=9.148543,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972940, edge=0.000467, neigh=3.401086, align=5.265975, entropy=9.151970,s=1.000000, s_hat=1.000000
Time for optimization: 8.26s
Test results:
Top-1: 0.518
Top-10: 0.841
Top-30: 0.914
Top-50: 0.934
Top-100: 0.960
MRR: 0.633
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.015s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:06, 13.88it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.02it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.49it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:12,  7.35it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.77it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:08, 11.04it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:06, 14.28it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:06, 13.77it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:04, 17.23it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:04, 15.86it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:03, 20.30it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:03, 21.57it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:03, 22.83it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:02, 25.83it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:02<00:02, 25.94it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:02<00:02, 21.49it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:02<00:03, 16.75it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:03<00:03, 14.08it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:03<00:05, 10.36it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:03<00:05,  9.34it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:03<00:03, 14.02it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04, 11.56it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:04, 10.57it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:04,  9.23it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:04,  9.38it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.67it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.96it/s]
Time for cost matrix: 5.72s
Iter 0: wasserstein=1.175893, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992453, edge=0.000536, neigh=3.622441, align=4.056630, entropy=10.420124,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978612, edge=0.000477, neigh=3.253760, align=4.874875, entropy=9.550581,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976408, edge=0.000469, neigh=3.059792, align=5.126370, entropy=9.292735,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976477, edge=0.000465, neigh=2.940446, align=5.224869, entropy=9.193384,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976540, edge=0.000465, neigh=2.913259, align=5.289421, entropy=9.128570,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976529, edge=0.000463, neigh=2.922805, align=5.330239, entropy=9.087727,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976076, edge=0.000465, neigh=3.071189, align=5.329224, entropy=9.088740,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975272, edge=0.000465, neigh=3.218129, align=5.322730, entropy=9.095233,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974648, edge=0.000466, neigh=3.335784, align=5.318001, entropy=9.099945,s=1.000000, s_hat=1.000000
Time for optimization: 15.70s
Test results:
Top-1: 0.542
Top-10: 0.870
Top-30: 0.934
Top-50: 0.953
Top-100: 0.970
MRR: 0.659
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.045s
Time for attribute perturbation: 0.067s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.86it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.31it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:12,  7.52it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:10,  9.04it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:10,  8.76it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:10,  8.81it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:09,  9.35it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:09,  9.38it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.46it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:09,  9.18it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:09,  8.60it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:09,  8.56it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  6.88it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:12,  6.36it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:09,  7.90it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:10,  7.65it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:07,  9.56it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:07,  9.14it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:08,  8.03it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.23it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:08,  7.96it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:08,  7.99it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:06,  9.67it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:06, 10.27it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:05, 10.78it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:06,  9.08it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:04<00:07,  7.42it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:09,  6.37it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:08,  6.82it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:07,  7.35it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:05<00:05,  9.45it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:05<00:05,  9.44it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:05<00:04, 10.50it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:05,  8.23it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.25it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.27it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.48it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.37it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.45it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.70it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.94it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.78it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.60it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.39it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.14it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.29it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.16it/s]
Time for cost matrix: 10.99s
Iter 0: wasserstein=1.166709, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990339, edge=0.000540, neigh=3.352290, align=3.887851, entropy=10.587331,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977033, edge=0.000485, neigh=3.047822, align=4.742546, entropy=9.682857,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974620, edge=0.000473, neigh=2.898062, align=5.014366, entropy=9.404770,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974236, edge=0.000467, neigh=2.848222, align=5.129994, entropy=9.288213,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973969, edge=0.000466, neigh=2.864499, align=5.204968, entropy=9.213020,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973480, edge=0.000468, neigh=2.996267, align=5.206298, entropy=9.211668,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973026, edge=0.000469, neigh=3.136158, align=5.201426, entropy=9.216538,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972281, edge=0.000470, neigh=3.277879, align=5.193844, entropy=9.224120,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971654, edge=0.000470, neigh=3.410182, align=5.189048, entropy=9.228874,s=1.000000, s_hat=1.000000
Time for optimization: 19.25s
Test results:
Top-1: 0.469
Top-10: 0.785
Top-30: 0.876
Top-50: 0.899
Top-100: 0.922
MRR: 0.579
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.053s
Time for attribute perturbation: 0.062s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.37it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.10it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.50it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.24it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:14,  6.38it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  6.04it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:16,  5.69it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.16it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.82it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  6.81it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:09,  9.06it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:08,  9.68it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.68it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:12,  6.28it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.92it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:13,  5.91it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.70it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:14,  5.49it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:12,  6.05it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:12,  5.82it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:13,  5.59it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.87it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:13,  5.05it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:12,  5.31it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:11,  5.92it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:10,  6.50it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:09,  6.57it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:09,  6.95it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:10,  5.96it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:09,  6.24it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:08,  6.70it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:07,  7.34it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:07,  7.57it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:07,  6.89it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:08,  6.57it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:07,  7.12it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:07,  6.58it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  7.77it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:06,  7.60it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:06,  6.82it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.31it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.81it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.02it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.57it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  3.89it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.74it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.63it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.69it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.63it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.83it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.53it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.34it/s]
Time for cost matrix: 12.84s
Iter 0: wasserstein=1.161333, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.986741, edge=0.000541, neigh=3.393429, align=3.878871, entropy=10.595743,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.973547, edge=0.000488, neigh=3.070616, align=4.728353, entropy=9.697168,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.971195, edge=0.000476, neigh=2.907892, align=5.002881, entropy=9.416654,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.970924, edge=0.000469, neigh=2.874733, align=5.121109, entropy=9.297166,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.970679, edge=0.000467, neigh=2.882645, align=5.198286, entropy=9.219704,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.970213, edge=0.000469, neigh=3.013379, align=5.198924, entropy=9.219041,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.969667, edge=0.000471, neigh=3.154300, align=5.192172, entropy=9.225792,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.968845, edge=0.000471, neigh=3.292720, align=5.187042, entropy=9.230922,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.968283, edge=0.000472, neigh=3.424153, align=5.183805, entropy=9.234040,s=1.000000, s_hat=1.000000
Time for optimization: 19.42s
Test results:
Top-1: 0.442
Top-10: 0.791
Top-30: 0.877
Top-50: 0.896
Top-100: 0.925
MRR: 0.560
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.048s
Time for attribute perturbation: 0.066s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.58it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.55it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.83it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:22,  4.30it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.29it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:18,  5.05it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.47it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.03it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  6.12it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:11,  7.83it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.47it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.84it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.67it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  4.99it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:11,  7.04it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:08,  8.85it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.86it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:09,  7.74it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:09,  7.89it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:10,  7.06it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:07,  8.93it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  8.23it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:08,  8.36it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:08,  8.10it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:09,  6.70it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:11,  5.36it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:12,  5.12it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:11,  5.30it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:11,  5.23it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:10,  5.52it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:08,  6.86it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:08,  6.61it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:09,  6.16it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:09,  5.88it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:07,  7.53it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:05,  8.91it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:04, 10.04it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.45it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.51it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.34it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.45it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.73it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.61it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.25it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  3.14it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:14,  3.00it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.03it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.29it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:11,  3.36it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.15it/s]
Time for cost matrix: 12.81s
Iter 0: wasserstein=1.154924, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.982095, edge=0.000543, neigh=3.294728, align=3.814857, entropy=10.663987,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.968224, edge=0.000489, neigh=2.969373, align=4.677887, entropy=9.747781,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.965805, edge=0.000476, neigh=2.836874, align=4.974615, entropy=9.445591,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.965394, edge=0.000468, neigh=2.785223, align=5.101058, entropy=9.317402,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.965352, edge=0.000466, neigh=2.793699, align=5.186946, entropy=9.231076,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.964992, edge=0.000468, neigh=2.935288, align=5.189122, entropy=9.228846,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.964480, edge=0.000469, neigh=3.054743, align=5.181690, entropy=9.236274,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.963679, edge=0.000470, neigh=3.167488, align=5.174542, entropy=9.243422,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.963011, edge=0.000471, neigh=3.282265, align=5.170180, entropy=9.247692,s=1.000000, s_hat=1.000000
Time for optimization: 18.43s
Test results:
Top-1: 0.397
Top-10: 0.771
Top-30: 0.876
Top-50: 0.899
Top-100: 0.918
MRR: 0.528
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.055s
Time for attribute perturbation: 0.041s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:06, 14.08it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:11,  8.16it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  6.86it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  7.99it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  7.94it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.18it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.62it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.31it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:14,  5.80it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.15it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.65it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.89it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:09,  8.63it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.58it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:10,  7.37it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:10,  7.10it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:10,  7.37it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.60it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  9.02it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:06, 10.43it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:07,  9.75it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:07,  9.55it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:07,  9.28it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:08,  7.56it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:09,  6.89it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:10,  6.12it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:09,  6.37it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:09,  6.57it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:10,  5.67it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:10,  5.76it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:08,  6.39it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.91it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.81it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:08,  6.69it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:08,  6.25it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:08,  6.04it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:06,  8.10it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.22it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.49it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  6.32it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.03it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.32it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.96it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:15,  2.96it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.34it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.52it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.91it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.84it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:09,  4.29it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  4.03it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.81it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.20it/s]
Time for cost matrix: 12.22s
Iter 0: wasserstein=1.169537, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988814, edge=0.000538, neigh=3.537539, align=4.003570, entropy=10.473280,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974874, edge=0.000479, neigh=3.183300, align=4.822603, entropy=9.602628,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.972732, edge=0.000472, neigh=2.964583, align=5.080917, entropy=9.338084,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.972633, edge=0.000466, neigh=2.906956, align=5.194703, entropy=9.223505,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972655, edge=0.000465, neigh=2.895773, align=5.262727, entropy=9.155259,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972243, edge=0.000467, neigh=3.017938, align=5.263861, entropy=9.154105,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971805, edge=0.000468, neigh=3.159681, align=5.258912, entropy=9.159052,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971034, edge=0.000469, neigh=3.300065, align=5.251533, entropy=9.166431,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970440, edge=0.000469, neigh=3.425412, align=5.247874, entropy=9.170058,s=1.000000, s_hat=1.000000
Time for optimization: 18.42s
Test results:
Top-1: 0.489
Top-10: 0.822
Top-30: 0.893
Top-50: 0.922
Top-100: 0.942
MRR: 0.608
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.074s
Time for attribute perturbation: 0.056s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.76it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.33it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.50it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.97it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:19,  4.86it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:19,  4.74it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:18,  5.02it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.82it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.25it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.46it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:10,  8.34it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:09,  8.64it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:09,  8.81it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.27it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.55it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:12,  6.75it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:14,  5.53it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:13,  5.95it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.14it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:13,  5.51it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.41it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:08,  8.18it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:08,  7.89it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:07,  8.66it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  7.69it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:08,  7.91it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:05, 11.16it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:07,  8.36it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  8.57it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:07,  8.16it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  7.95it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:08,  6.73it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:06,  8.61it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:06,  7.85it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  7.55it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:06,  7.48it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:06,  8.08it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:05,  9.04it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:05,  7.93it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.10it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  4.04it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:09,  5.06it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.66it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  4.14it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.13it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.02it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.76it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.44it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.49it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  4.00it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.57it/s]
Time for cost matrix: 12.20s
Iter 0: wasserstein=1.175006, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991920, edge=0.000537, neigh=3.562335, align=4.055262, entropy=10.421169,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977888, edge=0.000476, neigh=3.218609, align=4.873371, entropy=9.551877,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975644, edge=0.000469, neigh=3.006319, align=5.127696, entropy=9.291355,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975717, edge=0.000464, neigh=2.911036, align=5.226723, entropy=9.191503,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975874, edge=0.000464, neigh=2.910692, align=5.287354, entropy=9.130632,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975535, edge=0.000466, neigh=3.040313, align=5.286979, entropy=9.130986,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975104, edge=0.000467, neigh=3.175519, align=5.280194, entropy=9.137770,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974329, edge=0.000468, neigh=3.311999, align=5.272334, entropy=9.145630,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973748, edge=0.000469, neigh=3.443183, align=5.268959, entropy=9.148976,s=1.000000, s_hat=1.000000
Time for optimization: 19.73s
Test results:
Top-1: 0.550
Top-10: 0.859
Top-30: 0.925
Top-50: 0.943
Top-100: 0.968
MRR: 0.661
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.057s
Time for attribute perturbation: 0.005s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:13,  7.19it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:11,  8.60it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:10,  9.23it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:08, 10.91it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:08, 10.57it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:07, 11.36it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  8.88it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  7.20it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:14,  6.11it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:12,  6.74it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:09,  8.46it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:08,  9.00it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:09,  8.48it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:10,  7.81it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:11,  6.95it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:10,  7.29it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:11,  6.82it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:12,  5.92it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:13,  5.29it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:13,  5.43it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:11,  6.08it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:10,  6.83it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  7.40it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  7.59it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:08,  7.42it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:06,  9.33it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:07,  8.78it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  8.21it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:07,  8.47it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:07,  7.74it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:08,  6.66it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:09,  5.90it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:10,  5.22it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:09,  5.63it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:08,  6.12it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:08,  6.19it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:06,  7.46it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:07,  6.61it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.50it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.16it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.19it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.51it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.03it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  4.08it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:09,  4.69it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:09,  4.45it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.23it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:10,  3.92it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.82it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.14it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.70it/s]
Time for cost matrix: 11.94s
Iter 0: wasserstein=1.162047, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.987388, edge=0.000542, neigh=3.375197, align=3.879376, entropy=10.595403,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974145, edge=0.000487, neigh=3.072398, align=4.742787, entropy=9.682726,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.971850, edge=0.000475, neigh=2.916171, align=5.016095, entropy=9.403979,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.971696, edge=0.000468, neigh=2.843867, align=5.127776, entropy=9.290459,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.971566, edge=0.000467, neigh=2.863130, align=5.205320, entropy=9.212667,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.971093, edge=0.000469, neigh=3.009045, align=5.207256, entropy=9.210710,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.970665, edge=0.000470, neigh=3.143336, align=5.203019, entropy=9.214945,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.969826, edge=0.000471, neigh=3.278296, align=5.195094, entropy=9.222870,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.969269, edge=0.000471, neigh=3.402660, align=5.190986, entropy=9.226921,s=1.000000, s_hat=1.000000
Time for optimization: 20.21s
Test results:
Top-1: 0.448
Top-10: 0.799
Top-30: 0.875
Top-50: 0.898
Top-100: 0.928
MRR: 0.568
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.062s
Time for attribute perturbation: 0.005s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.36it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:18,  5.20it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.45it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.49it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:12,  7.63it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  8.01it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.41it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.71it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.34it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:11,  7.73it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:10,  7.74it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:10,  7.68it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.69it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.54it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:12,  6.57it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:12,  6.53it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.68it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.20it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  9.21it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:08,  8.46it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.49it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:08,  8.43it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:06, 10.41it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:07,  9.07it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:08,  7.43it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:08,  7.26it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:09,  6.91it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  7.80it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:07,  7.79it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:05,  9.94it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:06,  8.18it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:05<00:06,  7.91it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:06,  7.73it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:06,  8.34it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:06,  8.01it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:05,  8.29it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:06,  7.18it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.39it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.88it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:09,  5.01it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.45it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.35it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.51it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.36it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:13,  3.23it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.53it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.78it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.58it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.38it/s]
Time for cost matrix: 11.96s
Iter 0: wasserstein=1.165191, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.986345, edge=0.000541, neigh=3.394073, align=3.911020, entropy=10.566821,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.972442, edge=0.000485, neigh=3.071172, align=4.751916, entropy=9.673929,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.970223, edge=0.000474, neigh=2.926531, align=5.019308, entropy=9.400157,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.969855, edge=0.000467, neigh=2.853321, align=5.141964, entropy=9.276295,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.969821, edge=0.000466, neigh=2.861963, align=5.218303, entropy=9.199684,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.969568, edge=0.000468, neigh=2.979152, align=5.217937, entropy=9.200028,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.969119, edge=0.000470, neigh=3.101789, align=5.209901, entropy=9.208063,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.968400, edge=0.000471, neigh=3.233533, align=5.200109, entropy=9.217855,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.967852, edge=0.000471, neigh=3.353284, align=5.194355, entropy=9.223563,s=1.000000, s_hat=1.000000
Time for optimization: 20.32s
Test results:
Top-1: 0.446
Top-10: 0.804
Top-30: 0.888
Top-50: 0.912
Top-100: 0.933
MRR: 0.571
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.038s
Time for attribute perturbation: 0.012s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.68it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.55it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.24it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.32it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:18,  5.06it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:12,  7.59it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:09,  9.88it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.14it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.01it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:11,  7.23it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.39it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.83it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:10,  8.01it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.19it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:06, 11.50it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:08,  9.20it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  8.82it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.54it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:11,  6.10it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:13,  5.45it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:13,  5.16it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:13,  4.98it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:12,  5.38it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:12,  5.42it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:13,  4.82it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:15,  4.31it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:15,  4.20it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:12,  5.02it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:12,  4.97it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:13,  4.63it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:14,  4.26it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:14,  3.96it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:15,  3.71it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:07<00:15,  3.58it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:07<00:13,  4.14it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:12,  4.34it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:12,  4.27it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:07,  6.67it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:08<00:06,  7.79it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:05,  8.82it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.06it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.52it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.56it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.96it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.81it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.97it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.13it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.88it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  3.90it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.78it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.81it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.45it/s]
Time for cost matrix: 13.52s
Iter 0: wasserstein=1.166748, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993580, edge=0.000541, neigh=3.258491, align=3.816853, entropy=10.658518,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980148, edge=0.000486, neigh=2.998300, align=4.671999, entropy=9.753325,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977808, edge=0.000474, neigh=2.846216, align=4.953370, entropy=9.465869,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977475, edge=0.000467, neigh=2.810064, align=5.076020, entropy=9.342250,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977230, edge=0.000467, neigh=2.810168, align=5.157746, entropy=9.260245,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976777, edge=0.000469, neigh=2.934232, align=5.159970, entropy=9.257996,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976232, edge=0.000470, neigh=3.071323, align=5.153595, entropy=9.264369,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975415, edge=0.000470, neigh=3.214818, align=5.147066, entropy=9.270898,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974807, edge=0.000471, neigh=3.343616, align=5.144379, entropy=9.273535,s=1.000000, s_hat=1.000000
Time for optimization: 19.91s
Test results:
Top-1: 0.457
Top-10: 0.792
Top-30: 0.870
Top-50: 0.893
Top-100: 0.927
MRR: 0.568
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.054s
Time for attribute perturbation: 0.058s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.56it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.48it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.43it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.66it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:13,  7.15it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:12,  7.34it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.66it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:10,  8.89it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.58it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  6.95it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  6.90it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  6.05it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.42it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:07, 10.69it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:06, 11.69it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:08,  9.62it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:09,  8.12it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  7.77it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.50it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  7.90it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:08,  7.83it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:09,  7.17it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:10,  6.61it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:10,  6.41it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:10,  6.38it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:10,  6.19it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  7.03it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  7.46it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:06,  8.45it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:06,  8.52it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:05,  9.48it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:05<00:05,  9.54it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:05,  9.26it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:05,  8.60it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:06,  7.41it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:06,  7.33it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:06,  7.73it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.62it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.62it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.52it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.32it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.21it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.32it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.51it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.50it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.54it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.65it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.17it/s]
Time for cost matrix: 11.92s
Iter 0: wasserstein=1.169926, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993134, edge=0.000539, neigh=3.371402, align=3.880604, entropy=10.596663,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979117, edge=0.000481, neigh=3.112466, align=4.736791, entropy=9.688919,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977238, edge=0.000472, neigh=2.875210, align=5.009524, entropy=9.409930,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977126, edge=0.000465, neigh=2.829605, align=5.133366, entropy=9.284957,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977145, edge=0.000464, neigh=2.793839, align=5.210521, entropy=9.207478,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977092, edge=0.000462, neigh=2.824167, align=5.261837, entropy=9.156129,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976549, edge=0.000463, neigh=2.975578, align=5.263292, entropy=9.154672,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975658, edge=0.000464, neigh=3.122630, align=5.256734, entropy=9.161230,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975071, edge=0.000465, neigh=3.240206, align=5.251716, entropy=9.166211,s=1.000000, s_hat=1.000000
Time for optimization: 19.62s
Test results:
Top-1: 0.464
Top-10: 0.801
Top-30: 0.885
Top-50: 0.911
Top-100: 0.936
MRR: 0.581
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.037s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:14,  7.06it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.98it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:08, 10.82it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:08, 11.60it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:07, 11.84it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:10,  8.63it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.83it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:08, 10.20it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:10,  7.93it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:12,  6.66it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:13,  6.12it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  6.76it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:11,  6.67it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:10,  7.51it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:09,  7.64it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  7.96it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  8.07it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.18it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:08,  7.85it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:09,  7.37it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  7.25it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:08,  7.47it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:09,  6.73it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:10,  6.06it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:09,  6.84it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:09,  6.45it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:08,  7.12it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:07,  7.80it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:08,  6.86it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:08,  6.55it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:08,  6.11it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:07,  6.55it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:06,  7.76it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:06,  7.96it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.20it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.42it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.75it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.49it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.35it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.39it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.24it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:15,  2.85it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:15,  2.81it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.28it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.77it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.96it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.15it/s]
Time for cost matrix: 11.59s
Iter 0: wasserstein=1.160969, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988080, edge=0.000542, neigh=3.234763, align=3.768448, entropy=10.709125,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974439, edge=0.000489, neigh=2.974186, align=4.610386, entropy=9.814956,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.972289, edge=0.000477, neigh=2.812747, align=4.895406, entropy=9.523940,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.972137, edge=0.000469, neigh=2.781514, align=5.035451, entropy=9.382797,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.971991, edge=0.000466, neigh=2.776705, align=5.129087, entropy=9.288899,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.971836, edge=0.000464, neigh=2.803938, align=5.190094, entropy=9.227871,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971237, edge=0.000465, neigh=2.936131, align=5.187101, entropy=9.230863,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.970418, edge=0.000466, neigh=3.057105, align=5.179366, entropy=9.238598,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.969795, edge=0.000467, neigh=3.177069, align=5.175668, entropy=9.242195,s=1.000000, s_hat=1.000000
Time for optimization: 19.64s
Test results:
Top-1: 0.372
Top-10: 0.742
Top-30: 0.850
Top-50: 0.885
Top-100: 0.909
MRR: 0.498
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.051s
Time for attribute perturbation: 0.069s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 17.29it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:05, 16.16it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:04, 21.29it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:04, 18.44it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:04, 20.75it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:03, 22.60it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:03, 24.36it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:00<00:03, 24.34it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:02, 25.24it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:02, 26.45it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:03, 17.58it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:01<00:05, 11.55it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:02<00:07,  8.80it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:02<00:06,  9.51it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:02<00:06,  8.61it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:03<00:06,  8.47it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:03<00:07,  7.23it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:03<00:07,  7.50it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:03<00:06,  7.86it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:03<00:06,  8.03it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:03<00:05,  9.03it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:04<00:05,  9.75it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:04, 10.72it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 12.07it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  4.06it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.96it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.20it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.55it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.87it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.93it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.01it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:09,  4.42it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:09,  4.29it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.76it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.33it/s]
Time for cost matrix: 8.62s
Iter 0: wasserstein=1.158635, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.987719, edge=0.000542, neigh=3.163484, align=3.727747, entropy=10.750101,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974030, edge=0.000488, neigh=2.917183, align=4.587360, entropy=9.837906,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.971516, edge=0.000474, neigh=2.775561, align=4.890895, entropy=9.528440,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.971091, edge=0.000467, neigh=2.731802, align=5.038107, entropy=9.380118,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.970856, edge=0.000465, neigh=2.718884, align=5.127198, entropy=9.290786,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.970681, edge=0.000464, neigh=2.746389, align=5.184279, entropy=9.233686,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.969987, edge=0.000465, neigh=2.880913, align=5.185726, entropy=9.232238,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.969057, edge=0.000465, neigh=3.000276, align=5.179871, entropy=9.238093,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.968405, edge=0.000466, neigh=3.116027, align=5.177008, entropy=9.240913,s=1.000000, s_hat=1.000000
Time for optimization: 24.16s
Test results:
Top-1: 0.380
Top-10: 0.756
Top-30: 0.854
Top-50: 0.882
Top-100: 0.911
MRR: 0.505
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.042s
Time for attribute perturbation: 0.025s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:30,  3.29it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.44it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  5.06it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.93it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  3.98it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:21,  4.47it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.24it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.61it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.67it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:14,  6.07it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:18,  4.77it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:17,  4.79it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.11it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.46it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:09,  8.59it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:06, 11.80it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:06, 11.55it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:06, 11.48it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:05, 13.98it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:05, 13.08it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:06, 10.55it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:06, 10.01it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:04, 12.80it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:05, 11.87it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:04<00:04, 13.95it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:03, 14.39it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:03, 15.55it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:03, 15.41it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:05<00:02, 16.61it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:04,  9.47it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.98it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:20,  2.34it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.23it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:21,  2.17it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:20,  2.21it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:15,  2.83it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.44it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.33it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:03<00:15,  2.65it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.07it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:15,  2.59it/s]
Time for cost matrix: 10.81s
Iter 0: wasserstein=1.168283, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994609, edge=0.000541, neigh=3.252553, align=3.806207, entropy=10.668810,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981357, edge=0.000487, neigh=3.014234, align=4.671677, entropy=9.753701,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978991, edge=0.000475, neigh=2.843706, align=4.957722, entropy=9.461564,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978711, edge=0.000468, neigh=2.795287, align=5.078135, entropy=9.340090,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978617, edge=0.000467, neigh=2.790203, align=5.158367, entropy=9.259620,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978088, edge=0.000468, neigh=2.920313, align=5.158473, entropy=9.259492,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977621, edge=0.000469, neigh=3.054077, align=5.154272, entropy=9.263692,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976799, edge=0.000470, neigh=3.183577, align=5.147712, entropy=9.270252,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976206, edge=0.000470, neigh=3.305889, align=5.144016, entropy=9.273912,s=1.000000, s_hat=1.000000
Time for optimization: 34.22s
Test results:
Top-1: 0.454
Top-10: 0.794
Top-30: 0.869
Top-50: 0.892
Top-100: 0.925
MRR: 0.569
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.094s
Time for attribute perturbation: 0.109s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.00it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  3.98it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:24,  3.92it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:26,  3.56it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:28,  3.33it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:31,  2.94it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:31,  2.96it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:28,  3.18it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:25,  3.64it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:23,  3.83it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:23,  3.75it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:24,  3.60it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:23,  3.76it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:22,  3.75it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:20,  4.23it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:20,  4.18it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:18,  4.59it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.31it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:20,  4.00it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:20,  3.90it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:20,  3.77it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:22,  3.51it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:23,  3.27it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:06<00:24,  3.13it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:24,  3.10it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:07<00:23,  3.22it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:25,  2.88it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:27,  2.63it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:25,  2.80it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:08<00:22,  3.15it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:09<00:22,  3.04it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:09<00:22,  3.00it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:09<00:23,  2.87it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:09<00:20,  3.25it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:10<00:19,  3.38it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:10<00:19,  3.36it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:10<00:19,  3.17it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:11<00:20,  2.96it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:11<00:21,  2.79it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:11<00:19,  3.03it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:12<00:18,  3.25it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:12<00:15,  3.74it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:12<00:12,  4.58it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:12<00:12,  4.36it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:13<00:13,  4.07it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:13<00:11,  4.74it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:13<00:12,  4.31it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:13<00:10,  4.87it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:13<00:10,  4.85it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:14<00:11,  4.39it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:14<00:12,  3.83it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:14<00:12,  3.74it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:14<00:12,  3.77it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:15<00:13,  3.48it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.43it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:25,  1.88it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:25,  1.88it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:02<00:23,  1.95it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:24,  1.87it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:03<00:22,  1.94it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:03<00:22,  1.93it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:04<00:20,  2.03it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:04<00:20,  1.96it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:19,  2.05it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:22,  1.81it/s]
Time for cost matrix: 23.24s
Iter 0: wasserstein=1.160983, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988645, edge=0.000541, neigh=3.189075, align=3.763609, entropy=10.713957,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.975007, edge=0.000486, neigh=2.929302, align=4.628802, entropy=9.796585,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.972602, edge=0.000474, neigh=2.777744, align=4.926788, entropy=9.492624,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.972221, edge=0.000466, neigh=2.742253, align=5.064608, entropy=9.353631,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972186, edge=0.000465, neigh=2.721665, align=5.147510, entropy=9.270475,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972089, edge=0.000464, neigh=2.748916, align=5.200185, entropy=9.217781,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971501, edge=0.000465, neigh=2.909574, align=5.199044, entropy=9.218920,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.970596, edge=0.000466, neigh=3.031499, align=5.191653, entropy=9.226311,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.969928, edge=0.000467, neigh=3.145280, align=5.186571, entropy=9.231294,s=1.000000, s_hat=1.000000
Time for optimization: 23.99s
Test results:
Top-1: 0.391
Top-10: 0.781
Top-30: 0.864
Top-50: 0.887
Top-100: 0.918
MRR: 0.524
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.023s
Time for attribute perturbation: 0.007s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.46it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:16,  5.94it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  5.07it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.29it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:18,  5.15it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:20,  4.66it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:22,  4.08it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.27it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.81it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:10,  8.18it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:10,  8.05it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.58it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.40it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.51it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:09,  8.00it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:08,  8.78it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:08,  8.76it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  8.29it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.97it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.84it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:08,  8.18it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:08,  8.34it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:08,  8.23it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  8.06it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:08,  7.53it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:06,  9.57it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:05, 10.53it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:06,  9.63it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:06,  8.70it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:07,  7.89it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:07,  7.47it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:07,  7.33it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:06,  8.27it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:05,  9.55it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:04, 11.11it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:03, 12.66it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  7.88it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.36it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.94it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.50it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  3.96it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.13it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.64it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.68it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.75it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.85it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.69it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.55it/s]
Time for cost matrix: 10.80s
Iter 0: wasserstein=1.171079, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995979, edge=0.000537, neigh=3.283642, align=3.838858, entropy=10.637471,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982259, edge=0.000480, neigh=3.011378, align=4.707083, entropy=9.718263,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979556, edge=0.000469, neigh=2.850090, align=5.003752, entropy=9.415354,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979248, edge=0.000463, neigh=2.781862, align=5.136509, entropy=9.281698,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979151, edge=0.000462, neigh=2.769039, align=5.211558, entropy=9.206426,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978971, edge=0.000462, neigh=2.797949, align=5.257293, entropy=9.160672,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978397, edge=0.000463, neigh=2.948277, align=5.257908, entropy=9.160056,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977475, edge=0.000463, neigh=3.076570, align=5.252424, entropy=9.165540,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976855, edge=0.000464, neigh=3.192860, align=5.248678, entropy=9.169260,s=1.000000, s_hat=1.000000
Time for optimization: 19.11s
Test results:
Top-1: 0.476
Top-10: 0.815
Top-30: 0.893
Top-50: 0.916
Top-100: 0.942
MRR: 0.597
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.058s
Time for attribute perturbation: 0.096s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  4.99it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.33it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  4.91it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.56it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.39it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.38it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.10it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.79it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  8.98it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  9.10it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:08,  9.50it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:09,  9.07it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:07, 10.43it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:08,  8.96it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:09,  8.40it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:09,  7.89it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  7.94it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:08,  8.73it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:07,  9.09it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:06,  9.98it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:03<00:05, 11.11it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:07,  9.14it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:06, 10.22it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:05, 11.29it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:04<00:05, 10.10it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:06,  8.30it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:06,  8.12it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:05,  9.43it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:05,  9.67it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:05<00:04,  9.95it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:04, 10.23it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.64it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.26it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.94it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:17,  2.68it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.10it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.32it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.70it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:11,  3.88it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.70it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  4.03it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.21it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.46it/s]
Time for cost matrix: 10.36s
Iter 0: wasserstein=1.165164, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989174, edge=0.000541, neigh=3.249664, align=3.809652, entropy=10.667993,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.975201, edge=0.000484, neigh=3.000626, align=4.671154, entropy=9.754362,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973142, edge=0.000473, neigh=2.837885, align=4.952196, entropy=9.467213,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.972880, edge=0.000466, neigh=2.783098, align=5.081535, entropy=9.336721,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972858, edge=0.000465, neigh=2.764448, align=5.160385, entropy=9.257601,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972793, edge=0.000463, neigh=2.774471, align=5.211768, entropy=9.206197,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972263, edge=0.000464, neigh=2.906184, align=5.209682, entropy=9.208282,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971444, edge=0.000465, neigh=3.029910, align=5.201067, entropy=9.216896,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970866, edge=0.000466, neigh=3.149188, align=5.196375, entropy=9.221494,s=1.000000, s_hat=1.000000
Time for optimization: 18.97s
Test results:
Top-1: 0.420
Top-10: 0.780
Top-30: 0.866
Top-50: 0.897
Top-100: 0.923
MRR: 0.544
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.061s
Time for attribute perturbation: 0.016s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:08, 11.17it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:11,  8.15it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.17it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:09,  9.54it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:10,  8.53it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.32it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.76it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.58it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  6.92it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:10,  8.50it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:09,  8.62it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:09,  8.50it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:09,  8.35it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  6.99it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.47it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:10,  7.57it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:11,  6.55it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.59it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.25it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:08,  8.88it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.44it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.22it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:10,  6.57it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.42it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:08,  7.85it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:07,  8.95it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:06,  9.46it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:06,  9.42it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:06,  9.07it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:06,  8.54it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:05,  9.22it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:05, 10.20it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:04, 10.89it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:05,  9.67it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:04, 10.09it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.28it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.56it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.23it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.97it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  4.02it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.76it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.40it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.62it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.17it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:14,  2.84it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.94it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.05it/s]
Time for cost matrix: 11.34s
Iter 0: wasserstein=1.176168, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996873, edge=0.000535, neigh=3.410539, align=3.953506, entropy=10.523635,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982791, edge=0.000477, neigh=3.126932, align=4.793187, entropy=9.632518,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980652, edge=0.000468, neigh=2.948537, align=5.057663, entropy=9.361620,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980580, edge=0.000464, neigh=2.854873, align=5.166684, entropy=9.251588,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980600, edge=0.000463, neigh=2.849401, align=5.232081, entropy=9.185909,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980318, edge=0.000465, neigh=2.966158, align=5.228445, entropy=9.189521,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979890, edge=0.000467, neigh=3.094632, align=5.220712, entropy=9.197252,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979133, edge=0.000467, neigh=3.229609, align=5.212975, entropy=9.204989,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978544, edge=0.000468, neigh=3.351055, align=5.209575, entropy=9.208367,s=1.000000, s_hat=1.000000
Time for optimization: 19.28s
Test results:
Top-1: 0.544
Top-10: 0.860
Top-30: 0.922
Top-50: 0.942
Top-100: 0.953
MRR: 0.655
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.035s
Time for attribute perturbation: 0.016s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  6.10it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  7.14it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:09,  9.58it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:08, 11.03it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:07, 12.82it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.70it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:08,  9.87it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:08,  9.87it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:08,  9.62it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:08,  9.46it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:07, 10.93it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:08,  8.93it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:08,  8.54it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:08,  8.59it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:09,  7.33it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.52it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.02it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:08,  8.10it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:08,  8.29it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:03<00:06,  9.87it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:03<00:08,  7.86it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:09,  6.66it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:11,  5.44it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:13,  4.53it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:09,  6.12it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:09,  6.01it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:08,  6.90it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:08,  6.42it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:09,  5.68it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:10,  5.18it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:11,  4.87it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:09,  5.32it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:09,  5.76it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:08,  5.97it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:08,  5.66it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:07,  6.34it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:07,  6.49it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  5.92it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.23it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.22it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.89it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.65it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:08,  5.23it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.46it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:09,  4.65it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:09,  4.77it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:09,  4.53it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  4.00it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.22it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.99it/s]
Time for cost matrix: 11.25s
Iter 0: wasserstein=1.174945, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995746, edge=0.000535, neigh=3.393292, align=3.941640, entropy=10.534797,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981619, edge=0.000478, neigh=3.122021, align=4.787258, entropy=9.637992,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979550, edge=0.000469, neigh=2.922805, align=5.048846, entropy=9.370225,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979606, edge=0.000464, neigh=2.850305, align=5.160740, entropy=9.257496,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979522, edge=0.000462, neigh=2.850466, align=5.232389, entropy=9.185598,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979161, edge=0.000464, neigh=2.961423, align=5.232736, entropy=9.185230,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978674, edge=0.000466, neigh=3.079824, align=5.227042, entropy=9.190922,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977916, edge=0.000467, neigh=3.208063, align=5.220011, entropy=9.197953,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977333, edge=0.000467, neigh=3.327164, align=5.216964, entropy=9.200971,s=1.000000, s_hat=1.000000
Time for optimization: 20.04s
Test results:
Top-1: 0.526
Top-10: 0.845
Top-30: 0.915
Top-50: 0.935
Top-100: 0.955
MRR: 0.640
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.078s
Time for attribute perturbation: 0.067s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:14,  6.94it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.88it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:12,  7.83it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.44it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:10,  9.22it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:08, 11.47it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:08, 11.24it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:07, 11.14it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:10,  8.07it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:12,  6.65it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.03it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.52it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:15,  5.21it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  5.92it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:14,  5.54it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:15,  5.26it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:15,  5.11it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:12,  5.91it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:13,  5.47it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:14,  5.08it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:14,  5.02it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:14,  4.88it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:14,  4.80it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:15,  4.62it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:15,  4.48it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:15,  4.44it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:14,  4.59it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:14,  4.64it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:06<00:14,  4.57it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:06<00:14,  4.34it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:06<00:14,  4.40it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:13,  4.53it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:14,  4.27it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:07<00:14,  4.13it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:07<00:14,  4.10it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:07<00:14,  4.14it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:07<00:11,  5.02it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:07,  7.23it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:08<00:06,  8.23it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:08<00:06,  8.13it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:08<00:05,  9.61it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:04, 10.17it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  5.97it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.68it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.78it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.01it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  4.03it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.48it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:14,  3.00it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:14,  2.96it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.18it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.38it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.59it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.23it/s]
Time for cost matrix: 13.64s
Iter 0: wasserstein=1.166793, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995958, edge=0.000543, neigh=3.179894, align=3.724229, entropy=10.751188,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982651, edge=0.000489, neigh=2.960899, align=4.586682, entropy=9.838699,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980054, edge=0.000476, neigh=2.787376, align=4.891646, entropy=9.527675,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979628, edge=0.000468, neigh=2.763998, align=5.025897, entropy=9.392345,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979429, edge=0.000467, neigh=2.751942, align=5.114200, entropy=9.303789,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978993, edge=0.000469, neigh=2.873592, align=5.114888, entropy=9.303077,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978510, edge=0.000470, neigh=3.005374, align=5.106576, entropy=9.311388,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977684, edge=0.000471, neigh=3.139682, align=5.099541, entropy=9.318423,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977065, edge=0.000471, neigh=3.266023, align=5.095522, entropy=9.322383,s=1.000000, s_hat=1.000000
Time for optimization: 20.25s
Test results:
Top-1: 0.407
Top-10: 0.770
Top-30: 0.855
Top-50: 0.884
Top-100: 0.920
MRR: 0.528
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.046s
Time for attribute perturbation: 0.068s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.14it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.61it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.61it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  7.04it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.74it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  6.75it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.68it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.73it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.02it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.27it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:13,  6.24it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.24it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.17it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.80it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.46it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.12it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:09,  8.28it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:09,  8.63it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:09,  8.28it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:08,  9.05it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:07,  9.26it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:07,  9.26it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:07,  9.21it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:06, 11.37it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  6.99it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:09,  6.83it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:10,  6.11it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:12,  5.21it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:13,  4.61it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:12,  5.00it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:11,  5.06it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:11,  5.03it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:10,  5.71it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.34it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.35it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:06,  8.60it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:06,  8.05it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  8.20it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.97it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:04, 10.07it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.92it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.49it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.92it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.81it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.16it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.39it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.17it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.58it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.50it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.57it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.25it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.92it/s]
Time for cost matrix: 12.65s
Iter 0: wasserstein=1.160430, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990609, edge=0.000545, neigh=3.154556, align=3.685527, entropy=10.790128,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977361, edge=0.000495, neigh=2.877283, align=4.546062, entropy=9.878966,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975006, edge=0.000481, neigh=2.702031, align=4.841751, entropy=9.577799,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974615, edge=0.000471, neigh=2.709071, align=4.977420, entropy=9.440830,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974438, edge=0.000468, neigh=2.724576, align=5.070343, entropy=9.347641,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974035, edge=0.000471, neigh=2.842080, align=5.073661, entropy=9.344305,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973428, edge=0.000472, neigh=2.954602, align=5.069716, entropy=9.348248,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972605, edge=0.000472, neigh=3.073711, align=5.064579, entropy=9.353385,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971983, edge=0.000473, neigh=3.183975, align=5.062111, entropy=9.355695,s=1.000000, s_hat=1.000000
Time for optimization: 19.41s
Test results:
Top-1: 0.355
Top-10: 0.744
Top-30: 0.838
Top-50: 0.867
Top-100: 0.906
MRR: 0.477
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.056s
Time for attribute perturbation: 0.068s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:22,  4.38it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:12,  7.74it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.54it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.51it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:12,  7.40it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.84it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.91it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.20it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.50it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:16,  5.31it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  5.94it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:13,  6.38it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  5.86it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:15,  5.43it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:13,  6.12it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.13it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:07,  9.90it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:08,  8.78it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:08,  8.52it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  6.84it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  7.12it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:11,  6.48it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.79it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:11,  5.86it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.36it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:11,  6.04it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:08,  7.95it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:06,  9.15it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:06,  9.79it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:06,  9.50it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  8.08it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:07,  7.96it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:06,  8.62it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:06,  8.50it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  6.90it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  6.94it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:07,  6.75it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:06,  7.39it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:06,  7.93it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.27it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.41it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  6.22it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.05it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.19it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:15,  3.07it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.82it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.31it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.59it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.23it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  3.97it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  3.95it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.66it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.70it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.37it/s]
Time for cost matrix: 11.90s
Iter 0: wasserstein=1.171529, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998366, edge=0.000538, neigh=3.207515, align=3.776053, entropy=10.700167,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984657, edge=0.000482, neigh=2.957549, align=4.649585, entropy=9.775749,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982018, edge=0.000470, neigh=2.796087, align=4.952971, entropy=9.466199,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981688, edge=0.000464, neigh=2.749310, align=5.093873, entropy=9.324367,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981611, edge=0.000463, neigh=2.720031, align=5.174548, entropy=9.243438,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981441, edge=0.000462, neigh=2.756333, align=5.223550, entropy=9.194415,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980807, edge=0.000464, neigh=2.920779, align=5.223905, entropy=9.194059,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979844, edge=0.000464, neigh=3.059920, align=5.218485, entropy=9.199479,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979234, edge=0.000465, neigh=3.186555, align=5.215068, entropy=9.202874,s=1.000000, s_hat=1.000000
Time for optimization: 20.05s
Test results:
Top-1: 0.456
Top-10: 0.806
Top-30: 0.883
Top-50: 0.914
Top-100: 0.940
MRR: 0.575
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.063s
Time for attribute perturbation: 0.072s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.01it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.52it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:16,  5.92it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.28it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:14,  6.68it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.34it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.46it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.25it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.50it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  7.12it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:13,  6.23it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:12,  6.91it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:10,  8.23it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.20it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:10,  7.56it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.90it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:08,  9.46it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:08,  9.34it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:07, 10.50it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:06, 12.07it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:06, 10.46it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:06, 10.64it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:10,  6.54it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:09,  6.69it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:09,  6.62it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:09,  6.49it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  8.01it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:08,  7.44it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:08,  7.22it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:08,  7.14it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:08,  6.39it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:07,  7.05it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:06,  8.45it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:06,  8.32it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:07,  7.14it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:07,  6.74it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:06,  7.76it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.53it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:18,  2.71it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.96it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.27it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.15it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.05it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.21it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.34it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.74it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.83it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.65it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.15it/s]
Time for cost matrix: 12.06s
Iter 0: wasserstein=1.171082, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997156, edge=0.000539, neigh=3.268663, align=3.811851, entropy=10.664908,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983309, edge=0.000482, neigh=3.042292, align=4.675582, entropy=9.750162,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981032, edge=0.000471, neigh=2.851217, align=4.964504, entropy=9.455027,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980843, edge=0.000466, neigh=2.791417, align=5.093942, entropy=9.324393,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980863, edge=0.000464, neigh=2.762514, align=5.177347, entropy=9.240655,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980791, edge=0.000462, neigh=2.797110, align=5.226386, entropy=9.191581,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980324, edge=0.000464, neigh=2.939267, align=5.224954, entropy=9.193010,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979443, edge=0.000465, neigh=3.077758, align=5.217291, entropy=9.200672,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978827, edge=0.000465, neigh=3.194188, align=5.213703, entropy=9.204243,s=1.000000, s_hat=1.000000
Time for optimization: 19.13s
Test results:
Top-1: 0.459
Top-10: 0.813
Top-30: 0.888
Top-50: 0.914
Top-100: 0.941
MRR: 0.581
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.054s
Time for attribute perturbation: 0.054s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  5.88it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.73it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.30it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  7.30it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:09, 10.19it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:08, 10.31it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.68it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.59it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.49it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:10,  8.02it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.98it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.40it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.79it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:12,  6.37it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:10,  7.67it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:09,  7.96it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.42it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:12,  6.18it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:11,  6.41it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  7.03it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:11,  6.12it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.15it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:10,  6.71it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  7.15it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:10,  6.24it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:11,  5.85it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:11,  5.68it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:11,  5.80it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:07,  8.21it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:06,  9.46it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:06,  8.65it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:07,  8.05it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:06,  8.31it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.54it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:09,  5.77it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:08,  6.54it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:07,  6.68it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  7.33it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:07,  6.82it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.09it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:08,  5.80it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.84it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.12it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.52it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.66it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  4.01it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.84it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.82it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.17it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  3.85it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.71it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.49it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.45it/s]
Time for cost matrix: 12.24s
Iter 0: wasserstein=1.174667, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998588, edge=0.000537, neigh=3.293130, align=3.854255, entropy=10.622718,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984708, edge=0.000479, neigh=3.066171, align=4.709140, entropy=9.716383,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982700, edge=0.000470, neigh=2.833108, align=4.988720, entropy=9.430983,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982655, edge=0.000464, neigh=2.783939, align=5.111008, entropy=9.307370,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982424, edge=0.000462, neigh=2.784281, align=5.193001, entropy=9.225002,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982052, edge=0.000464, neigh=2.904148, align=5.195607, entropy=9.222359,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.981534, edge=0.000466, neigh=3.027670, align=5.190135, entropy=9.227830,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.980756, edge=0.000467, neigh=3.155292, align=5.183285, entropy=9.234679,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980116, edge=0.000467, neigh=3.271769, align=5.180507, entropy=9.237434,s=1.000000, s_hat=1.000000
Time for optimization: 19.51s
Test results:
Top-1: 0.502
Top-10: 0.834
Top-30: 0.906
Top-50: 0.927
Top-100: 0.946
MRR: 0.619
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.059s
Time for attribute perturbation: 0.058s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:12,  7.85it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:12,  7.62it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.02it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.35it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:11,  8.11it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:09,  9.65it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:09,  8.94it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.97it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.02it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:11,  7.28it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:12,  6.55it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:15,  5.45it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.27it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:13,  5.87it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:14,  5.70it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:13,  5.74it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:12,  6.26it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.13it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.69it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:08,  8.47it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  8.00it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.76it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.46it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:11,  6.26it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:11,  6.26it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:10,  6.68it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:10,  6.35it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:10,  6.20it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:10,  6.07it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:10,  6.30it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:10,  6.22it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  7.63it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:07,  7.65it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:05, 10.06it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:07,  7.20it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:06,  7.76it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  7.12it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:08,  6.03it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:09,  5.56it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:09,  5.05it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:08,  5.51it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.02it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  6.48it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  6.70it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.77it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.97it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  4.71it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.58it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.15it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.96it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.78it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.61it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.60it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.01it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.59it/s]
Time for cost matrix: 12.32s
Iter 0: wasserstein=1.168233, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994710, edge=0.000540, neigh=3.201366, align=3.767965, entropy=10.709372,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980804, edge=0.000486, neigh=2.957868, align=4.624527, entropy=9.800836,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978569, edge=0.000474, neigh=2.819520, align=4.908216, entropy=9.511214,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978297, edge=0.000467, neigh=2.777474, align=5.043064, entropy=9.375214,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978256, edge=0.000465, neigh=2.760206, align=5.127426, entropy=9.290562,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978134, edge=0.000464, neigh=2.762875, align=5.180912, entropy=9.237054,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977542, edge=0.000465, neigh=2.898099, align=5.178355, entropy=9.239609,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976691, edge=0.000465, neigh=3.019493, align=5.169451, entropy=9.248513,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976061, edge=0.000466, neigh=3.136824, align=5.165129, entropy=9.252759,s=1.000000, s_hat=1.000000
Time for optimization: 19.28s
Test results:
Top-1: 0.425
Top-10: 0.785
Top-30: 0.879
Top-50: 0.914
Top-100: 0.936
MRR: 0.547
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.041s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.94it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:12,  7.56it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:12,  7.69it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:09,  9.92it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:08, 11.62it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:09, 10.03it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.07it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.29it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:13,  6.28it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.63it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.44it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:09,  8.31it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.48it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:07, 10.36it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:08,  9.03it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.35it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  7.29it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:10,  6.85it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:08,  8.10it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:09,  7.54it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:07,  9.04it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:07,  8.38it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:07,  9.08it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:06,  9.26it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:07,  8.06it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:09,  6.65it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:10,  5.72it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:07,  7.44it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:08,  6.87it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:07,  7.31it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:06,  8.44it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:07,  7.37it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:06,  7.74it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:06,  7.71it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:06,  7.09it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:06,  7.05it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:06,  7.42it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:06,  7.65it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:07,  6.20it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.70it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  4.71it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.29it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.93it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.81it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.87it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:11,  3.78it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:09,  4.36it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.13it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.75it/s]
Time for cost matrix: 11.28s
Iter 0: wasserstein=1.169109, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997563, edge=0.000540, neigh=3.192886, align=3.743214, entropy=10.732864,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983959, edge=0.000484, neigh=2.947763, align=4.622733, entropy=9.802703,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981305, edge=0.000472, neigh=2.780346, align=4.928157, entropy=9.491048,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980975, edge=0.000464, neigh=2.749991, align=5.071377, entropy=9.346907,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980807, edge=0.000464, neigh=2.723384, align=5.155000, entropy=9.262990,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980362, edge=0.000466, neigh=2.865978, align=5.157124, entropy=9.260842,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979775, edge=0.000467, neigh=3.003746, align=5.150031, entropy=9.267933,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978851, edge=0.000468, neigh=3.138868, align=5.143040, entropy=9.274924,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978264, edge=0.000468, neigh=3.254172, align=5.140247, entropy=9.277676,s=1.000000, s_hat=1.000000
Time for optimization: 19.65s
Test results:
Top-1: 0.441
Top-10: 0.796
Top-30: 0.873
Top-50: 0.899
Top-100: 0.925
MRR: 0.564
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.062s
Time for attribute perturbation: 0.038s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:13,  7.28it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.93it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:08, 11.05it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:14,  6.66it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.45it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.58it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.65it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.29it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  7.31it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  6.74it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:13,  6.47it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.37it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:17,  4.91it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.37it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:14,  5.83it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  5.99it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.95it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:09,  8.28it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:07, 10.34it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:07, 10.40it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:07,  9.10it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.10it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:07,  8.93it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:06,  9.78it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:06, 10.09it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:08,  7.48it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  7.48it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:07,  8.17it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  7.95it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:07,  7.89it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:07,  7.95it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:07,  7.31it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:06,  8.41it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:05, 10.32it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:05,  8.91it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:05,  8.30it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:07,  6.76it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  6.14it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.30it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.74it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.62it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.49it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.45it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.60it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.47it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.83it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  4.00it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.96it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.96it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.44it/s]
Time for cost matrix: 11.84s
Iter 0: wasserstein=1.164652, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993817, edge=0.000542, neigh=3.183727, align=3.728706, entropy=10.747361,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980270, edge=0.000485, neigh=2.949573, align=4.606377, entropy=9.819090,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977656, edge=0.000472, neigh=2.762069, align=4.920908, entropy=9.498610,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977261, edge=0.000464, neigh=2.749757, align=5.061641, entropy=9.356711,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977237, edge=0.000463, neigh=2.715867, align=5.146235, entropy=9.271765,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976976, edge=0.000462, neigh=2.749336, align=5.197029, entropy=9.220937,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976428, edge=0.000463, neigh=2.888082, align=5.198765, entropy=9.219199,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975513, edge=0.000464, neigh=3.006391, align=5.194834, entropy=9.223130,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974951, edge=0.000464, neigh=3.118168, align=5.191350, entropy=9.226579,s=1.000000, s_hat=1.000000
Time for optimization: 18.59s
Test results:
Top-1: 0.410
Top-10: 0.773
Top-30: 0.856
Top-50: 0.884
Top-100: 0.907
MRR: 0.537
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.052s
Time for attribute perturbation: 0.053s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 27.20it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 24.00it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 24.13it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 24.15it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:03, 21.28it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:05, 13.85it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:05, 14.90it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:05, 15.21it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:04, 17.93it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:01<00:03, 21.67it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:01<00:04, 16.74it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:04, 13.86it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:02<00:03, 16.40it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:02<00:03, 15.95it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:02<00:03, 16.36it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:02<00:02, 19.34it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:02<00:02, 21.93it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:02<00:02, 18.50it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:02, 18.07it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  9.38it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  8.91it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:04, 10.08it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:04,  9.60it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:05,  7.65it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:06,  6.51it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:07,  5.96it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:07,  5.77it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:07,  5.44it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:06,  5.91it/s]
Time for cost matrix: 5.88s
Iter 0: wasserstein=1.167773, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996097, edge=0.000540, neigh=3.199203, align=3.763312, entropy=10.711888,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982675, edge=0.000486, neigh=2.961181, align=4.626626, entropy=9.798689,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980367, edge=0.000473, neigh=2.797839, align=4.918467, entropy=9.500851,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980005, edge=0.000466, neigh=2.765876, align=5.046684, entropy=9.371604,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979863, edge=0.000465, neigh=2.764780, align=5.130888, entropy=9.287105,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979444, edge=0.000467, neigh=2.888052, align=5.130732, entropy=9.287233,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978934, edge=0.000469, neigh=3.019495, align=5.124053, entropy=9.293911,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978116, edge=0.000469, neigh=3.161020, align=5.117654, entropy=9.300309,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977484, edge=0.000469, neigh=3.282710, align=5.115048, entropy=9.302874,s=1.000000, s_hat=1.000000
Time for optimization: 12.09s
Test results:
Top-1: 0.445
Top-10: 0.787
Top-30: 0.867
Top-50: 0.893
Top-100: 0.924
MRR: 0.561
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.045s
Time for attribute perturbation: 0.049s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 28.06it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:06, 15.51it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:04, 21.81it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:00<00:03, 25.97it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:06, 12.45it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:06, 11.49it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:06, 11.79it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:04, 15.49it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:04, 17.74it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:02<00:04, 15.03it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:03, 17.64it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:02<00:03, 17.86it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:02<00:03, 19.09it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:02<00:03, 17.61it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:02<00:02, 18.83it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:02<00:02, 19.78it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:03<00:02, 17.24it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04, 11.71it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:03, 11.75it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:03, 11.44it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:04,  8.90it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:00<00:04,  8.50it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.79it/s]
Time for cost matrix: 4.95s
Iter 0: wasserstein=1.164419, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992359, edge=0.000542, neigh=3.175678, align=3.750930, entropy=10.726694,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978309, edge=0.000488, neigh=2.971001, align=4.612510, entropy=9.813222,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976432, edge=0.000476, neigh=2.809151, align=4.896063, entropy=9.524126,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976180, edge=0.000468, neigh=2.762514, align=5.032653, entropy=9.385796,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976061, edge=0.000466, neigh=2.748045, align=5.122670, entropy=9.295345,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976009, edge=0.000464, neigh=2.769146, align=5.181253, entropy=9.236714,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975444, edge=0.000466, neigh=2.900543, align=5.179070, entropy=9.238894,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974618, edge=0.000467, neigh=3.029518, align=5.172690, entropy=9.245274,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974007, edge=0.000467, neigh=3.143443, align=5.169360, entropy=9.248523,s=1.000000, s_hat=1.000000
Time for optimization: 13.09s
Test results:
Top-1: 0.396
Top-10: 0.775
Top-30: 0.861
Top-50: 0.892
Top-100: 0.923
MRR: 0.522
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.022s
Time for attribute perturbation: 0.051s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.58it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:08, 11.31it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:09,  9.50it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:10,  8.65it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:12,  7.34it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.95it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.16it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.39it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:13,  6.51it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:12,  7.09it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.27it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.83it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  7.36it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  6.10it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:15,  5.09it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:17,  4.58it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:17,  4.46it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:18,  4.16it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:20,  3.76it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:20,  3.62it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:21,  3.45it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:05<00:21,  3.43it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:20,  3.55it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:19,  3.73it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:18,  3.87it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:17,  3.91it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:15,  4.29it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:06<00:15,  4.23it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:06<00:16,  4.06it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:06<00:15,  4.10it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:07<00:15,  4.05it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:07<00:15,  3.95it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:07<00:15,  4.04it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:07<00:14,  4.15it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:08<00:13,  4.32it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:08<00:13,  4.28it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:08<00:13,  4.39it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:08<00:12,  4.53it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:08<00:10,  5.29it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:09<00:10,  5.42it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:09<00:10,  5.16it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:09<00:11,  4.52it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:09<00:11,  4.45it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:11,  4.47it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:10<00:11,  4.42it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:11,  4.35it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:10<00:10,  4.43it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:11,  4.21it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:09,  4.73it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.16it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:08,  5.54it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:07,  5.97it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:08,  5.50it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:08,  5.07it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.91it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.81it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:12,  3.32it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.16it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.42it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.51it/s]
Time for cost matrix: 15.52s
Iter 0: wasserstein=1.161403, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993971, edge=0.000543, neigh=3.091818, align=3.640126, entropy=10.834824,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980948, edge=0.000491, neigh=2.863049, align=4.511619, entropy=9.913555,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978248, edge=0.000477, neigh=2.660465, align=4.826219, entropy=9.593072,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977853, edge=0.000467, neigh=2.662707, align=4.973431, entropy=9.444793,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977566, edge=0.000464, neigh=2.685253, align=5.077248, entropy=9.340736,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976971, edge=0.000466, neigh=2.822448, align=5.079597, entropy=9.338368,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976320, edge=0.000468, neigh=2.949743, align=5.072289, entropy=9.345675,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975489, edge=0.000469, neigh=3.082460, align=5.065416, entropy=9.352548,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974857, edge=0.000469, neigh=3.199498, align=5.062054, entropy=9.355833,s=1.000000, s_hat=1.000000
Time for optimization: 19.71s
Test results:
Top-1: 0.356
Top-10: 0.718
Top-30: 0.806
Top-50: 0.834
Top-100: 0.878
MRR: 0.478
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.075s
Time for attribute perturbation: 0.062s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.70it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:17,  5.62it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  4.90it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.76it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:19,  4.90it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:18,  5.18it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:16,  5.59it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:17,  5.40it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.15it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.42it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.72it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:13,  6.37it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  6.08it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.47it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.84it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:17,  4.78it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:15,  5.37it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:12,  6.18it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:13,  5.91it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.95it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:11,  6.44it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:13,  5.67it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:12,  5.97it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.83it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.56it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:11,  6.21it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:11,  6.00it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:11,  5.92it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:12,  5.17it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  6.46it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:08,  7.27it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:08,  7.44it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:08,  7.11it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:08,  7.09it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  6.01it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:07<00:11,  5.07it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:09,  5.59it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:07,  6.91it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:08,  6.48it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:07,  6.70it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:08<00:07,  6.76it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:06,  7.98it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:06,  7.64it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.28it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.90it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.85it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.54it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:17,  2.60it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:16,  2.79it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:13,  3.18it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.47it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.34it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.50it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:10,  3.75it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.01it/s]
Time for cost matrix: 12.99s
Iter 0: wasserstein=1.162327, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993509, edge=0.000544, neigh=3.094186, align=3.653871, entropy=10.823665,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979919, edge=0.000490, neigh=2.863990, align=4.515386, entropy=9.910281,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977428, edge=0.000477, neigh=2.675214, align=4.820168, entropy=9.599451,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976981, edge=0.000468, neigh=2.680807, align=4.976099, entropy=9.442190,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976880, edge=0.000466, neigh=2.658170, align=5.077919, entropy=9.340070,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976631, edge=0.000464, neigh=2.698054, align=5.146998, entropy=9.270968,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975935, edge=0.000465, neigh=2.829254, align=5.148682, entropy=9.269282,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974928, edge=0.000465, neigh=2.947882, align=5.143067, entropy=9.274896,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974283, edge=0.000466, neigh=3.059162, align=5.140152, entropy=9.277704,s=1.000000, s_hat=1.000000
Time for optimization: 18.84s
Test results:
Top-1: 0.351
Top-10: 0.749
Top-30: 0.863
Top-50: 0.889
Top-100: 0.916
MRR: 0.481
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.059s
Time for attribute perturbation: 0.059s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:09, 10.57it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:10,  9.14it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.33it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.47it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:13,  6.71it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.48it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:09,  8.93it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.47it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  6.80it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:12,  6.74it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.39it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.04it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:09,  8.22it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  7.31it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:11,  7.27it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:11,  6.85it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:10,  7.13it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.84it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  6.97it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  8.64it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:08,  8.26it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:11,  6.42it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:12,  5.58it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:13,  5.11it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:14,  4.71it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:15,  4.34it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:15,  4.14it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:10,  5.96it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  7.25it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  7.45it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:09,  6.52it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:10,  5.83it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:10,  5.71it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  5.81it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:10,  5.42it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:09,  5.87it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:07,  7.31it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:07,  7.25it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:07,  6.72it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  6.77it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:08,  5.85it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.03it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:08,  5.82it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.39it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.32it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:09,  4.98it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  4.79it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  4.06it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.95it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.97it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.90it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.58it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  2.96it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.27it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.22it/s]
Time for cost matrix: 12.60s
Iter 0: wasserstein=1.155626, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989932, edge=0.000546, neigh=3.073611, align=3.605424, entropy=10.871130,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976763, edge=0.000497, neigh=2.828037, align=4.462634, entropy=9.962669,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974275, edge=0.000481, neigh=2.650553, align=4.777270, entropy=9.643105,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973625, edge=0.000471, neigh=2.661423, align=4.925301, entropy=9.493088,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973440, edge=0.000468, neigh=2.677284, align=5.028806, entropy=9.389185,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972935, edge=0.000470, neigh=2.803622, align=5.032540, entropy=9.385425,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972356, edge=0.000472, neigh=2.921370, align=5.026492, entropy=9.391472,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971447, edge=0.000472, neigh=3.036446, align=5.020568, entropy=9.397396,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970831, edge=0.000473, neigh=3.149217, align=5.017196, entropy=9.400641,s=1.000000, s_hat=1.000000
Time for optimization: 20.58s
Test results:
Top-1: 0.306
Top-10: 0.707
Top-30: 0.807
Top-50: 0.837
Top-100: 0.874
MRR: 0.432
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.067s
Time for attribute perturbation: 0.048s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:08, 11.59it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:10,  8.78it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:09,  9.96it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:10,  9.16it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:09,  9.78it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.51it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.50it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:14,  5.92it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.15it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.42it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.54it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:11,  7.14it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:08,  8.78it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:09,  8.21it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.48it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.71it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  7.33it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:07,  9.93it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:06, 11.29it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  7.76it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:08,  7.72it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:07,  8.21it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:07,  8.29it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:08,  7.60it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  7.40it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:08,  7.06it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:08,  6.93it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:06,  8.89it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:05<00:06,  8.06it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  7.29it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:05,  9.34it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:06,  7.60it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:06,  7.29it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:06,  7.64it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  4.04it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.56it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.51it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.29it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.37it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.43it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.51it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  3.88it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.61it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.64it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.21it/s]
Time for cost matrix: 11.73s
Iter 0: wasserstein=1.168416, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997333, edge=0.000542, neigh=3.144630, align=3.713457, entropy=10.762339,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984079, edge=0.000488, neigh=2.932685, align=4.585910, entropy=9.839460,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981709, edge=0.000475, neigh=2.728209, align=4.887332, entropy=9.532623,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981414, edge=0.000467, neigh=2.714740, align=5.017809, entropy=9.400533,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981244, edge=0.000465, neigh=2.720549, align=5.107109, entropy=9.310885,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980780, edge=0.000466, neigh=2.841674, align=5.109855, entropy=9.308110,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980252, edge=0.000468, neigh=2.973084, align=5.104516, entropy=9.313448,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979491, edge=0.000468, neigh=3.105087, align=5.097472, entropy=9.320492,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978875, edge=0.000469, neigh=3.227392, align=5.093453, entropy=9.324458,s=1.000000, s_hat=1.000000
Time for optimization: 20.39s
Test results:
Top-1: 0.416
Top-10: 0.772
Top-30: 0.864
Top-50: 0.891
Top-100: 0.920
MRR: 0.539
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.056s
Time for attribute perturbation: 0.049s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.28it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.37it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.41it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.70it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:12,  7.43it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.33it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.91it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.33it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.31it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  7.10it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:15,  5.78it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.33it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.37it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.50it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:12,  6.43it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:10,  7.78it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:11,  6.89it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.09it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.58it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.68it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  6.88it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:11,  6.21it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:13,  5.53it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:13,  5.42it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  7.14it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:09,  7.32it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:09,  6.72it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:09,  6.99it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:10,  6.13it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:10,  5.98it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:09,  6.38it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  7.14it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:07,  7.51it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:06,  8.85it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:07,  7.36it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:09,  6.02it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:08,  6.63it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:07,  6.84it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:08,  5.91it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:08,  6.37it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  6.87it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  7.77it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.61it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.35it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.25it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.41it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.57it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.59it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.55it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.56it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.10it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.22it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.05it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.01it/s]
Time for cost matrix: 13.04s
Iter 0: wasserstein=1.164717, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996136, edge=0.000542, neigh=3.134446, align=3.683740, entropy=10.792126,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982845, edge=0.000489, neigh=2.905951, align=4.545473, entropy=9.879906,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980567, edge=0.000476, neigh=2.703129, align=4.850399, entropy=9.569423,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980157, edge=0.000466, neigh=2.710883, align=4.994190, entropy=9.424114,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980035, edge=0.000465, neigh=2.708297, align=5.087574, entropy=9.330418,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979495, edge=0.000466, neigh=2.811450, align=5.092923, entropy=9.325042,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978929, edge=0.000468, neigh=2.936758, align=5.089242, entropy=9.328722,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978070, edge=0.000468, neigh=3.068678, align=5.084075, entropy=9.333888,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977472, edge=0.000469, neigh=3.190497, align=5.082073, entropy=9.335845,s=1.000000, s_hat=1.000000
Time for optimization: 19.74s
Test results:
Top-1: 0.371
Top-10: 0.735
Top-30: 0.845
Top-50: 0.867
Top-100: 0.907
MRR: 0.495
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.066s
Time for attribute perturbation: 0.063s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:29,  3.37it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.13it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  6.94it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.60it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:11,  7.81it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.64it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.32it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:15,  5.79it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:13,  6.53it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:12,  7.06it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  5.89it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.26it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.68it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.44it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  6.19it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:12,  6.53it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:13,  5.96it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.87it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:14,  5.36it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:13,  5.65it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:13,  5.60it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:14,  5.06it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:13,  5.39it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:10,  6.53it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  6.98it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:10,  6.44it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:09,  6.72it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:09,  7.32it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:08,  7.75it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.21it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:08,  7.41it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:07,  7.52it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:06,  9.05it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:07,  7.31it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:09,  5.98it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:09,  5.46it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:09,  5.87it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:05,  8.56it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.01it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:06,  7.69it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.53it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.78it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.50it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.65it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.59it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.15it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:09,  4.40it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.21it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:09,  4.41it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  4.08it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.18it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.56it/s]
Time for cost matrix: 12.92s
Iter 0: wasserstein=1.165721, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996744, edge=0.000543, neigh=3.159998, align=3.697514, entropy=10.777662,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983616, edge=0.000490, neigh=2.903896, align=4.556713, entropy=9.868599,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981280, edge=0.000476, neigh=2.682453, align=4.858408, entropy=9.561014,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980948, edge=0.000466, neigh=2.699440, align=5.001660, entropy=9.416642,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980807, edge=0.000464, neigh=2.699034, align=5.090006, entropy=9.327987,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980506, edge=0.000462, neigh=2.726357, align=5.151422, entropy=9.266544,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979913, edge=0.000463, neigh=2.848933, align=5.153476, entropy=9.264488,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978979, edge=0.000464, neigh=2.977255, align=5.148544, entropy=9.269420,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978358, edge=0.000465, neigh=3.082704, align=5.146972, entropy=9.270949,s=1.000000, s_hat=1.000000
Time for optimization: 19.00s
Test results:
Top-1: 0.388
Top-10: 0.762
Top-30: 0.861
Top-50: 0.885
Top-100: 0.921
MRR: 0.515
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.048s
Time for attribute perturbation: 0.042s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.91it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.28it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.63it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.13it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:19,  4.77it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:19,  4.78it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:19,  4.77it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:17,  5.31it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.55it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  8.81it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:10,  7.87it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:11,  7.22it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:12,  6.62it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:13,  6.19it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:13,  6.02it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.45it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:15,  5.07it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:15,  5.23it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.07it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:12,  5.94it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:11,  6.63it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:11,  6.48it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:10,  7.09it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.51it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:07,  8.97it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:07,  8.63it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:07,  8.41it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:06,  9.73it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:07,  8.69it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.50it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:10,  5.99it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:09,  6.31it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:09,  6.11it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:09,  5.89it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:10,  5.41it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:10,  5.12it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:10,  5.01it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:08,  6.04it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:08,  6.04it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  6.79it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:05,  8.83it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.55it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.76it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.27it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.04it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.20it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.43it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.32it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.52it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.67it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.86it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.54it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.16it/s]
Time for cost matrix: 12.80s
Iter 0: wasserstein=1.163926, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994591, edge=0.000543, neigh=3.082527, align=3.673378, entropy=10.804326,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981050, edge=0.000489, neigh=2.880234, align=4.538552, entropy=9.887146,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978673, edge=0.000476, neigh=2.723465, align=4.843291, entropy=9.576217,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978245, edge=0.000468, neigh=2.698343, align=4.995569, entropy=9.422703,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978132, edge=0.000465, neigh=2.669618, align=5.088682, entropy=9.329306,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978029, edge=0.000464, neigh=2.700594, align=5.149850, entropy=9.268116,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977357, edge=0.000465, neigh=2.858719, align=5.151232, entropy=9.266733,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976432, edge=0.000466, neigh=2.989500, align=5.145832, entropy=9.272132,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975733, edge=0.000466, neigh=3.099341, align=5.141383, entropy=9.276558,s=1.000000, s_hat=1.000000
Time for optimization: 19.97s
Test results:
Top-1: 0.361
Top-10: 0.751
Top-30: 0.853
Top-50: 0.879
Top-100: 0.908
MRR: 0.492
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.052s
Time for attribute perturbation: 0.042s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  6.11it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  4.91it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:21,  4.57it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.21it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:15,  6.16it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.42it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  6.13it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.12it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.39it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  7.31it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:11,  7.59it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:11,  7.56it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:09,  9.33it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:10,  8.01it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.71it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.85it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:08,  9.22it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:07, 10.07it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  9.06it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  6.95it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.25it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.23it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:11,  6.11it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.39it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:11,  5.78it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:12,  5.26it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:13,  4.93it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:13,  4.82it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:13,  4.78it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:13,  4.53it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:10,  5.72it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:10,  5.78it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:09,  6.29it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  5.81it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:09,  6.20it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:09,  6.04it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:09,  5.56it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:07,  7.13it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  6.57it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  7.23it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:06,  7.51it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.53it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.52it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.77it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.83it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:15,  3.00it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.52it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.53it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.56it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.72it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.66it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.89it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.35it/s]
Time for cost matrix: 13.08s
Iter 0: wasserstein=1.173745, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.999655, edge=0.000539, neigh=3.233217, align=3.794865, entropy=10.681580,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.985831, edge=0.000483, neigh=3.014470, align=4.656361, entropy=9.769289,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.983695, edge=0.000473, neigh=2.796829, align=4.940796, entropy=9.478694,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.983457, edge=0.000466, neigh=2.743215, align=5.070863, entropy=9.347474,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.983389, edge=0.000463, neigh=2.745369, align=5.152664, entropy=9.265332,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.983358, edge=0.000461, neigh=2.736359, align=5.211130, entropy=9.206836,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.982784, edge=0.000463, neigh=2.870349, align=5.210330, entropy=9.207634,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.981857, edge=0.000464, neigh=3.015560, align=5.203505, entropy=9.214459,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.981248, edge=0.000464, neigh=3.130817, align=5.200509, entropy=9.217433,s=1.000000, s_hat=1.000000
Time for optimization: 20.17s
Test results:
Top-1: 0.469
Top-10: 0.825
Top-30: 0.894
Top-50: 0.917
Top-100: 0.939
MRR: 0.588
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.078s
Time for attribute perturbation: 0.091s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:27,  3.59it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:26,  3.77it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:24,  3.90it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:24,  3.97it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:21,  4.37it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  4.00it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:20,  4.58it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:20,  4.55it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:23,  3.84it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:21,  4.15it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.09it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:24,  3.66it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:24,  3.52it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:24,  3.46it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:21,  3.93it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:21,  3.95it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:22,  3.76it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:22,  3.64it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:22,  3.52it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:23,  3.35it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:25,  3.07it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:25,  3.11it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:21,  3.64it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:06<00:21,  3.58it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:06<00:20,  3.60it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:06<00:19,  3.89it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:18,  3.88it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:07<00:19,  3.78it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:17,  4.06it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:07<00:18,  3.87it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:08<00:19,  3.51it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:08<00:23,  2.90it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:09<00:24,  2.75it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:09<00:19,  3.38it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:09<00:15,  4.12it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:09<00:17,  3.72it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:10<00:19,  3.27it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:10<00:20,  3.03it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:10<00:18,  3.23it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:11<00:20,  3.00it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:11<00:22,  2.66it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:12<00:22,  2.59it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:12<00:22,  2.53it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:12<00:19,  2.83it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:13<00:19,  2.81it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:13<00:19,  2.76it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:13<00:17,  2.95it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:14<00:17,  2.97it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:14<00:18,  2.74it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:14<00:16,  3.05it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:15<00:16,  2.93it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:15<00:18,  2.60it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:18,  2.48it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:14,  3.25it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:28,  1.71it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:25,  1.85it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:25,  1.82it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:02<00:24,  1.88it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:25,  1.75it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:03<00:25,  1.71it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:03<00:24,  1.78it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:04<00:24,  1.69it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:04<00:22,  1.86it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:22,  1.80it/s]Computing product RWR scores:  20%|██        | 10/50 [00:06<00:25,  1.57it/s]
Time for cost matrix: 25.08s
Iter 0: wasserstein=1.161202, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991937, edge=0.000544, neigh=3.109826, align=3.669022, entropy=10.807953,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978432, edge=0.000491, neigh=2.845761, align=4.523858, entropy=9.901638,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975965, edge=0.000477, neigh=2.658470, align=4.828338, entropy=9.591208,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975531, edge=0.000468, neigh=2.675711, align=4.979574, entropy=9.438700,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975557, edge=0.000466, neigh=2.654879, align=5.072179, entropy=9.345809,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975409, edge=0.000464, neigh=2.690899, align=5.136595, entropy=9.281370,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974721, edge=0.000465, neigh=2.821276, align=5.138491, entropy=9.279473,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973717, edge=0.000465, neigh=2.938620, align=5.133201, entropy=9.284763,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973068, edge=0.000466, neigh=3.053121, align=5.130005, entropy=9.287836,s=1.000000, s_hat=1.000000
Time for optimization: 35.60s
Test results:
Top-1: 0.342
Top-10: 0.742
Top-30: 0.837
Top-50: 0.865
Top-100: 0.903
MRR: 0.476
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.067s
Time for attribute perturbation: 0.096s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:34,  2.88it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:33,  2.89it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:28,  3.44it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:31,  3.05it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:29,  3.25it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:30,  3.10it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:30,  3.00it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:29,  3.14it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:26,  3.48it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:24,  3.64it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:24,  3.63it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:21,  4.16it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:20,  4.34it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:22,  3.83it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:23,  3.65it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:22,  3.67it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:04<00:19,  4.35it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:19,  4.24it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:20,  4.05it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:05<00:20,  3.83it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:05<00:18,  4.35it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:05<00:19,  4.10it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:19,  3.87it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:06<00:21,  3.47it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:07<00:25,  3.00it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:07<00:26,  2.84it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:27,  2.61it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:29,  2.48it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:08<00:29,  2.41it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:09<00:28,  2.49it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:09<00:28,  2.45it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:09<00:26,  2.61it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:10<00:24,  2.68it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:10<00:23,  2.75it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:10<00:22,  2.85it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:11<00:22,  2.87it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:11<00:22,  2.78it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:12<00:22,  2.82it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:12<00:19,  3.07it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:12<00:18,  3.16it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:12<00:18,  3.27it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:13<00:18,  3.21it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:13<00:18,  3.14it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:13<00:19,  2.94it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:14<00:17,  3.14it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:14<00:15,  3.39it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:14<00:15,  3.44it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:14<00:14,  3.63it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:15<00:13,  3.78it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:15<00:11,  4.24it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:15<00:12,  3.96it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:15<00:11,  4.14it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:13,  3.53it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:14,  3.17it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:22,  2.22it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:18,  2.60it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:21,  2.17it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:22,  2.02it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:19,  2.25it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:20,  2.17it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:03<00:21,  2.01it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:03<00:20,  2.07it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:04<00:18,  2.16it/s]Computing product RWR scores:  20%|██        | 10/50 [00:04<00:17,  2.23it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:20,  1.96it/s]
Time for cost matrix: 24.37s
Iter 0: wasserstein=1.166397, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996687, edge=0.000542, neigh=3.137885, align=3.694967, entropy=10.780603,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983356, edge=0.000489, neigh=2.910527, align=4.558017, entropy=9.867471,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981032, edge=0.000476, neigh=2.713640, align=4.863047, entropy=9.557199,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980539, edge=0.000467, neigh=2.714512, align=5.000986, entropy=9.417295,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980409, edge=0.000465, neigh=2.716230, align=5.091708, entropy=9.326281,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980214, edge=0.000462, neigh=2.750224, align=5.152719, entropy=9.265247,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979641, edge=0.000464, neigh=2.879206, align=5.154015, entropy=9.263949,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978737, edge=0.000465, neigh=3.007705, align=5.149538, entropy=9.268426,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978115, edge=0.000465, neigh=3.120073, align=5.146890, entropy=9.271021,s=1.000000, s_hat=1.000000
Time for optimization: 34.26s
Test results:
Top-1: 0.393
Top-10: 0.769
Top-30: 0.858
Top-50: 0.880
Top-100: 0.913
MRR: 0.523
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.066s
Time for attribute perturbation: 0.007s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:08, 11.36it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:09, 10.24it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:10,  8.83it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:12,  7.56it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  7.79it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:09,  9.22it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:08, 10.48it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:08, 10.45it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:08,  9.50it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:10,  7.52it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  6.92it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:09,  8.23it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:09,  8.23it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:11,  6.84it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:11,  6.68it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  7.46it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:11,  6.09it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.47it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:10,  6.56it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:11,  6.26it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:12,  5.65it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:11,  5.88it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:13,  5.08it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:13,  4.71it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:12,  5.00it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:11,  5.64it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:10,  5.93it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:11,  5.47it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:11,  5.37it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:09,  5.99it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:07,  7.42it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:07,  7.28it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.57it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  7.17it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:05,  9.05it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:05,  9.25it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:05,  8.81it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.76it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:05,  8.02it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.14it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  4.07it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.64it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.76it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.07it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.40it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.51it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.65it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  4.01it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:09,  4.18it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.49it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.58it/s]
Time for cost matrix: 11.83s
Iter 0: wasserstein=1.155368, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990361, edge=0.000546, neigh=3.058694, align=3.580652, entropy=10.895797,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977220, edge=0.000497, neigh=2.800195, align=4.439572, entropy=9.985765,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974841, edge=0.000482, neigh=2.594948, align=4.754124, entropy=9.666446,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974174, edge=0.000470, neigh=2.631267, align=4.905598, entropy=9.512737,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974074, edge=0.000468, neigh=2.654141, align=5.006488, entropy=9.411500,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973558, edge=0.000470, neigh=2.771876, align=5.010289, entropy=9.407677,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972938, edge=0.000471, neigh=2.887667, align=5.005415, entropy=9.412549,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972035, edge=0.000472, neigh=3.000549, align=4.999221, entropy=9.418742,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971379, edge=0.000472, neigh=3.110516, align=4.997246, entropy=9.420529,s=1.000000, s_hat=1.000000
Time for optimization: 19.65s
Test results:
Top-1: 0.265
Top-10: 0.676
Top-30: 0.789
Top-50: 0.829
Top-100: 0.860
MRR: 0.395
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.051s
Time for attribute perturbation: 0.007s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:14,  6.62it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:13,  7.28it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.79it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.58it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:09,  9.70it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:10,  8.90it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:08, 10.31it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.72it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:09,  9.24it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:09,  8.70it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:08,  9.90it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:07, 11.31it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:08,  9.58it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:10,  7.32it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.51it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.69it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.25it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:08,  8.09it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:09,  7.17it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:10,  6.26it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  6.72it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:12,  5.39it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:09,  6.51it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:10,  6.29it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:09,  6.22it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  6.82it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:06,  8.48it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:05,  9.92it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:04, 11.93it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:04, 11.11it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:05,  9.17it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:05,  9.27it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:04, 10.50it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.31it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.20it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.79it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.51it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.71it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.51it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.41it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:13,  3.14it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.51it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.56it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.64it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.29it/s]
Time for cost matrix: 11.13s
Iter 0: wasserstein=1.155753, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990078, edge=0.000547, neigh=3.044218, align=3.568787, entropy=10.907645,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976885, edge=0.000498, neigh=2.782988, align=4.426523, entropy=9.998762,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974409, edge=0.000483, neigh=2.561154, align=4.746815, entropy=9.673354,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973791, edge=0.000472, neigh=2.606680, align=4.897640, entropy=9.520741,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973689, edge=0.000469, neigh=2.640965, align=4.998171, entropy=9.419821,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973176, edge=0.000470, neigh=2.769651, align=5.000429, entropy=9.417536,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972601, edge=0.000471, neigh=2.889753, align=4.994362, entropy=9.423602,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971734, edge=0.000472, neigh=2.998618, align=4.989187, entropy=9.428777,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971098, edge=0.000473, neigh=3.109232, align=4.985390, entropy=9.432458,s=1.000000, s_hat=1.000000
Time for optimization: 20.24s
Test results:
Top-1: 0.268
Top-10: 0.667
Top-30: 0.782
Top-50: 0.813
Top-100: 0.850
MRR: 0.398
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.066s
Time for attribute perturbation: 0.085s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 17.24it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:05, 16.81it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:04, 20.70it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:03, 22.51it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:03, 24.20it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:03, 25.17it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:03, 24.92it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:00<00:03, 25.39it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:02, 25.40it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:02, 26.18it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:02, 24.19it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:01<00:02, 22.64it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:01<00:02, 22.81it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:01<00:02, 24.30it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:01<00:02, 25.17it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:01<00:02, 24.14it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:02<00:02, 25.02it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:02<00:01, 25.65it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:01, 23.60it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.38it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  8.81it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  8.84it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  9.17it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:04,  9.36it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:04,  9.55it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:04,  9.53it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:04,  9.53it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:00<00:04,  9.58it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.64it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.37it/s]
Time for cost matrix: 4.44s
Iter 0: wasserstein=1.157304, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991984, edge=0.000545, neigh=3.048025, align=3.586791, entropy=10.889518,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978837, edge=0.000497, neigh=2.801674, align=4.445578, entropy=9.979717,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976324, edge=0.000481, neigh=2.607252, align=4.757165, entropy=9.662538,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975819, edge=0.000471, neigh=2.632397, align=4.905715, entropy=9.512555,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975585, edge=0.000468, neigh=2.640924, align=5.014166, entropy=9.403819,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975069, edge=0.000470, neigh=2.767296, align=5.019129, entropy=9.398836,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974446, edge=0.000472, neigh=2.886033, align=5.013099, entropy=9.404865,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973545, edge=0.000472, neigh=2.998687, align=5.006771, entropy=9.411193,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972922, edge=0.000473, neigh=3.107666, align=5.003241, entropy=9.414643,s=1.000000, s_hat=1.000000
Time for optimization: 12.29s
Test results:
Top-1: 0.279
Top-10: 0.683
Top-30: 0.793
Top-50: 0.827
Top-100: 0.867
MRR: 0.407
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.020s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 26.17it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 26.88it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 27.47it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 28.38it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:04, 17.21it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:04, 20.07it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:03, 21.27it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:03, 24.67it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:02, 25.98it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:02, 24.52it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:01<00:02, 24.49it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:01<00:02, 26.69it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:01<00:02, 26.24it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:01<00:02, 21.06it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:02<00:02, 22.34it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:02<00:02, 22.03it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:02, 22.61it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:02, 22.97it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04, 10.47it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  8.84it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:05,  8.93it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:05,  8.60it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:04,  9.23it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.59it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.58it/s]
Time for cost matrix: 4.43s
Iter 0: wasserstein=1.166996, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995664, edge=0.000542, neigh=3.096322, align=3.672856, entropy=10.804504,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981723, edge=0.000489, neigh=2.897075, align=4.546451, entropy=9.879072,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979666, edge=0.000476, neigh=2.715350, align=4.843775, entropy=9.576191,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979387, edge=0.000467, neigh=2.685903, align=4.989014, entropy=9.429408,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979378, edge=0.000464, neigh=2.675228, align=5.075108, entropy=9.342903,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979294, edge=0.000462, neigh=2.704184, align=5.138534, entropy=9.279433,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978765, edge=0.000463, neigh=2.828147, align=5.140204, entropy=9.277760,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977914, edge=0.000464, neigh=2.942668, align=5.134399, entropy=9.283565,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977252, edge=0.000465, neigh=3.049613, align=5.130299, entropy=9.287568,s=1.000000, s_hat=1.000000
Time for optimization: 10.10s
Test results:
Top-1: 0.384
Top-10: 0.750
Top-30: 0.847
Top-50: 0.882
Top-100: 0.920
MRR: 0.508
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.028s
Time for attribute perturbation: 0.005s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:14,  7.02it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:04, 20.83it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:03, 24.08it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:03, 24.96it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:00<00:03, 26.38it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:00<00:03, 25.73it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:02, 27.30it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:03, 21.18it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:05, 13.91it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:03, 17.45it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:01<00:03, 21.07it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:01<00:02, 24.06it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:01<00:02, 25.21it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:02<00:02, 26.26it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:02<00:01, 26.91it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:02<00:01, 27.38it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:02, 21.50it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04, 11.46it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:03, 11.55it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:03, 11.06it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:03, 11.31it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 11.30it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 10.27it/s]
Time for cost matrix: 4.36s
Iter 0: wasserstein=1.164102, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994728, edge=0.000544, neigh=3.103807, align=3.648895, entropy=10.828356,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980804, edge=0.000492, neigh=2.873132, align=4.500247, entropy=9.925458,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978652, edge=0.000479, neigh=2.671632, align=4.797979, entropy=9.622130,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978294, edge=0.000470, neigh=2.686749, align=4.946433, entropy=9.472017,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978398, edge=0.000467, neigh=2.665432, align=5.046680, entropy=9.371334,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978237, edge=0.000463, neigh=2.704963, align=5.121381, entropy=9.296586,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977651, edge=0.000465, neigh=2.834086, align=5.122676, entropy=9.295288,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976708, edge=0.000466, neigh=2.962690, align=5.116956, entropy=9.301008,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976062, edge=0.000466, neigh=3.077835, align=5.113450, entropy=9.304457,s=1.000000, s_hat=1.000000
Time for optimization: 18.95s
Test results:
Top-1: 0.349
Top-10: 0.726
Top-30: 0.831
Top-50: 0.865
Top-100: 0.907
MRR: 0.474
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.062s
Time for attribute perturbation: 0.024s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.52it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.40it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.38it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.90it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  6.81it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:16,  5.81it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:18,  5.01it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:16,  5.61it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:15,  6.02it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.27it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:15,  5.91it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:14,  6.09it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:13,  6.56it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:10,  8.25it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:10,  8.25it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:08,  9.72it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:07, 10.31it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:08,  8.87it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:09,  7.74it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.40it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.43it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:12,  5.73it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:11,  6.42it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  5.96it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:11,  6.05it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:12,  5.52it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:11,  5.72it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:12,  5.30it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:14,  4.68it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:14,  4.35it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:14,  4.32it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:06<00:14,  4.49it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:14,  4.19it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:09,  6.23it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:07,  7.75it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:07,  7.64it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.97it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:08,  6.35it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:09,  5.96it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:09,  5.83it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:09,  5.67it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:08,  5.84it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:08<00:06,  8.06it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:05,  9.24it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.33it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:19,  2.51it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.88it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:15,  3.10it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.34it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.38it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.17it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:11,  3.76it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  3.93it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.53it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.02it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.03it/s]
Time for cost matrix: 13.26s
Iter 0: wasserstein=1.167504, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998342, edge=0.000542, neigh=3.091912, align=3.656996, entropy=10.818984,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984974, edge=0.000489, neigh=2.883073, align=4.531262, entropy=9.894167,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982642, edge=0.000476, neigh=2.659266, align=4.842182, entropy=9.577700,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982242, edge=0.000467, neigh=2.664655, align=4.980674, entropy=9.437685,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982175, edge=0.000464, neigh=2.668084, align=5.074313, entropy=9.343683,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981939, edge=0.000461, neigh=2.703206, align=5.136539, entropy=9.281427,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.981391, edge=0.000463, neigh=2.836708, align=5.138937, entropy=9.279027,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.980547, edge=0.000464, neigh=2.965062, align=5.133864, entropy=9.284100,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979884, edge=0.000464, neigh=3.074875, align=5.130936, entropy=9.286991,s=1.000000, s_hat=1.000000
Time for optimization: 20.44s
Test results:
Top-1: 0.384
Top-10: 0.747
Top-30: 0.850
Top-50: 0.870
Top-100: 0.907
MRR: 0.509
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.050s
Time for attribute perturbation: 0.037s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.36it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:08, 11.78it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.04it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:16,  5.86it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:14,  6.54it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  6.13it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.15it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.12it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  6.19it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.32it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  5.85it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.20it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.05it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:18,  4.56it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:19,  4.28it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:15,  5.32it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.59it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:10,  7.32it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.07it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:10,  6.90it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:11,  6.38it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:11,  6.11it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.48it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:07,  9.19it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  7.61it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:09,  7.43it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:08,  7.23it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  6.79it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:09,  6.84it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:09,  6.79it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:07,  7.76it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:07,  7.55it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:07,  7.78it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:06,  8.02it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:06,  8.39it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:05,  9.54it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:05,  9.46it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  8.01it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:07,  6.39it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:08,  5.49it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  6.09it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.58it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.35it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.73it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.74it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  3.86it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.04it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.35it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.22it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.29it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.56it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.44it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.11it/s]
Time for cost matrix: 12.83s
Iter 0: wasserstein=1.164565, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995333, edge=0.000544, neigh=3.067119, align=3.627954, entropy=10.848930,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982006, edge=0.000495, neigh=2.832373, align=4.488308, entropy=9.937224,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979709, edge=0.000480, neigh=2.630692, align=4.795078, entropy=9.624690,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979341, edge=0.000470, neigh=2.644136, align=4.934949, entropy=9.483361,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979180, edge=0.000467, neigh=2.659633, align=5.032677, entropy=9.385312,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978771, edge=0.000469, neigh=2.782901, align=5.039381, entropy=9.378585,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978252, edge=0.000470, neigh=2.898623, align=5.035456, entropy=9.382508,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977435, edge=0.000471, neigh=3.018318, align=5.029863, entropy=9.388101,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976788, edge=0.000471, neigh=3.121493, align=5.025873, entropy=9.391992,s=1.000000, s_hat=1.000000
Time for optimization: 17.50s
Test results:
Top-1: 0.334
Top-10: 0.730
Top-30: 0.829
Top-50: 0.861
Top-100: 0.897
MRR: 0.465
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.028s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:06, 15.63it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:06, 15.48it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:06, 14.51it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:05, 15.47it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:05, 16.17it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:00<00:06, 13.33it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:08, 10.02it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:08, 10.23it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:09,  8.70it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:09,  8.56it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:10,  7.61it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:10,  7.50it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:10,  7.17it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:10,  7.27it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:09,  7.55it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:08,  8.51it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:08,  7.79it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:09,  7.33it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:03<00:10,  6.54it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:08,  7.81it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:06,  9.91it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:06,  8.81it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:04<00:05, 10.53it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:04<00:05, 10.86it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:04<00:04, 11.85it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:04, 11.18it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:05,  9.27it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:05<00:05,  8.72it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:05,  8.88it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:05,  9.26it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.39it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.77it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.94it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.68it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.91it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.63it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.65it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  3.89it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.89it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.43it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.29it/s]
Time for cost matrix: 9.82s
Iter 0: wasserstein=1.169125, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997696, edge=0.000541, neigh=3.089734, align=3.692420, entropy=10.784765,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983970, edge=0.000487, neigh=2.890781, align=4.555101, entropy=9.870792,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981757, edge=0.000475, neigh=2.722013, align=4.846830, entropy=9.572787,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981349, edge=0.000467, neigh=2.700472, align=4.992782, entropy=9.425543,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981417, edge=0.000465, neigh=2.680862, align=5.080477, entropy=9.337517,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981333, edge=0.000463, neigh=2.707019, align=5.141000, entropy=9.276966,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980718, edge=0.000464, neigh=2.839576, align=5.139422, entropy=9.278542,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979839, edge=0.000465, neigh=2.962736, align=5.132325, entropy=9.285639,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979150, edge=0.000465, neigh=3.070539, align=5.128040, entropy=9.289854,s=1.000000, s_hat=1.000000
Time for optimization: 21.54s
Test results:
Top-1: 0.389
Top-10: 0.766
Top-30: 0.875
Top-50: 0.908
Top-100: 0.930
MRR: 0.517
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.053s
Time for attribute perturbation: 0.072s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.29it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  4.99it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:16,  6.06it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.82it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.01it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:14,  6.44it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:10,  8.52it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:09,  9.66it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.69it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  6.93it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:09,  8.76it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:09,  8.70it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:10,  7.88it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  7.25it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:11,  6.96it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:12,  6.47it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:09,  7.93it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:08,  9.09it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:08,  8.80it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:08,  8.05it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:07,  9.23it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:07,  8.94it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  8.45it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:07,  8.40it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:05, 10.91it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:05, 11.39it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:05, 10.85it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:04<00:05, 11.27it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:05, 10.50it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:05, 10.88it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:07,  7.04it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:05<00:07,  7.07it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:05,  8.43it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:05,  8.41it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.43it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.82it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.66it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.69it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.37it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.39it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.34it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.00it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:09,  4.21it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.99it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.13it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.60it/s]
Time for cost matrix: 10.47s
Iter 0: wasserstein=1.159304, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993331, edge=0.000545, neigh=3.033046, align=3.582937, entropy=10.894030,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980083, edge=0.000495, neigh=2.821186, align=4.456515, entropy=9.969031,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977569, edge=0.000479, neigh=2.638073, align=4.776213, entropy=9.644349,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977004, edge=0.000470, neigh=2.644372, align=4.923258, entropy=9.495090,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976788, edge=0.000468, neigh=2.657045, align=5.021847, entropy=9.396142,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976353, edge=0.000470, neigh=2.785231, align=5.023209, entropy=9.394756,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975811, edge=0.000471, neigh=2.906501, align=5.015517, entropy=9.402447,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974986, edge=0.000472, neigh=3.022751, align=5.007989, entropy=9.409975,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974341, edge=0.000472, neigh=3.132738, align=5.002887, entropy=9.414976,s=1.000000, s_hat=1.000000
Time for optimization: 18.03s
Test results:
Top-1: 0.288
Top-10: 0.697
Top-30: 0.798
Top-50: 0.829
Top-100: 0.876
MRR: 0.419
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.054s
Time for attribute perturbation: 0.020s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:12,  8.12it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:15,  6.21it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  6.96it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  7.00it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:15,  6.15it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  6.69it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.19it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.38it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:11,  7.92it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.24it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:10,  8.30it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:07, 10.76it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  7.33it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  7.02it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:10,  7.62it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:09,  7.89it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:07,  9.82it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  8.58it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:08,  8.16it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:10,  6.83it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:11,  6.42it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:11,  6.25it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.88it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:08,  8.29it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:06, 10.28it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:06,  9.28it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:06,  8.76it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:05, 10.13it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:05, 11.37it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:04, 12.17it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:05,  9.97it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:07,  7.24it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:08,  6.24it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:08,  5.57it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:07,  6.33it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.47it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.48it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.73it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.58it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.63it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.22it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.56it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.53it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.72it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.76it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.78it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.40it/s]
Time for cost matrix: 11.55s
Iter 0: wasserstein=1.165893, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998536, edge=0.000542, neigh=3.061606, align=3.624397, entropy=10.851198,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.985410, edge=0.000490, neigh=2.864634, align=4.505544, entropy=9.919794,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982703, edge=0.000475, neigh=2.676506, align=4.823558, entropy=9.595989,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982161, edge=0.000466, neigh=2.659709, align=4.973877, entropy=9.444385,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981943, edge=0.000464, neigh=2.676037, align=5.068738, entropy=9.349250,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981386, edge=0.000467, neigh=2.804740, align=5.069306, entropy=9.348660,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980814, edge=0.000468, neigh=2.934137, align=5.063123, entropy=9.354841,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979982, edge=0.000469, neigh=3.066342, align=5.056236, entropy=9.361728,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979346, edge=0.000470, neigh=3.178727, align=5.053073, entropy=9.364856,s=1.000000, s_hat=1.000000
Time for optimization: 19.00s
Test results:
Top-1: 0.369
Top-10: 0.737
Top-30: 0.830
Top-50: 0.857
Top-100: 0.899
MRR: 0.492
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.054s
Time for attribute perturbation: 0.075s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  6.03it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:06, 13.83it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:10,  9.12it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:11,  7.93it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:09,  9.33it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.52it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:12,  6.81it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:13,  6.35it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.41it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.74it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  6.07it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:12,  6.38it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:11,  6.64it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:11,  6.76it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  7.54it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.41it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:13,  5.64it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:13,  5.38it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.83it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.61it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.60it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:11,  6.03it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:11,  5.90it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:08,  7.41it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  6.87it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:10,  6.17it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:10,  5.84it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:11,  5.21it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:12,  4.86it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:12,  4.77it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:11,  4.86it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:11,  4.84it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:10,  5.45it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:10,  5.29it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:08,  6.08it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:08,  6.13it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:09,  5.29it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:10,  5.04it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:09,  5.11it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:07,  6.50it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:06,  7.03it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.36it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.80it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.67it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.55it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.11it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.51it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.52it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.58it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.50it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.50it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:13,  3.07it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.06it/s]
Time for cost matrix: 13.24s
Iter 0: wasserstein=1.165114, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998308, edge=0.000543, neigh=3.060407, align=3.623308, entropy=10.852889,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984780, edge=0.000489, neigh=2.877843, align=4.493828, entropy=9.931694,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982194, edge=0.000474, neigh=2.652706, align=4.815271, entropy=9.604435,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981855, edge=0.000465, neigh=2.656894, align=4.974363, entropy=9.444004,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981735, edge=0.000463, neigh=2.637517, align=5.071838, entropy=9.346162,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981445, edge=0.000461, neigh=2.674193, align=5.137782, entropy=9.280184,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980783, edge=0.000463, neigh=2.802139, align=5.138881, entropy=9.279083,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979855, edge=0.000464, neigh=2.922680, align=5.134700, entropy=9.283264,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979279, edge=0.000464, neigh=3.030671, align=5.133442, entropy=9.284498,s=1.000000, s_hat=1.000000
Time for optimization: 19.77s
Test results:
Top-1: 0.368
Top-10: 0.758
Top-30: 0.850
Top-50: 0.873
Top-100: 0.911
MRR: 0.497
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.064s
Time for attribute perturbation: 0.069s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.44it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:07, 12.70it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:10,  9.49it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:10,  8.58it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:11,  7.85it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.51it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.12it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  6.80it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:12,  6.66it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  5.74it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:17,  4.89it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.56it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:14,  5.63it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  6.10it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:12,  6.37it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.68it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:08,  8.57it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:09,  7.84it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:09,  7.60it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  7.24it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:12,  6.03it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:12,  5.60it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:13,  5.14it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:14,  4.92it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:10,  6.75it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  7.08it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:08,  7.40it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:08,  7.39it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.27it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  7.58it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:08,  7.15it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:06,  9.51it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.95it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:09,  5.93it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:08,  6.13it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:07,  7.36it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:05,  9.26it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:04, 11.05it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.21it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.06it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.13it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.30it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:16,  2.78it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:15,  2.97it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.20it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.52it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  4.17it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:08,  4.85it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.26it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.47it/s]
Time for cost matrix: 12.43s
Iter 0: wasserstein=1.159489, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993312, edge=0.000545, neigh=3.045022, align=3.592233, entropy=10.884935,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979615, edge=0.000494, neigh=2.834010, align=4.450584, entropy=9.974906,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977238, edge=0.000479, neigh=2.638161, align=4.768429, entropy=9.651582,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976868, edge=0.000469, neigh=2.647246, align=4.928510, entropy=9.489916,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976838, edge=0.000467, neigh=2.616835, align=5.026158, entropy=9.391852,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976688, edge=0.000464, neigh=2.652544, align=5.095481, entropy=9.322486,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976002, edge=0.000466, neigh=2.778902, align=5.097728, entropy=9.320237,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974986, edge=0.000466, neigh=2.896184, align=5.093730, entropy=9.324234,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974368, edge=0.000467, neigh=3.001641, align=5.091117, entropy=9.326798,s=1.000000, s_hat=1.000000
Time for optimization: 20.41s
Test results:
Top-1: 0.296
Top-10: 0.705
Top-30: 0.816
Top-50: 0.847
Top-100: 0.887
MRR: 0.428
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.032s
Time for attribute perturbation: 0.007s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:20,  4.77it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:16,  6.02it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.93it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:09,  9.74it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:08, 11.00it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:10,  8.61it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:09,  9.43it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  6.84it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:12,  6.85it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  5.97it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:15,  5.30it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:14,  5.82it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:13,  6.18it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:13,  5.85it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.50it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:09,  8.27it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  9.05it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:08,  8.60it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:08,  8.80it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.68it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:10,  6.64it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.82it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:09,  7.41it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:07,  8.32it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:07,  8.21it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:07,  8.41it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.34it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  7.03it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:10,  5.96it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:10,  5.51it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:10,  5.32it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  5.75it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:09,  5.83it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  7.71it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  6.72it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:08,  6.36it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:07,  6.71it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:07,  6.80it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:07,  6.85it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  7.15it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.08it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.93it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.79it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.84it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.52it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.60it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.46it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.36it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.03it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.15it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.24it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.07it/s]
Time for cost matrix: 12.41s
Iter 0: wasserstein=1.166563, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996746, edge=0.000544, neigh=3.059693, align=3.644721, entropy=10.832285,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982997, edge=0.000492, neigh=2.857930, align=4.501682, entropy=9.923964,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980841, edge=0.000479, neigh=2.653886, align=4.798237, entropy=9.621830,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980557, edge=0.000469, neigh=2.667293, align=4.951640, entropy=9.466799,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980555, edge=0.000466, neigh=2.650354, align=5.049578, entropy=9.368436,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980383, edge=0.000463, neigh=2.698226, align=5.119853, entropy=9.298114,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979785, edge=0.000465, neigh=2.830392, align=5.122228, entropy=9.295736,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978811, edge=0.000465, neigh=2.952569, align=5.118191, entropy=9.299773,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978201, edge=0.000466, neigh=3.060897, align=5.114881, entropy=9.303028,s=1.000000, s_hat=1.000000
Time for optimization: 20.36s
Test results:
Top-1: 0.366
Top-10: 0.750
Top-30: 0.848
Top-50: 0.877
Top-100: 0.912
MRR: 0.494
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.070s
Time for attribute perturbation: 0.045s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.25it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:10,  8.90it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:10,  8.73it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.70it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  7.98it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:14,  6.35it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:17,  5.23it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.87it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.35it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.15it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:08,  9.49it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:08, 10.06it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  6.84it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:09,  8.25it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:07,  9.71it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:07, 10.63it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.39it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.29it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:09,  7.38it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:10,  6.89it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:08,  8.03it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:09,  6.88it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:10,  6.23it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:11,  5.72it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:10,  5.96it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:09,  6.32it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:08,  7.34it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:09,  6.38it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:10,  5.38it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:11,  5.18it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:11,  4.90it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:09,  5.79it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:06,  7.44it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:07,  6.95it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:06,  7.21it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.10it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  7.23it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.19it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  2.89it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.71it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.81it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  3.96it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.96it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.84it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.72it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.71it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.57it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.39it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.25it/s]
Time for cost matrix: 12.19s
Iter 0: wasserstein=1.165796, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997794, edge=0.000543, neigh=3.080202, align=3.627136, entropy=10.848384,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984503, edge=0.000491, neigh=2.864596, align=4.492729, entropy=9.932644,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982123, edge=0.000477, neigh=2.636004, align=4.806753, entropy=9.613399,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981681, edge=0.000467, neigh=2.651548, align=4.954557, entropy=9.463738,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981563, edge=0.000464, neigh=2.644556, align=5.055184, entropy=9.362805,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981316, edge=0.000461, neigh=2.685756, align=5.122123, entropy=9.295842,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980735, edge=0.000463, neigh=2.809811, align=5.124232, entropy=9.293732,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979853, edge=0.000464, neigh=2.937181, align=5.119370, entropy=9.298594,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979223, edge=0.000464, neigh=3.050780, align=5.116607, entropy=9.301315,s=1.000000, s_hat=1.000000
Time for optimization: 19.89s
Test results:
Top-1: 0.353
Top-10: 0.725
Top-30: 0.827
Top-50: 0.859
Top-100: 0.895
MRR: 0.478
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.021s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.66it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:16,  6.02it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  7.34it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.17it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.49it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:12,  7.50it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.27it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.38it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  6.25it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:14,  6.21it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:15,  5.54it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.06it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:17,  4.94it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.76it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.62it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  4.99it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:16,  5.00it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:16,  4.75it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:18,  4.23it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:16,  4.65it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:11,  6.53it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:09,  8.03it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:09,  8.06it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.73it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.43it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:07,  8.77it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:08,  7.97it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:07,  8.70it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:07,  8.80it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.73it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:09,  6.25it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:11,  5.34it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:10,  5.68it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:09,  6.07it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:09,  6.14it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  6.00it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:09,  5.76it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:09,  5.54it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:08,  6.17it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:08,  6.24it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:05,  9.00it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:05,  8.28it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  8.00it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.45it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.33it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  2.96it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.83it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  3.98it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  4.12it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.34it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.17it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.72it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.61it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.72it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.80it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.50it/s]
Time for cost matrix: 12.72s
Iter 0: wasserstein=1.160199, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994282, edge=0.000546, neigh=3.032486, align=3.572619, entropy=10.904225,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981054, edge=0.000496, neigh=2.805308, align=4.439180, entropy=9.986337,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978474, edge=0.000481, neigh=2.599269, align=4.758000, entropy=9.661741,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977809, edge=0.000470, neigh=2.622934, align=4.912260, entropy=9.506034,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977762, edge=0.000467, neigh=2.639545, align=5.008664, entropy=9.409324,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977555, edge=0.000465, neigh=2.676905, align=5.071083, entropy=9.346883,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976926, edge=0.000466, neigh=2.806563, align=5.071480, entropy=9.346484,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976032, edge=0.000467, neigh=2.918928, align=5.066855, entropy=9.351108,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975342, edge=0.000468, neigh=3.020488, align=5.063221, entropy=9.354540,s=1.000000, s_hat=1.000000
Time for optimization: 20.25s
Test results:
Top-1: 0.282
Top-10: 0.684
Top-30: 0.810
Top-50: 0.844
Top-100: 0.879
MRR: 0.410
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.055s
Time for attribute perturbation: 0.041s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:29,  3.31it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  5.04it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:10,  8.73it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:10,  8.66it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:10,  8.47it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:10,  8.52it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:10,  8.36it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.97it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.05it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:09,  9.13it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:09,  8.83it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:07, 10.33it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:06, 11.46it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:10,  7.71it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:11,  6.74it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.67it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:12,  6.10it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  6.95it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.70it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:09,  7.69it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:08,  8.03it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:07,  9.47it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:07,  9.29it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:06,  9.38it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:05, 10.69it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:09,  6.38it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:11,  5.29it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:09,  6.25it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:09,  6.22it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:07,  7.55it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  7.13it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  7.23it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:06,  7.72it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:07,  6.96it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:06,  7.30it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:06,  7.59it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:16,  2.97it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.89it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:14,  3.29it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.53it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.69it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.63it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.71it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.76it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.65it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.87it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.29it/s]
Time for cost matrix: 11.95s
Iter 0: wasserstein=1.167940, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.999601, edge=0.000543, neigh=3.083326, align=3.648403, entropy=10.827201,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.986279, edge=0.000490, neigh=2.884251, align=4.512739, entropy=9.912722,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.983895, edge=0.000477, neigh=2.686527, align=4.823550, entropy=9.596110,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.983509, edge=0.000468, neigh=2.657385, align=4.966991, entropy=9.451344,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.983327, edge=0.000465, neigh=2.666775, align=5.063950, entropy=9.354046,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982859, edge=0.000467, neigh=2.783653, align=5.066353, entropy=9.351613,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.982381, edge=0.000469, neigh=2.910473, align=5.058654, entropy=9.359310,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.981541, edge=0.000469, neigh=3.040644, align=5.052412, entropy=9.365552,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980911, edge=0.000470, neigh=3.150657, align=5.049482, entropy=9.368435,s=1.000000, s_hat=1.000000
Time for optimization: 12.84s
Test results:
Top-1: 0.379
Top-10: 0.746
Top-30: 0.836
Top-50: 0.861
Top-100: 0.905
MRR: 0.503
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.018s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 26.21it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:02, 32.12it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:04, 20.54it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 24.71it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:02, 27.10it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:00<00:02, 28.44it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:00<00:02, 28.63it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:01<00:02, 26.75it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:01<00:02, 27.06it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:01<00:02, 28.59it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:01<00:02, 23.47it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:01<00:02, 21.50it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:01<00:02, 23.68it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:01<00:01, 25.87it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:01, 25.51it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:06,  7.80it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:04, 10.25it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:04, 10.09it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:04, 10.29it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:04,  8.94it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.53it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.72it/s]
Time for cost matrix: 4.13s
Iter 0: wasserstein=1.165141, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996443, edge=0.000543, neigh=3.047751, align=3.627020, entropy=10.849597,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983134, edge=0.000493, neigh=2.827190, align=4.491058, entropy=9.934465,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980867, edge=0.000478, neigh=2.647310, align=4.797975, entropy=9.622424,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980412, edge=0.000469, neigh=2.650509, align=4.938731, entropy=9.479714,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980299, edge=0.000466, neigh=2.661518, align=5.031503, entropy=9.386496,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979895, edge=0.000468, neigh=2.775766, align=5.036400, entropy=9.381566,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979421, edge=0.000470, neigh=2.890708, align=5.031726, entropy=9.386239,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978559, edge=0.000471, neigh=3.012432, align=5.025577, entropy=9.392387,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977923, edge=0.000471, neigh=3.118662, align=5.022133, entropy=9.395731,s=1.000000, s_hat=1.000000
Time for optimization: 9.95s
Test results:
Top-1: 0.349
Top-10: 0.736
Top-30: 0.837
Top-50: 0.866
Top-100: 0.895
MRR: 0.475
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.015s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:02, 34.61it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:05, 17.12it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:04, 21.39it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:04, 17.04it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:03, 21.38it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:03, 24.44it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:02, 26.93it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:02, 23.65it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:01<00:02, 24.63it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:01<00:02, 22.46it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:01<00:02, 23.74it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:01<00:02, 25.19it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:01<00:01, 28.23it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:02<00:01, 28.37it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:01, 24.24it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:07,  6.77it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:08,  5.87it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:08,  5.38it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:08,  5.27it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:08,  5.07it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:07,  5.57it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:06,  6.47it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:06,  6.14it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:06,  5.95it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:07,  5.28it/s]
Time for cost matrix: 4.78s
Iter 0: wasserstein=1.160705, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993622, edge=0.000546, neigh=3.056741, align=3.595680, entropy=10.880338,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980292, edge=0.000497, neigh=2.821081, align=4.454321, entropy=9.970842,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978199, edge=0.000482, neigh=2.608388, align=4.763203, entropy=9.657186,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977796, edge=0.000472, neigh=2.636910, align=4.911591, entropy=9.506753,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977627, edge=0.000468, neigh=2.643026, align=5.012833, entropy=9.405156,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977144, edge=0.000470, neigh=2.761616, align=5.020311, entropy=9.397654,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976558, edge=0.000471, neigh=2.876137, align=5.016170, entropy=9.401794,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975634, edge=0.000472, neigh=2.996066, align=5.010639, entropy=9.407325,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975026, edge=0.000472, neigh=3.103959, align=5.008226, entropy=9.409674,s=1.000000, s_hat=1.000000
Time for optimization: 12.83s
Test results:
Top-1: 0.306
Top-10: 0.702
Top-30: 0.806
Top-50: 0.846
Top-100: 0.884
MRR: 0.434
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.025s
Time for attribute perturbation: 0.006s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.38it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:10,  9.05it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:07, 12.29it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:09, 10.24it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:10,  8.61it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  6.98it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.33it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.48it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:13,  6.24it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:11,  7.13it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.08it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:13,  6.33it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.76it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  7.30it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.51it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:09,  7.86it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:10,  7.49it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:09,  7.71it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  7.89it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.62it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.32it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:08,  7.97it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  6.93it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:10,  6.78it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:07,  8.29it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:08,  7.60it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:07,  8.01it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:07,  8.47it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  7.74it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:07,  7.79it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:06,  9.45it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:06,  8.89it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:06,  9.02it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:06,  8.09it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:08,  6.37it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:09,  5.52it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:09,  5.23it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:09,  5.63it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:08,  6.01it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:06,  7.03it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  6.46it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.28it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.84it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  4.00it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.61it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.41it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.68it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.66it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.81it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:09,  4.36it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:09,  4.39it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.98it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.52it/s]
Time for cost matrix: 11.61s
Iter 0: wasserstein=1.162303, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996325, edge=0.000544, neigh=3.047190, align=3.596933, entropy=10.878363,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983222, edge=0.000492, neigh=2.850769, align=4.466105, entropy=9.959033,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980762, edge=0.000477, neigh=2.641801, align=4.782411, entropy=9.637515,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980386, edge=0.000468, neigh=2.627260, align=4.932215, entropy=9.486048,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980146, edge=0.000465, neigh=2.652243, align=5.034025, entropy=9.383961,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979598, edge=0.000467, neigh=2.779998, align=5.037595, entropy=9.380370,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978983, edge=0.000468, neigh=2.904790, align=5.031751, entropy=9.386213,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978194, edge=0.000469, neigh=3.031422, align=5.025406, entropy=9.392558,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977566, edge=0.000470, neigh=3.139957, align=5.021882, entropy=9.396021,s=1.000000, s_hat=1.000000
Time for optimization: 19.65s
Test results:
Top-1: 0.343
Top-10: 0.709
Top-30: 0.802
Top-50: 0.832
Top-100: 0.876
MRR: 0.464
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.052s
Time for attribute perturbation: 0.069s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.77it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:16,  6.01it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.47it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.95it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  7.98it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:09, 10.11it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:08, 10.67it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.08it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.63it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:10,  7.97it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:08,  9.66it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.64it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:12,  6.63it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:10,  7.24it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:10,  7.31it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.58it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.62it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:08,  8.23it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:08,  8.37it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.67it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:07,  8.84it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:07,  9.10it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:07,  9.15it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:09,  6.92it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:10,  6.26it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:10,  5.83it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:12,  5.24it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:13,  4.55it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:12,  4.93it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:09,  5.97it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:10,  5.57it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.35it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:09,  6.02it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:09,  5.75it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:09,  5.71it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:08,  6.16it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:05,  9.30it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:04, 10.19it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.19it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:17,  2.86it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.26it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.56it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.75it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.17it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.23it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.07it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  4.16it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.36it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.66it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.38it/s]
Time for cost matrix: 11.87s
Iter 0: wasserstein=1.161737, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994566, edge=0.000545, neigh=3.026028, align=3.593935, entropy=10.883347,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980906, edge=0.000492, neigh=2.826749, align=4.456875, entropy=9.968736,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978602, edge=0.000478, neigh=2.626498, align=4.771196, entropy=9.648788,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978125, edge=0.000468, neigh=2.643182, align=4.933263, entropy=9.485142,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978060, edge=0.000466, neigh=2.623503, align=5.031134, entropy=9.386871,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977895, edge=0.000463, neigh=2.661847, align=5.100487, entropy=9.317480,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977257, edge=0.000465, neigh=2.792186, align=5.103590, entropy=9.314374,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976283, edge=0.000465, neigh=2.906715, align=5.099662, entropy=9.318302,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975640, edge=0.000466, neigh=3.009900, align=5.095721, entropy=9.322195,s=1.000000, s_hat=1.000000
Time for optimization: 19.33s
Test results:
Top-1: 0.327
Top-10: 0.707
Top-30: 0.812
Top-50: 0.848
Top-100: 0.891
MRR: 0.453
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.028s
Time for attribute perturbation: 0.051s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  5.96it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:10,  9.68it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:11,  8.32it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:10,  9.28it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:12,  7.62it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.22it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.47it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.23it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  7.91it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:10,  8.47it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.36it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:10,  7.66it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:08,  8.93it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:07, 10.24it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:06, 11.08it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:06, 12.27it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.83it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:11,  6.01it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:12,  5.38it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:13,  4.97it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:14,  4.64it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:14,  4.66it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:14,  4.46it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:14,  4.36it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:14,  4.37it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:14,  4.25it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:14,  4.18it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:14,  4.18it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:12,  4.69it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:11,  5.21it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  5.77it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:09,  5.99it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:07<00:08,  6.34it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:09,  5.99it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:08,  5.92it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:07,  6.99it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:05,  8.99it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:05,  8.24it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:06,  6.85it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.32it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.95it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.81it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.91it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.73it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.26it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:09,  4.44it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.80it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.31it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.25it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:14,  2.85it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.06it/s]
Time for cost matrix: 13.02s
Iter 0: wasserstein=1.157593, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993127, edge=0.000546, neigh=3.032249, align=3.566620, entropy=10.909923,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979904, edge=0.000497, neigh=2.779248, align=4.425567, entropy=9.999813,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977511, edge=0.000481, neigh=2.569840, align=4.741620, entropy=9.678860,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976912, edge=0.000470, neigh=2.608508, align=4.893724, entropy=9.524631,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976892, edge=0.000467, neigh=2.624225, align=4.991434, entropy=9.426555,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976609, edge=0.000465, neigh=2.661617, align=5.059352, entropy=9.358614,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975966, edge=0.000466, neigh=2.781943, align=5.060610, entropy=9.357354,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975025, edge=0.000467, neigh=2.894592, align=5.055782, entropy=9.362182,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974376, edge=0.000467, neigh=2.996750, align=5.053874, entropy=9.363874,s=1.000000, s_hat=1.000000
Time for optimization: 19.58s
Test results:
Top-1: 0.255
Top-10: 0.675
Top-30: 0.799
Top-50: 0.830
Top-100: 0.870
MRR: 0.390
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.060s
Time for attribute perturbation: 0.060s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:10,  8.96it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:14,  6.85it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.57it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:09,  9.87it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:11,  8.29it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:11,  7.74it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  7.98it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.23it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  7.02it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:10,  8.40it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.13it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:12,  6.57it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  7.22it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:11,  7.06it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:11,  6.94it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:11,  6.87it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.20it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.34it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  7.69it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.60it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.28it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:08,  7.96it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.34it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:10,  6.79it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  7.35it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:08,  7.87it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:06,  9.32it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:06,  9.38it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  7.57it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  7.38it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:09,  6.51it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:09,  5.96it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:09,  6.06it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:09,  5.88it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:10,  5.36it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:09,  5.97it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:08,  6.70it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:09,  5.40it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:10,  5.06it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:12,  4.13it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:10,  4.94it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  7.02it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.18it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.89it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:14,  3.39it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.13it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.60it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.28it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.72it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.71it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.52it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.58it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.52it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.66it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.36it/s]
Time for cost matrix: 12.00s
Iter 0: wasserstein=1.158380, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993460, edge=0.000547, neigh=3.016972, align=3.550766, entropy=10.925886,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980140, edge=0.000498, neigh=2.775442, align=4.409209, entropy=10.016144,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977714, edge=0.000482, neigh=2.559891, align=4.731843, entropy=9.688465,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977051, edge=0.000471, neigh=2.597851, align=4.886539, entropy=9.531790,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977048, edge=0.000468, neigh=2.619602, align=4.985035, entropy=9.432953,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976558, edge=0.000469, neigh=2.737684, align=4.989250, entropy=9.428716,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975944, edge=0.000471, neigh=2.853249, align=4.983621, entropy=9.434344,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975081, edge=0.000471, neigh=2.965184, align=4.977791, entropy=9.440173,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974448, edge=0.000472, neigh=3.074874, align=4.973869, entropy=9.444010,s=1.000000, s_hat=1.000000
Time for optimization: 19.94s
Test results:
Top-1: 0.259
Top-10: 0.667
Top-30: 0.796
Top-50: 0.835
Top-100: 0.867
MRR: 0.390
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.046s
Time for attribute perturbation: 0.003s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:16,  6.01it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:13,  7.08it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:12,  8.07it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:09,  9.93it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:07, 11.72it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:07, 12.81it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.51it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  6.98it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:11,  7.38it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:11,  7.34it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:11,  7.09it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:10,  7.49it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:11,  6.71it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:13,  5.82it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:14,  5.33it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  5.95it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.52it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:12,  6.22it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:12,  6.06it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:10,  7.02it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:09,  7.56it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:07,  9.85it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:07,  9.27it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:07,  8.43it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:08,  7.97it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:08,  7.33it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  7.06it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:09,  6.51it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:08,  7.15it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  7.64it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:08,  7.01it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:07,  7.21it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:07,  7.12it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:08,  6.67it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:09,  5.67it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:08,  6.31it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:08,  6.05it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:07,  6.48it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:08,  5.65it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.06it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:08,  5.53it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.88it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.94it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.02it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  5.19it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:09,  4.65it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:08,  5.24it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:08,  5.41it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.02it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:11,  3.53it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.59it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.07it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.77it/s]
Time for cost matrix: 11.83s
Iter 0: wasserstein=1.157589, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992972, edge=0.000546, neigh=3.014094, align=3.558073, entropy=10.918635,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979836, edge=0.000497, neigh=2.783924, align=4.414566, entropy=10.010898,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977497, edge=0.000481, neigh=2.565316, align=4.732466, entropy=9.687990,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976803, edge=0.000470, neigh=2.601055, align=4.889592, entropy=9.528760,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976751, edge=0.000467, neigh=2.622847, align=4.986762, entropy=9.431228,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976282, edge=0.000469, neigh=2.735318, align=4.990151, entropy=9.427814,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975660, edge=0.000471, neigh=2.851591, align=4.983709, entropy=9.434255,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974802, edge=0.000471, neigh=2.961127, align=4.977658, entropy=9.440306,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974178, edge=0.000472, neigh=3.067470, align=4.973996, entropy=9.443889,s=1.000000, s_hat=1.000000
Time for optimization: 24.23s
Test results:
Top-1: 0.255
Top-10: 0.655
Top-30: 0.782
Top-50: 0.825
Top-100: 0.863
MRR: 0.384
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.069s
Time for attribute perturbation: 0.087s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:27,  3.59it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:29,  3.33it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:26,  3.60it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:24,  3.95it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  3.98it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:25,  3.74it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:25,  3.61it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:27,  3.32it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:29,  3.10it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:29,  3.02it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:24,  3.59it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:24,  3.62it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:03<00:22,  3.81it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:23,  3.65it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:22,  3.71it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:26,  3.16it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:27,  2.98it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:29,  2.80it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:32,  2.47it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:33,  2.36it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:31,  2.53it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:31,  2.48it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:31,  2.43it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:26,  2.92it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:25,  3.00it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:28,  2.61it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:09<00:30,  2.41it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:09<00:29,  2.43it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:28,  2.52it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:10<00:27,  2.52it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:10<00:27,  2.47it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:10<00:25,  2.63it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:11<00:26,  2.50it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:11<00:27,  2.41it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:12<00:26,  2.41it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:12<00:26,  2.41it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:13<00:28,  2.23it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:13<00:27,  2.24it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:13<00:24,  2.47it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:14<00:23,  2.54it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:14<00:20,  2.85it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:14<00:19,  2.93it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:15<00:19,  2.99it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:15<00:16,  3.49it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:15<00:16,  3.34it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:16<00:19,  2.81it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:16<00:18,  2.90it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:16<00:18,  2.77it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:17<00:17,  2.84it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:17<00:16,  2.99it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:17<00:17,  2.77it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:18<00:18,  2.65it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:18<00:17,  2.74it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:19<00:17,  2.76it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:27,  1.79it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:22,  2.12it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:23,  2.02it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:02<00:23,  1.92it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:24,  1.87it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:03<00:25,  1.74it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:03<00:24,  1.77it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:04<00:22,  1.89it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:04<00:19,  2.12it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:19,  2.09it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:22,  1.76it/s]
Time for cost matrix: 27.47s
Iter 0: wasserstein=1.155977, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992379, edge=0.000547, neigh=3.024988, align=3.546011, entropy=10.930569,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979095, edge=0.000499, neigh=2.794075, align=4.397134, entropy=10.028260,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976695, edge=0.000483, neigh=2.572449, align=4.718423, entropy=9.702008,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976093, edge=0.000471, neigh=2.607849, align=4.877752, entropy=9.540593,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976028, edge=0.000468, neigh=2.622152, align=4.983864, entropy=9.434125,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975716, edge=0.000465, neigh=2.661249, align=5.057756, entropy=9.360209,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975054, edge=0.000466, neigh=2.781298, align=5.058210, entropy=9.359754,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974062, edge=0.000467, neigh=2.892810, align=5.053033, entropy=9.364931,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973462, edge=0.000467, neigh=2.991599, align=5.050751, entropy=9.367060,s=1.000000, s_hat=1.000000
Time for optimization: 35.27s
Test results:
Top-1: 0.249
Top-10: 0.654
Top-30: 0.782
Top-50: 0.815
Top-100: 0.865
MRR: 0.378
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.063s
Time for attribute perturbation: 0.050s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:25,  3.90it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  3.95it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:29,  3.34it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:31,  3.04it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:27,  3.46it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:24,  3.77it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:23,  3.91it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:20,  4.39it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:26,  3.50it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:31,  2.82it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:33,  2.64it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:33,  2.66it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:35,  2.43it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:38,  2.24it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:33,  2.50it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:24,  3.37it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:27,  3.02it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:28,  2.82it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:25,  3.20it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:20,  3.86it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:20,  3.81it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:24,  3.15it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:26,  2.86it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:24,  3.03it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:20,  3.63it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:20,  3.61it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:08<00:19,  3.62it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:19,  3.68it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:09<00:17,  3.98it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:09<00:14,  4.61it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:09<00:16,  4.19it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:09<00:14,  4.60it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:10<00:15,  4.29it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:10<00:16,  3.99it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:10<00:17,  3.75it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:10<00:14,  4.48it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:10<00:11,  5.19it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:11<00:13,  4.61it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:11<00:13,  4.55it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:11<00:13,  4.49it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:11<00:12,  4.68it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:12<00:14,  3.98it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:12<00:17,  3.27it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:13<00:18,  2.94it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:13<00:19,  2.74it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:14<00:22,  2.39it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:14<00:21,  2.37it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:14<00:19,  2.63it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:14<00:16,  3.07it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:15<00:16,  3.00it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:15<00:17,  2.69it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:15<00:14,  3.18it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:16<00:14,  3.27it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.39it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:19,  2.41it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.39it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:19,  2.31it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:19,  2.31it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:17,  2.50it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:18,  2.36it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:03<00:19,  2.19it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:03<00:18,  2.17it/s]Computing product RWR scores:  20%|██        | 10/50 [00:04<00:19,  2.09it/s]Computing product RWR scores:  20%|██        | 10/50 [00:04<00:19,  2.01it/s]
Time for cost matrix: 23.66s
Iter 0: wasserstein=1.158577, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993689, edge=0.000546, neigh=3.022233, align=3.561459, entropy=10.914932,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980456, edge=0.000497, neigh=2.813918, align=4.415742, entropy=10.009582,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977978, edge=0.000481, neigh=2.612347, align=4.734211, entropy=9.685589,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977472, edge=0.000471, neigh=2.620014, align=4.890434, entropy=9.527874,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977281, edge=0.000467, neigh=2.632657, align=4.998350, entropy=9.419638,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976795, edge=0.000469, neigh=2.750418, align=5.000974, entropy=9.416992,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976190, edge=0.000471, neigh=2.866228, align=4.992470, entropy=9.425494,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975247, edge=0.000472, neigh=2.981746, align=4.985943, entropy=9.432021,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974632, edge=0.000472, neigh=3.094479, align=4.983572, entropy=9.434319,s=1.000000, s_hat=1.000000
Time for optimization: 35.18s
Test results:
Top-1: 0.265
Top-10: 0.679
Top-30: 0.791
Top-50: 0.832
Top-100: 0.870
MRR: 0.399
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.070s
Time for attribute perturbation: 0.096s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  4.99it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.14it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:23,  4.07it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:20,  4.73it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:23,  3.97it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:26,  3.60it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:25,  3.70it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:21,  4.33it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:19,  4.75it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:15,  5.63it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:17,  5.17it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  5.91it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  5.96it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.58it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:12,  6.58it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:11,  6.89it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:11,  7.01it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:09,  8.54it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:09,  8.44it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:09,  7.80it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:07,  9.54it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:07,  9.64it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:08,  8.39it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.48it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:08,  8.34it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:06, 10.00it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:07,  9.09it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:07,  8.57it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  7.49it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:09,  6.57it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:10,  5.87it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:09,  6.25it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:08,  6.85it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:09,  6.11it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.68it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:08,  6.17it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:06,  7.91it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:06,  8.22it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  8.11it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:07,  6.78it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:08,  5.50it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.08it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.38it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.79it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.26it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.42it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.41it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.22it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.26it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.23it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.21it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.63it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.61it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.12it/s]
Time for cost matrix: 12.76s
Iter 0: wasserstein=1.158230, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993939, edge=0.000547, neigh=3.029315, align=3.555235, entropy=10.921236,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980694, edge=0.000498, neigh=2.786719, align=4.408562, entropy=10.016813,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978299, edge=0.000482, neigh=2.568671, align=4.730868, entropy=9.689632,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977674, edge=0.000472, neigh=2.597580, align=4.885330, entropy=9.533035,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977578, edge=0.000468, neigh=2.617921, align=4.989807, entropy=9.428183,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977316, edge=0.000465, neigh=2.657087, align=5.059144, entropy=9.358821,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976667, edge=0.000466, neigh=2.780032, align=5.060302, entropy=9.357662,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975762, edge=0.000467, neigh=2.894525, align=5.056261, entropy=9.361703,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975120, edge=0.000467, neigh=2.994055, align=5.054098, entropy=9.363731,s=1.000000, s_hat=1.000000
Time for optimization: 19.42s
Test results:
Top-1: 0.249
Top-10: 0.677
Top-30: 0.801
Top-50: 0.828
Top-100: 0.876
MRR: 0.384
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.047s
Time for attribute perturbation: 0.074s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:24,  4.10it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.36it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.86it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:12,  7.53it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.72it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:10,  8.50it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.42it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.42it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.53it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:14,  6.13it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:13,  6.50it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:12,  6.79it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:13,  6.16it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.83it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:15,  5.34it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:13,  5.81it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:09,  8.10it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:09,  7.99it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.71it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  6.75it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:10,  7.01it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:10,  6.75it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.26it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:10,  6.44it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:09,  7.04it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:09,  7.03it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  6.76it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:09,  6.80it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:10,  6.15it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  6.52it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:06,  9.28it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:05, 10.13it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:06,  9.09it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:07,  7.39it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.53it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:09,  5.73it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:09,  5.47it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:10,  5.02it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:10,  4.97it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:10,  4.81it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:08,  5.95it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:05,  8.19it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  6.65it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.51it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.85it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.78it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  3.96it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.81it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.55it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:14,  2.98it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.13it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.36it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.44it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.25it/s]
Time for cost matrix: 12.81s
Iter 0: wasserstein=1.163893, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998172, edge=0.000544, neigh=3.021735, align=3.585862, entropy=10.889737,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984918, edge=0.000492, neigh=2.830840, align=4.451859, entropy=9.973376,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982370, edge=0.000477, neigh=2.630314, align=4.775017, entropy=9.644809,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981863, edge=0.000467, neigh=2.628277, align=4.928581, entropy=9.489779,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981761, edge=0.000464, neigh=2.644398, align=5.029646, entropy=9.388348,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981293, edge=0.000466, neigh=2.754818, align=5.031269, entropy=9.386696,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980720, edge=0.000468, neigh=2.875935, align=5.024825, entropy=9.393139,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979899, edge=0.000469, neigh=3.001348, align=5.018528, entropy=9.399436,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979304, edge=0.000469, neigh=3.108529, align=5.015820, entropy=9.402087,s=1.000000, s_hat=1.000000
Time for optimization: 18.82s
Test results:
Top-1: 0.328
Top-10: 0.716
Top-30: 0.813
Top-50: 0.842
Top-100: 0.880
MRR: 0.460
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.048s
Time for attribute perturbation: 0.072s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:28,  3.53it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:24,  4.06it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.35it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:17,  5.46it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:17,  5.29it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:17,  5.41it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.26it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  5.75it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:11,  8.17it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:10,  8.12it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:11,  7.41it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:11,  7.48it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:11,  7.63it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:10,  7.75it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  7.27it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:09,  7.97it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:08,  9.11it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:08,  8.96it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:09,  7.92it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:10,  6.74it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:09,  7.31it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:11,  6.01it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:12,  5.79it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:12,  5.63it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:11,  6.06it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:09,  6.87it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:09,  7.32it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:09,  6.81it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  6.89it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:10,  5.89it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:11,  5.57it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:09,  6.28it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:08,  6.73it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:09,  6.12it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:09,  6.27it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:08,  6.75it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.67it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  7.24it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:06,  7.80it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:05,  9.88it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  7.99it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.34it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:07,  6.68it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:22,  2.21it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.77it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:15,  3.07it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.31it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.62it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.68it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:10,  3.94it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  3.92it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.44it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.28it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.00it/s]
Time for cost matrix: 12.68s
Iter 0: wasserstein=1.157686, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993433, edge=0.000547, neigh=3.026480, align=3.566639, entropy=10.909918,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980170, edge=0.000497, neigh=2.798073, align=4.421297, entropy=10.004139,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977769, edge=0.000481, neigh=2.583914, align=4.740305, entropy=9.680146,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977121, edge=0.000470, neigh=2.613667, align=4.896458, entropy=9.521889,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977043, edge=0.000467, neigh=2.634156, align=4.998259, entropy=9.419731,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976585, edge=0.000470, neigh=2.741041, align=5.000820, entropy=9.417145,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975962, edge=0.000471, neigh=2.853769, align=4.992636, entropy=9.425328,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975081, edge=0.000471, neigh=2.966260, align=4.985433, entropy=9.432531,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974491, edge=0.000472, neigh=3.073850, align=4.982432, entropy=9.435473,s=1.000000, s_hat=1.000000
Time for optimization: 20.04s
Test results:
Top-1: 0.265
Top-10: 0.680
Top-30: 0.792
Top-50: 0.835
Top-100: 0.868
MRR: 0.396
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.032s
Time for attribute perturbation: 0.040s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.51it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  7.33it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.11it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.78it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  7.89it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.53it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.55it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:13,  6.51it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.43it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:18,  4.89it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.43it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.36it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.66it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.95it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.31it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:13,  5.88it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:12,  6.21it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.84it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.12it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.34it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:11,  6.59it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:11,  6.35it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:11,  6.25it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:11,  6.49it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:10,  7.20it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.32it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.68it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:10,  6.21it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:07,  8.39it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:06,  9.15it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:07,  7.92it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  7.01it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:06,  8.87it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:06,  8.66it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:06,  8.50it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:07,  7.39it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:08,  6.52it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  7.49it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:06,  8.43it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:05,  9.60it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:05,  8.74it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.43it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.84it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.80it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.00it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.65it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.74it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.89it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.36it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.51it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.51it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.55it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.43it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.12it/s]
Time for cost matrix: 12.21s
Iter 0: wasserstein=1.159376, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994178, edge=0.000546, neigh=3.034130, align=3.574530, entropy=10.902150,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980998, edge=0.000496, neigh=2.811473, align=4.435395, entropy=9.990109,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978513, edge=0.000480, neigh=2.594316, align=4.754058, entropy=9.666403,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977865, edge=0.000470, neigh=2.622421, align=4.910438, entropy=9.507912,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977862, edge=0.000467, neigh=2.631309, align=5.004696, entropy=9.413294,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977691, edge=0.000465, neigh=2.673619, align=5.067678, entropy=9.350287,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977106, edge=0.000466, neigh=2.798358, align=5.067068, entropy=9.350896,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976185, edge=0.000466, neigh=2.906095, align=5.061818, entropy=9.356146,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975525, edge=0.000467, neigh=3.001237, align=5.058870, entropy=9.358884,s=1.000000, s_hat=1.000000
Time for optimization: 19.90s
Test results:
Top-1: 0.280
Top-10: 0.683
Top-30: 0.806
Top-50: 0.839
Top-100: 0.874
MRR: 0.411
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.028s
Time for attribute perturbation: 0.002s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.24it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:06, 14.45it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:08, 11.08it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:10,  9.07it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:11,  8.22it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:09,  8.99it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:08,  9.91it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:07, 10.66it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:11,  7.19it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.82it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  7.11it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:08,  8.81it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:08,  9.27it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:09,  7.77it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:07,  9.40it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:08,  8.66it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:07,  9.35it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:03<00:07,  8.64it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:09,  7.03it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:09,  6.78it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:09,  6.64it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:09,  6.88it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:09,  6.88it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:08,  7.26it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:07,  7.77it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:04<00:07,  7.83it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:07,  7.79it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:08,  6.83it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:08,  6.61it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:07,  6.99it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:05<00:07,  7.18it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:07,  6.54it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:08,  5.83it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:08,  5.68it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:08,  5.52it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:08,  5.84it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.57it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.17it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.90it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.86it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.74it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.28it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.45it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.54it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.71it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.79it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.69it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.36it/s]
Time for cost matrix: 11.43s
Iter 0: wasserstein=1.159010, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994654, edge=0.000547, neigh=3.020449, align=3.548918, entropy=10.927875,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981321, edge=0.000498, neigh=2.779071, align=4.405205, entropy=10.020254,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978784, edge=0.000482, neigh=2.561913, align=4.724321, entropy=9.695453,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978195, edge=0.000471, neigh=2.599500, align=4.883131, entropy=9.535182,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978111, edge=0.000468, neigh=2.620832, align=4.990555, entropy=9.427434,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977808, edge=0.000465, neigh=2.659590, align=5.063375, entropy=9.354590,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977127, edge=0.000466, neigh=2.778115, align=5.064290, entropy=9.353674,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976174, edge=0.000467, neigh=2.893412, align=5.058863, entropy=9.359101,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975530, edge=0.000467, neigh=2.996497, align=5.055901, entropy=9.361938,s=1.000000, s_hat=1.000000
Time for optimization: 20.47s
Test results:
Top-1: 0.257
Top-10: 0.665
Top-30: 0.798
Top-50: 0.834
Top-100: 0.876
MRR: 0.388
Loading datasets/Douban.mat...
Run 1/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.069s
Time for attribute perturbation: 0.060s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:18,  5.35it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:16,  5.91it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:11,  8.65it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.39it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.33it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:13,  6.66it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.37it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.13it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:14,  6.08it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:16,  5.36it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:15,  5.67it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:13,  6.25it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.62it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:16,  5.23it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:14,  5.85it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:14,  5.47it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:15,  5.19it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:15,  5.07it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:14,  5.58it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.02it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:14,  5.47it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:13,  5.62it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:15,  4.99it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:14,  5.01it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:16,  4.52it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:05<00:17,  4.05it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:05<00:15,  4.62it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:05<00:15,  4.48it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:05<00:14,  4.90it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:11,  5.71it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:12,  5.26it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:06<00:11,  5.54it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:06<00:06,  9.48it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:06<00:06,  9.16it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:06,  8.67it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:07,  7.94it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:07<00:08,  6.39it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:07<00:08,  6.31it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:07,  7.70it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:06,  7.60it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:07,  6.79it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:08<00:07,  6.74it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:08<00:07,  6.52it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:07,  6.71it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:06,  6.85it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.04it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.61it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  8.76it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  8.65it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  9.09it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:04,  9.17it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:05,  8.58it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:04,  9.35it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:00<00:04,  9.23it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.70it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.15it/s]
Time for cost matrix: 11.39s
Iter 0: wasserstein=1.162229, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997363, edge=0.000546, neigh=3.023565, align=3.565181, entropy=10.910391,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984170, edge=0.000494, neigh=2.828049, align=4.423453, entropy=10.001842,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981634, edge=0.000478, neigh=2.594310, align=4.746885, entropy=9.673271,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981123, edge=0.000468, neigh=2.610675, align=4.904676, entropy=9.513643,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980975, edge=0.000464, neigh=2.628008, align=5.011075, entropy=9.406915,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980455, edge=0.000466, neigh=2.727646, align=5.015930, entropy=9.402035,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979821, edge=0.000468, neigh=2.847709, align=5.009768, entropy=9.408196,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978980, edge=0.000469, neigh=2.974384, align=5.002906, entropy=9.415057,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978380, edge=0.000469, neigh=3.088451, align=5.000524, entropy=9.417381,s=1.000000, s_hat=1.000000
Time for optimization: 12.45s
Test results:
Top-1: 0.315
Top-10: 0.695
Top-30: 0.802
Top-50: 0.834
Top-100: 0.876
MRR: 0.442
Run 2/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.019s
Time for attribute perturbation: 0.004s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:07, 13.09it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:04, 22.98it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 23.27it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:03, 26.39it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:04, 18.61it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:00<00:03, 22.58it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:03, 24.12it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:03, 20.92it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:02, 23.63it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:01<00:02, 25.52it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:01<00:02, 26.30it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:01<00:02, 27.20it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:01<00:01, 28.16it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:01<00:01, 28.29it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:01, 29.05it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:01, 24.69it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.99it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:08,  5.35it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:08,  5.27it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:07,  6.04it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:06,  6.78it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:06,  6.32it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:07,  6.09it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:07,  5.91it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:07,  5.81it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:06,  5.91it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:07,  5.40it/s]
Time for cost matrix: 4.79s
Iter 0: wasserstein=1.156865, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993262, edge=0.000547, neigh=3.016157, align=3.539170, entropy=10.937310,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979975, edge=0.000498, neigh=2.786850, align=4.392917, entropy=10.032454,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977594, edge=0.000482, neigh=2.558682, align=4.714928, entropy=9.705528,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976999, edge=0.000471, neigh=2.595242, align=4.873063, entropy=9.545304,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976945, edge=0.000468, neigh=2.608661, align=4.977168, entropy=9.440822,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976667, edge=0.000465, neigh=2.649528, align=5.048344, entropy=9.369621,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976005, edge=0.000466, neigh=2.767254, align=5.048579, entropy=9.369385,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975062, edge=0.000467, neigh=2.877834, align=5.043476, entropy=9.374487,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974422, edge=0.000467, neigh=2.977459, align=5.041354, entropy=9.376451,s=1.000000, s_hat=1.000000
Time for optimization: 10.18s
Test results:
Top-1: 0.237
Top-10: 0.650
Top-30: 0.783
Top-50: 0.817
Top-100: 0.864
MRR: 0.371
Run 3/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.022s
Time for attribute perturbation: 0.004s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 29.92it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:03, 28.19it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:03, 29.11it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:00<00:02, 30.32it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:04, 18.19it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:03, 20.05it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:06, 12.03it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:07,  9.64it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:08,  8.84it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:06, 11.44it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:02<00:07,  9.57it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:06,  9.85it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:07,  8.12it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:08,  7.22it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:03<00:08,  7.45it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:03<00:04, 11.80it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:03<00:04, 12.24it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:03<00:03, 14.96it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:02, 19.53it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 13.06it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:03, 12.24it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:03, 12.03it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:03, 12.04it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:03, 12.12it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 12.06it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 10.84it/s]
Time for cost matrix: 5.69s
Iter 0: wasserstein=1.158072, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993704, edge=0.000547, neigh=3.014001, align=3.545968, entropy=10.930778,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980456, edge=0.000498, neigh=2.784023, align=4.402251, entropy=10.023203,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978097, edge=0.000482, neigh=2.556820, align=4.722670, entropy=9.697792,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977466, edge=0.000471, neigh=2.593597, align=4.879132, entropy=9.539238,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977438, edge=0.000467, neigh=2.611606, align=4.978902, entropy=9.439089,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977176, edge=0.000464, neigh=2.653757, align=5.048583, entropy=9.369383,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976554, edge=0.000466, neigh=2.776646, align=5.048050, entropy=9.369914,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975646, edge=0.000467, neigh=2.883710, align=5.043029, entropy=9.374934,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974985, edge=0.000467, neigh=2.978193, align=5.039501, entropy=9.378319,s=1.000000, s_hat=1.000000
Time for optimization: 18.69s
Test results:
Top-1: 0.251
Top-10: 0.648
Top-30: 0.782
Top-50: 0.819
Top-100: 0.860
MRR: 0.381
Run 4/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.063s
Time for attribute perturbation: 0.072s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.64it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:13,  7.34it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  6.95it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.54it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.14it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:13,  6.89it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:11,  7.76it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:09,  9.40it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.11it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.70it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:14,  5.88it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:16,  5.37it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.18it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:16,  4.98it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  6.91it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:08,  9.24it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:10,  7.47it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.59it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:12,  5.90it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:13,  5.39it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:10,  6.67it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.72it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:11,  6.14it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:10,  6.52it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:11,  6.17it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:11,  5.69it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:10,  6.16it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:11,  5.59it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:12,  5.23it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:12,  4.89it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:06<00:11,  5.22it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:10,  5.88it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:11,  5.30it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:10,  5.43it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:07<00:09,  6.02it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:07<00:08,  6.55it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:07<00:08,  6.03it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:07<00:09,  5.58it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  7.34it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:08<00:06,  7.01it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:08<00:08,  5.90it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:08,  5.58it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:08<00:07,  6.08it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.51it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:16,  2.91it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:15,  3.12it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.21it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.50it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.63it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.41it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.53it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.63it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.01it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  2.96it/s]
Time for cost matrix: 13.47s
Iter 0: wasserstein=1.163436, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996683, edge=0.000546, neigh=3.028430, align=3.581045, entropy=10.895519,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.983374, edge=0.000496, neigh=2.790146, align=4.437997, entropy=9.987524,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981144, edge=0.000482, neigh=2.563886, align=4.749198, entropy=9.671313,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980632, edge=0.000471, neigh=2.600907, align=4.900390, entropy=9.518011,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980650, edge=0.000467, neigh=2.609587, align=4.999583, entropy=9.418411,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980384, edge=0.000463, neigh=2.656292, align=5.070067, entropy=9.347898,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979782, edge=0.000465, neigh=2.775642, align=5.070602, entropy=9.347362,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978913, edge=0.000466, neigh=2.884859, align=5.066181, entropy=9.351783,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978260, edge=0.000466, neigh=2.985140, align=5.062993, entropy=9.354872,s=1.000000, s_hat=1.000000
Time for optimization: 21.02s
Test results:
Top-1: 0.284
Top-10: 0.699
Top-30: 0.813
Top-50: 0.844
Top-100: 0.887
MRR: 0.420
Run 5/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.037s
Time for attribute perturbation: 0.007s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:19,  5.05it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.60it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:19,  5.07it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:19,  4.83it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:18,  5.11it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:16,  5.68it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:13,  6.86it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.30it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.57it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.31it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:11,  7.74it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:13,  6.51it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.73it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:16,  4.94it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:16,  4.98it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:11,  7.21it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:11,  6.73it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:12,  6.26it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:11,  6.52it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:07, 10.29it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:07,  9.36it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:06, 10.34it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:06, 10.37it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:09,  7.12it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:09,  6.78it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:09,  6.54it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:09,  6.34it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:09,  6.80it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  7.13it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:06,  9.18it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:06,  8.75it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:06,  8.19it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:07,  7.10it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:07,  7.21it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:07,  7.27it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:08,  6.18it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:09,  5.61it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:08,  5.92it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:08,  5.96it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:07,  6.69it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.97it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.86it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.44it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.66it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.52it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.21it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.31it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.40it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.86it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  4.07it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.90it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.64it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.33it/s]
Time for cost matrix: 12.23s
Iter 0: wasserstein=1.161436, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995633, edge=0.000545, neigh=3.005105, align=3.568861, entropy=10.908143,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981993, edge=0.000494, neigh=2.820518, align=4.427308, entropy=9.998180,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979695, edge=0.000478, neigh=2.607037, align=4.744512, entropy=9.675504,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979236, edge=0.000469, neigh=2.617304, align=4.909600, entropy=9.508813,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979210, edge=0.000466, neigh=2.594613, align=5.009985, entropy=9.408021,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978995, edge=0.000464, neigh=2.628362, align=5.084334, entropy=9.333632,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978315, edge=0.000465, neigh=2.751616, align=5.087707, entropy=9.330257,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977323, edge=0.000465, neigh=2.867203, align=5.083274, entropy=9.334690,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976682, edge=0.000466, neigh=2.971542, align=5.080552, entropy=9.337355,s=1.000000, s_hat=1.000000
Time for optimization: 19.37s
Test results:
Top-1: 0.294
Top-10: 0.689
Top-30: 0.815
Top-50: 0.846
Top-100: 0.884
MRR: 0.425
Run 6/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.067s
Time for attribute perturbation: 0.085s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.36it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:10,  9.49it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:08, 11.28it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:09, 10.25it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:10,  8.43it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.96it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.39it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:10,  8.57it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:12,  7.00it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:12,  7.08it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:09,  8.77it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:10,  7.98it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:09,  8.37it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.47it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:09,  8.70it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:10,  7.50it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:10,  7.16it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:08,  8.50it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:09,  7.53it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:11,  6.34it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.77it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:07,  9.67it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:06, 10.79it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:06,  9.56it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:07,  8.29it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:06,  9.93it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:06,  8.57it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:06,  8.32it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:05,  9.43it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:05<00:07,  7.08it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:08,  6.07it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:09,  5.35it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:09,  5.20it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:07,  6.75it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:07,  6.37it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:06,  6.84it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:06,  7.62it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.77it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:08,  5.37it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  4.81it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.21it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.99it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.67it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.57it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.80it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.92it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.88it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.51it/s]
Time for cost matrix: 11.73s
Iter 0: wasserstein=1.162023, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.997551, edge=0.000544, neigh=3.015040, align=3.561919, entropy=10.913674,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984345, edge=0.000493, neigh=2.821347, align=4.422869, entropy=10.002478,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.981821, edge=0.000477, neigh=2.602345, align=4.746445, entropy=9.673723,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.981328, edge=0.000467, neigh=2.611792, align=4.909359, entropy=9.508957,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981180, edge=0.000464, neigh=2.622084, align=5.013804, entropy=9.404186,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980889, edge=0.000461, neigh=2.656964, align=5.082536, entropy=9.335429,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.980233, edge=0.000463, neigh=2.780210, align=5.082811, entropy=9.335153,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979308, edge=0.000464, neigh=2.898669, align=5.076837, entropy=9.341127,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978724, edge=0.000465, neigh=3.006610, align=5.075315, entropy=9.342598,s=1.000000, s_hat=1.000000
Time for optimization: 18.14s
Test results:
Top-1: 0.308
Top-10: 0.706
Top-30: 0.804
Top-50: 0.839
Top-100: 0.883
MRR: 0.440
Run 7/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.031s
Time for attribute perturbation: 0.037s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.42it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:12,  7.50it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:13,  7.26it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:15,  6.14it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:17,  5.17it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:15,  5.81it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.66it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.31it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:10,  8.02it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:11,  7.37it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:14,  6.02it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.76it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:13,  5.97it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:12,  6.32it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:12,  6.27it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.79it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:11,  6.51it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:12,  6.18it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:13,  5.47it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:14,  5.09it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:10,  6.98it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:09,  7.20it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:10,  6.51it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:12,  5.76it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:09,  7.09it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:08,  7.96it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:08,  7.66it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:06,  8.93it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  8.33it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:07,  8.06it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:06<00:07,  7.59it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:07,  7.42it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:06,  8.11it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:06,  8.49it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:06,  8.00it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  8.19it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.47it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:06,  7.24it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.90it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.76it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  4.07it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.92it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.06it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  4.01it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.99it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.76it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.49it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.20it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.41it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.54it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.42it/s]
Time for cost matrix: 12.38s
Iter 0: wasserstein=1.158174, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993842, edge=0.000547, neigh=3.014935, align=3.545960, entropy=10.930436,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980652, edge=0.000498, neigh=2.783238, align=4.394927, entropy=10.030323,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978138, edge=0.000482, neigh=2.558736, align=4.717012, entropy=9.702673,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977606, edge=0.000470, neigh=2.592580, align=4.873340, entropy=9.544951,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977564, edge=0.000467, neigh=2.609069, align=4.978675, entropy=9.439313,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977280, edge=0.000463, neigh=2.644215, align=5.050400, entropy=9.367565,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976645, edge=0.000465, neigh=2.763778, align=5.050543, entropy=9.367421,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975672, edge=0.000466, neigh=2.874980, align=5.045383, entropy=9.372581,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974995, edge=0.000466, neigh=2.976009, align=5.043763, entropy=9.374065,s=1.000000, s_hat=1.000000
Time for optimization: 18.64s
Test results:
Top-1: 0.246
Top-10: 0.661
Top-30: 0.789
Top-50: 0.820
Top-100: 0.863
MRR: 0.379
Run 8/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.055s
Time for attribute perturbation: 0.054s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:23,  4.30it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:15,  6.23it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  7.21it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:13,  7.24it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.26it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  8.34it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:12,  7.26it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.41it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:15,  5.72it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:14,  6.19it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:14,  6.20it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:14,  6.10it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:15,  5.32it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:15,  5.59it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:15,  5.47it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:15,  5.36it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:03<00:14,  5.78it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.99it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:10,  7.21it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:10,  7.67it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:09,  7.85it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:09,  7.64it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:09,  7.41it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:11,  6.45it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:11,  6.29it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:12,  5.82it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:12,  5.47it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:11,  6.00it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:05<00:11,  5.79it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:05<00:08,  7.46it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.38it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  7.45it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:07,  7.70it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:06<00:08,  7.36it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:06<00:08,  7.24it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:06<00:06,  9.32it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:05,  9.45it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:04, 11.93it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:05,  8.89it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:07<00:06,  8.12it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:07<00:05,  8.10it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  6.98it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.83it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:12,  3.73it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:16,  2.91it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.07it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.27it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.27it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.88it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  3.94it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.84it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.75it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.18it/s]
Time for cost matrix: 12.45s
Iter 0: wasserstein=1.161079, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995410, edge=0.000545, neigh=3.016458, align=3.570418, entropy=10.906597,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981729, edge=0.000494, neigh=2.814034, align=4.427159, entropy=9.998218,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979402, edge=0.000479, neigh=2.608857, align=4.746640, entropy=9.673276,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978989, edge=0.000469, neigh=2.621062, align=4.909029, entropy=9.509371,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979000, edge=0.000466, neigh=2.593967, align=5.008817, entropy=9.409189,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978798, edge=0.000464, neigh=2.629201, align=5.080986, entropy=9.336980,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978122, edge=0.000465, neigh=2.755243, align=5.083249, entropy=9.334716,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977125, edge=0.000466, neigh=2.869642, align=5.078722, entropy=9.339242,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976472, edge=0.000466, neigh=2.974578, align=5.076057, entropy=9.341857,s=1.000000, s_hat=1.000000
Time for optimization: 20.00s
Test results:
Top-1: 0.287
Top-10: 0.691
Top-30: 0.808
Top-50: 0.839
Top-100: 0.880
MRR: 0.417
Run 9/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.060s
Time for attribute perturbation: 0.064s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.71it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:13,  7.06it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  7.15it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:15,  6.21it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:14,  6.64it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:13,  6.77it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.44it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.90it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.32it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.71it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:12,  7.23it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:09,  8.69it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:08, 10.09it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:07, 10.59it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:07, 10.61it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:07,  9.92it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:09,  8.40it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:10,  7.47it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:08,  8.63it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:09,  7.82it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:09,  7.31it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:04<00:11,  5.98it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:11,  5.77it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:12,  5.53it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:11,  5.56it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:10,  6.05it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:08,  7.09it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:08,  7.29it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:08,  7.26it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:07,  7.45it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:08,  6.77it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:09,  5.94it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:10,  5.22it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:06<00:09,  5.70it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:08,  6.03it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:08,  6.14it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:09,  5.45it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:07<00:09,  5.20it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:07<00:06,  7.16it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:05,  8.49it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.01it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:15,  3.18it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.79it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:13,  3.38it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.65it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.68it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.50it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.45it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.67it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.55it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.23it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.05it/s]
Time for cost matrix: 12.32s
Iter 0: wasserstein=1.157450, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993696, edge=0.000547, neigh=3.020853, align=3.540205, entropy=10.936390,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980421, edge=0.000498, neigh=2.784913, align=4.392764, entropy=10.032628,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978004, edge=0.000482, neigh=2.560465, align=4.716412, entropy=9.704064,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977403, edge=0.000471, neigh=2.597023, align=4.872883, entropy=9.545490,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977349, edge=0.000467, neigh=2.611764, align=4.977046, entropy=9.440945,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977084, edge=0.000464, neigh=2.647596, align=5.047280, entropy=9.370685,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976451, edge=0.000465, neigh=2.766653, align=5.047022, entropy=9.370942,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975503, edge=0.000466, neigh=2.878585, align=5.041885, entropy=9.376079,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974857, edge=0.000467, neigh=2.979585, align=5.039877, entropy=9.377944,s=1.000000, s_hat=1.000000
Time for optimization: 20.17s
Test results:
Top-1: 0.247
Top-10: 0.657
Top-30: 0.785
Top-50: 0.818
Top-100: 0.864
MRR: 0.378
Run 10/10
Adding edge noise: 0it [00:00, ?it/s]Adding edge noise: 0it [00:00, ?it/s]
Time for edge perturbation: 0.058s
Time for attribute perturbation: 0.063s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.10it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:12,  7.80it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:13,  7.04it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:10,  9.00it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:12,  7.56it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:11,  7.82it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:11,  7.75it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:12,  7.29it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.48it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:14,  6.18it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:13,  6.53it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:13,  6.52it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:09,  9.18it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:09,  8.88it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:09,  8.59it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:09,  8.41it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:10,  7.75it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:08,  9.08it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:07, 10.13it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  8.42it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:10,  7.29it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:10,  6.87it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:09,  7.42it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:07,  8.64it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:07,  8.29it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:07,  8.21it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:07,  8.60it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:06,  9.43it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:05, 11.14it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:06,  8.97it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:05<00:06,  7.88it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:06,  8.03it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:05<00:07,  6.93it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:07,  7.03it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:06,  7.44it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:07,  6.28it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.54it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.13it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.15it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.02it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.78it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.35it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.38it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:13,  3.15it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.14it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.37it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.41it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.14it/s]
Time for cost matrix: 11.76s
Iter 0: wasserstein=1.157841, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993997, edge=0.000547, neigh=3.022905, align=3.543750, entropy=10.932858,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980732, edge=0.000498, neigh=2.791329, align=4.401682, entropy=10.023718,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978342, edge=0.000482, neigh=2.564877, align=4.722524, entropy=9.697965,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977763, edge=0.000470, neigh=2.602874, align=4.879972, entropy=9.538400,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977715, edge=0.000467, neigh=2.612500, align=4.982023, entropy=9.435968,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977445, edge=0.000464, neigh=2.653049, align=5.051152, entropy=9.366814,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976802, edge=0.000466, neigh=2.770276, align=5.051228, entropy=9.366736,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975846, edge=0.000466, neigh=2.880862, align=5.045551, entropy=9.372413,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975194, edge=0.000467, neigh=2.983237, align=5.043826, entropy=9.373928,s=1.000000, s_hat=1.000000
Time for optimization: 19.03s
Test results:
Top-1: 0.242
Top-10: 0.659
Top-30: 0.797
Top-50: 0.828
Top-100: 0.870
MRR: 0.375
