Loading datasets/Douban.mat...
Run 1/1
Time for edge perturbation: 0.142s
Time for attribute perturbation: 0.068s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Iter 0: wasserstein=1.127491, edge=0.001135, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.791489, edge=0.001329, neigh=5.683800, align=4.896898, entropy=9.580899,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.763527, edge=0.000886, neigh=5.776975, align=5.452750, entropy=8.971920,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.760330, edge=0.000900, neigh=6.233625, align=5.493901, entropy=8.924694,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.760286, edge=0.000919, neigh=6.615016, align=5.463702, entropy=8.954404,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.760849, edge=0.000927, neigh=6.977295, align=5.432251, entropy=8.985785,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.761259, edge=0.000930, neigh=7.348690, align=5.414225, entropy=9.003747,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.761353, edge=0.000933, neigh=7.614799, align=5.401758, entropy=9.016206,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.761212, edge=0.000940, neigh=7.814715, align=5.391095, entropy=9.026416,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.761322, edge=0.000946, neigh=7.980967, align=5.382917, entropy=9.034051,s=1.000000, s_hat=1.000000
Time for optimization: 52.84s
Test results:
Top-1: 0.686
Top-10: 0.949
Top-30: 0.981
Top-50: 0.987
Top-100: 0.994
MRR: 0.784
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.141s
Time for attribute perturbation: 0.158s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 39.27s
Iter 0: wasserstein=1.167925, edge=0.001389, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.973200, edge=0.001345, neigh=4.321357, align=4.395138, entropy=10.081186,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.959548, edge=0.001027, neigh=4.013849, align=5.246227, entropy=9.177770,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.957356, edge=0.001022, neigh=3.981780, align=5.478272, entropy=8.940534,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.957059, edge=0.001060, neigh=4.217212, align=5.489082, entropy=8.929137,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.957117, edge=0.001089, neigh=4.430926, align=5.476053, entropy=8.941992,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.956986, edge=0.001107, neigh=4.613879, align=5.463120, entropy=8.954856,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.956665, edge=0.001116, neigh=4.747823, align=5.450123, entropy=8.967841,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.955873, edge=0.001119, neigh=4.847381, align=5.440543, entropy=8.977421,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.955235, edge=0.001125, neigh=4.932617, align=5.434670, entropy=8.983027,s=1.000000, s_hat=1.000000
Time for optimization: 55.34s
Test results:
Top-1: 0.554
Top-10: 0.868
Top-30: 0.931
Top-50: 0.939
Top-100: 0.961
MRR: 0.666
Run 2/10
Time for edge perturbation: 0.094s
Time for attribute perturbation: 0.133s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.96s
Iter 0: wasserstein=1.168629, edge=0.001389, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.974221, edge=0.001357, neigh=4.318119, align=4.382428, entropy=10.094927,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.960056, edge=0.001028, neigh=3.999861, align=5.231054, entropy=9.192025,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.957797, edge=0.001027, neigh=4.010202, align=5.471823, entropy=8.946793,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.957711, edge=0.001068, neigh=4.233934, align=5.482702, entropy=8.935384,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.957600, edge=0.001099, neigh=4.383766, align=5.470445, entropy=8.947534,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.957479, edge=0.001117, neigh=4.585388, align=5.457786, entropy=8.960179,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.956952, edge=0.001123, neigh=4.779540, align=5.447170, entropy=8.970794,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.956227, edge=0.001124, neigh=4.919539, align=5.440867, entropy=8.977097,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.955676, edge=0.001126, neigh=5.031154, align=5.437214, entropy=8.980580,s=1.000000, s_hat=1.000000
Time for optimization: 48.09s
Test results:
Top-1: 0.569
Top-10: 0.887
Top-30: 0.944
Top-50: 0.958
Top-100: 0.966
MRR: 0.683
Run 3/10
Time for edge perturbation: 0.084s
Time for attribute perturbation: 0.132s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 22.08s
Iter 0: wasserstein=1.168068, edge=0.001391, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.974337, edge=0.001367, neigh=4.357557, align=4.375322, entropy=10.103495,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.960189, edge=0.001043, neigh=4.052823, align=5.235678, entropy=9.189159,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.958122, edge=0.001028, neigh=3.930263, align=5.467523, entropy=8.951279,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.958326, edge=0.001030, neigh=3.812977, align=5.564364, entropy=8.853807,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.958456, edge=0.001058, neigh=4.033486, align=5.555917, entropy=8.862070,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.958503, edge=0.001077, neigh=4.212008, align=5.537548, entropy=8.880418,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.958062, edge=0.001093, neigh=4.299375, align=5.524464, entropy=8.893500,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.957313, edge=0.001104, neigh=4.380842, align=5.518035, entropy=8.899929,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.956709, edge=0.001114, neigh=4.495959, align=5.511450, entropy=8.906450,s=1.000000, s_hat=1.000000
Time for optimization: 29.07s
Test results:
Top-1: 0.563
Top-10: 0.882
Top-30: 0.934
Top-50: 0.949
Top-100: 0.962
MRR: 0.677
Run 4/10
Time for edge perturbation: 0.095s
Time for attribute perturbation: 0.179s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 23.60s
Iter 0: wasserstein=1.167675, edge=0.001389, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.973842, edge=0.001362, neigh=4.339862, align=4.373175, entropy=10.104091,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.959984, edge=0.001031, neigh=4.031391, align=5.229373, entropy=9.195104,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.957813, edge=0.001032, neigh=3.915310, align=5.460761, entropy=8.958030,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.958100, edge=0.001031, neigh=3.757352, align=5.553503, entropy=8.864628,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.958077, edge=0.001059, neigh=3.926929, align=5.555067, entropy=8.862910,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.957907, edge=0.001078, neigh=4.076472, align=5.539648, entropy=8.878316,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.957384, edge=0.001089, neigh=4.248869, align=5.529324, entropy=8.888640,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.956794, edge=0.001096, neigh=4.366771, align=5.523106, entropy=8.894858,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.956241, edge=0.001100, neigh=4.478449, align=5.516014, entropy=8.901833,s=1.000000, s_hat=1.000000
Time for optimization: 45.29s
Test results:
Top-1: 0.563
Top-10: 0.874
Top-30: 0.937
Top-50: 0.952
Top-100: 0.961
MRR: 0.673
Run 5/10
Time for edge perturbation: 0.095s
Time for attribute perturbation: 0.151s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 33.32s
Iter 0: wasserstein=1.167637, edge=0.001391, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.973110, edge=0.001349, neigh=4.269783, align=4.391758, entropy=10.086946,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.958643, edge=0.001026, neigh=4.021992, align=5.253635, entropy=9.171217,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.956702, edge=0.001018, neigh=3.973602, align=5.482484, entropy=8.936444,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.957221, edge=0.001025, neigh=3.838476, align=5.562809, entropy=8.855380,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.957503, edge=0.001054, neigh=3.908750, align=5.557890, entropy=8.860144,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.957425, edge=0.001077, neigh=4.038039, align=5.535765, entropy=8.882217,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.957059, edge=0.001090, neigh=4.211706, align=5.520662, entropy=8.897303,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.956596, edge=0.001096, neigh=4.339375, align=5.511183, entropy=8.906778,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.956066, edge=0.001101, neigh=4.431333, align=5.502811, entropy=8.914576,s=1.000000, s_hat=1.000000
Time for optimization: 53.41s
Test results:
Top-1: 0.560
Top-10: 0.874
Top-30: 0.939
Top-50: 0.955
Top-100: 0.969
MRR: 0.671
Run 6/10
Time for edge perturbation: 0.128s
Time for attribute perturbation: 0.250s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.73s
Iter 0: wasserstein=1.167890, edge=0.001393, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.973651, edge=0.001352, neigh=4.324283, align=4.405411, entropy=10.071666,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.960170, edge=0.001035, neigh=4.024432, align=5.250766, entropy=9.174262,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.957708, edge=0.001033, neigh=3.924437, align=5.481563, entropy=8.937369,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.958361, edge=0.001032, neigh=3.778123, align=5.573114, entropy=8.845151,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.958332, edge=0.001060, neigh=3.972359, align=5.570278, entropy=8.847832,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.958055, edge=0.001080, neigh=4.141702, align=5.556281, entropy=8.861698,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.957657, edge=0.001094, neigh=4.296416, align=5.542081, entropy=8.875884,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.956990, edge=0.001098, neigh=4.391430, align=5.531595, entropy=8.886368,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.956344, edge=0.001106, neigh=4.462850, align=5.523587, entropy=8.893942,s=1.000000, s_hat=1.000000
Time for optimization: 56.11s
Test results:
Top-1: 0.559
Top-10: 0.885
Top-30: 0.933
Top-50: 0.953
Top-100: 0.966
MRR: 0.674
Run 7/10
Time for edge perturbation: 0.101s
Time for attribute perturbation: 0.178s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 40.59s
Iter 0: wasserstein=1.168438, edge=0.001389, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.974028, edge=0.001347, neigh=4.324437, align=4.390883, entropy=10.087554,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.960221, edge=0.001030, neigh=4.023312, align=5.253367, entropy=9.171001,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.958177, edge=0.001018, neigh=3.902752, align=5.485472, entropy=8.933302,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.958311, edge=0.001027, neigh=3.797623, align=5.572769, entropy=8.845363,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.958421, edge=0.001054, neigh=3.972772, align=5.564805, entropy=8.853206,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.958265, edge=0.001076, neigh=4.136676, align=5.549575, entropy=8.868396,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.957780, edge=0.001086, neigh=4.306298, align=5.537835, entropy=8.880129,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.957207, edge=0.001093, neigh=4.414581, align=5.530888, entropy=8.887076,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.956693, edge=0.001097, neigh=4.513220, align=5.524050, entropy=8.893851,s=1.000000, s_hat=1.000000
Time for optimization: 53.16s
Test results:
Top-1: 0.545
Top-10: 0.870
Top-30: 0.926
Top-50: 0.941
Top-100: 0.962
MRR: 0.661
Run 8/10
Time for edge perturbation: 0.133s
Time for attribute perturbation: 0.244s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 40.39s
Iter 0: wasserstein=1.168335, edge=0.001388, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.973844, edge=0.001355, neigh=4.289937, align=4.367188, entropy=10.110265,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.960223, edge=0.001031, neigh=4.027642, align=5.222368, entropy=9.203395,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.957503, edge=0.001021, neigh=3.981186, align=5.467071, entropy=8.952289,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.957974, edge=0.001027, neigh=3.834836, align=5.554449, entropy=8.863851,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.958173, edge=0.001052, neigh=4.004955, align=5.552025, entropy=8.865985,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.958193, edge=0.001077, neigh=4.156799, align=5.537287, entropy=8.880680,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.957730, edge=0.001091, neigh=4.294384, align=5.526834, entropy=8.891130,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.957099, edge=0.001100, neigh=4.393274, align=5.521078, entropy=8.896886,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.956639, edge=0.001105, neigh=4.495388, align=5.518066, entropy=8.899859,s=1.000000, s_hat=1.000000
Time for optimization: 55.86s
Test results:
Top-1: 0.546
Top-10: 0.882
Top-30: 0.940
Top-50: 0.947
Top-100: 0.969
MRR: 0.664
Run 9/10
Time for edge perturbation: 0.179s
Time for attribute perturbation: 0.338s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 40.00s
Iter 0: wasserstein=1.168334, edge=0.001390, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.974183, edge=0.001352, neigh=4.332912, align=4.376472, entropy=10.100498,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.959861, edge=0.001034, neigh=4.049949, align=5.240715, entropy=9.184258,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.958019, edge=0.001029, neigh=3.952086, align=5.472427, entropy=8.947079,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.958219, edge=0.001035, neigh=3.860281, align=5.558579, entropy=8.859838,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.958248, edge=0.001061, neigh=3.960827, align=5.556766, entropy=8.861358,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.958269, edge=0.001084, neigh=4.127925, align=5.539976, entropy=8.878004,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.957801, edge=0.001093, neigh=4.308158, align=5.523818, entropy=8.894147,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.957228, edge=0.001100, neigh=4.411911, align=5.514603, entropy=8.903361,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.956696, edge=0.001107, neigh=4.512698, align=5.506968, entropy=8.910799,s=1.000000, s_hat=1.000000
Time for optimization: 51.59s
Test results:
Top-1: 0.570
Top-10: 0.880
Top-30: 0.942
Top-50: 0.959
Top-100: 0.971
MRR: 0.682
Run 10/10
Time for edge perturbation: 0.117s
Time for attribute perturbation: 0.232s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 27.74s
Iter 0: wasserstein=1.168329, edge=0.001387, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.974603, edge=0.001359, neigh=4.289577, align=4.383732, entropy=10.094750,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.960653, edge=0.001033, neigh=4.017460, align=5.234665, entropy=9.191065,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.958171, edge=0.001030, neigh=3.931019, align=5.461241, entropy=8.958044,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.958588, edge=0.001031, neigh=3.764486, align=5.552389, entropy=8.865817,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.958577, edge=0.001061, neigh=3.872707, align=5.555002, entropy=8.862987,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.958505, edge=0.001079, neigh=4.069842, align=5.540515, entropy=8.877450,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.958118, edge=0.001089, neigh=4.269710, align=5.528852, entropy=8.889112,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.957498, edge=0.001094, neigh=4.414580, align=5.522699, entropy=8.895264,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.956915, edge=0.001097, neigh=4.526269, align=5.518210, entropy=8.899554,s=1.000000, s_hat=1.000000
Time for optimization: 49.60s
Test results:
Top-1: 0.565
Top-10: 0.872
Top-30: 0.923
Top-50: 0.942
Top-100: 0.960
MRR: 0.678
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.150s
Time for attribute perturbation: 0.179s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.59s
Iter 0: wasserstein=1.169174, edge=0.001219, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.985759, edge=0.001188, neigh=3.990195, align=4.183704, entropy=10.293377,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.971909, edge=0.000929, neigh=3.826523, align=5.099569, entropy=9.325757,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.969634, edge=0.000910, neigh=3.669756, align=5.376867, entropy=9.042539,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.969959, edge=0.000908, neigh=3.530575, align=5.487696, entropy=8.930624,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.969899, edge=0.000931, neigh=3.616146, align=5.488534, entropy=8.929483,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.969646, edge=0.000948, neigh=3.750703, align=5.473433, entropy=8.944534,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.969146, edge=0.000957, neigh=3.883890, align=5.460261, entropy=8.957703,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.968338, edge=0.000961, neigh=3.985287, align=5.453507, entropy=8.964457,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.967721, edge=0.000966, neigh=4.096464, align=5.448888, entropy=8.969007,s=1.000000, s_hat=1.000000
Time for optimization: 50.64s
Test results:
Top-1: 0.493
Top-10: 0.838
Top-30: 0.906
Top-50: 0.923
Top-100: 0.946
MRR: 0.614
Run 2/10
Time for edge perturbation: 0.065s
Time for attribute perturbation: 0.156s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.19s
Iter 0: wasserstein=1.167752, edge=0.001218, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.984013, edge=0.001178, neigh=3.924464, align=4.195001, entropy=10.283542,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.970315, edge=0.000925, neigh=3.785195, align=5.098257, entropy=9.326696,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.968027, edge=0.000910, neigh=3.606149, align=5.378619, entropy=9.040677,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.968303, edge=0.000905, neigh=3.526562, align=5.490621, entropy=8.927706,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.968182, edge=0.000927, neigh=3.685150, align=5.489079, entropy=8.928930,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.967958, edge=0.000941, neigh=3.854114, align=5.467902, entropy=8.950065,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.967604, edge=0.000954, neigh=3.966276, align=5.455433, entropy=8.962531,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.967037, edge=0.000962, neigh=4.070830, align=5.450253, entropy=8.967711,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.966527, edge=0.000968, neigh=4.183935, align=5.446120, entropy=8.971738,s=1.000000, s_hat=1.000000
Time for optimization: 50.68s
Test results:
Top-1: 0.483
Top-10: 0.820
Top-30: 0.902
Top-50: 0.923
Top-100: 0.944
MRR: 0.605
Run 3/10
Time for edge perturbation: 0.131s
Time for attribute perturbation: 0.226s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 35.75s
Iter 0: wasserstein=1.167645, edge=0.001218, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.983704, edge=0.001184, neigh=3.902978, align=4.178498, entropy=10.298581,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.969677, edge=0.000923, neigh=3.765524, align=5.097915, entropy=9.326791,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.967285, edge=0.000917, neigh=3.593128, align=5.385995, entropy=9.033012,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.967803, edge=0.000914, neigh=3.461200, align=5.499447, entropy=8.918807,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.967636, edge=0.000935, neigh=3.640261, align=5.498015, entropy=8.920005,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.967611, edge=0.000947, neigh=3.802262, align=5.486478, entropy=8.931489,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.967218, edge=0.000953, neigh=3.880938, align=5.475592, entropy=8.942372,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.966576, edge=0.000960, neigh=3.982472, align=5.470114, entropy=8.947849,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.966132, edge=0.000965, neigh=4.089367, align=5.465753, entropy=8.951910,s=1.000000, s_hat=1.000000
Time for optimization: 50.22s
Test results:
Top-1: 0.495
Top-10: 0.836
Top-30: 0.899
Top-50: 0.918
Top-100: 0.941
MRR: 0.614
Run 4/10
Time for edge perturbation: 0.154s
Time for attribute perturbation: 0.186s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 35.32s
Iter 0: wasserstein=1.167740, edge=0.001216, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.983467, edge=0.001177, neigh=3.928708, align=4.204742, entropy=10.272647,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.969532, edge=0.000922, neigh=3.764749, align=5.115319, entropy=9.310448,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.967384, edge=0.000909, neigh=3.620704, align=5.399206, entropy=9.020305,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.967592, edge=0.000901, neigh=3.542376, align=5.510535, entropy=8.907795,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.967589, edge=0.000920, neigh=3.690552, align=5.513245, entropy=8.904770,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.967354, edge=0.000934, neigh=3.823868, align=5.497630, entropy=8.920338,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.966951, edge=0.000944, neigh=3.955965, align=5.487301, entropy=8.930663,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.966403, edge=0.000954, neigh=4.056382, align=5.480870, entropy=8.937094,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.965877, edge=0.000962, neigh=4.147545, align=5.475187, entropy=8.942621,s=1.000000, s_hat=1.000000
Time for optimization: 49.99s
Test results:
Top-1: 0.506
Top-10: 0.831
Top-30: 0.912
Top-50: 0.928
Top-100: 0.952
MRR: 0.620
Run 5/10
Time for edge perturbation: 0.143s
Time for attribute perturbation: 0.133s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.76s
Iter 0: wasserstein=1.167831, edge=0.001216, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.984601, edge=0.001182, neigh=3.925648, align=4.186616, entropy=10.291491,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.970719, edge=0.000929, neigh=3.736875, align=5.095891, entropy=9.329466,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.968359, edge=0.000914, neigh=3.664555, align=5.376024, entropy=9.043227,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.968768, edge=0.000912, neigh=3.557584, align=5.484757, entropy=8.933421,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.968669, edge=0.000931, neigh=3.735920, align=5.484156, entropy=8.933822,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.968468, edge=0.000944, neigh=3.849702, align=5.472663, entropy=8.945302,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.968074, edge=0.000954, neigh=3.933429, align=5.462749, entropy=8.955215,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.967261, edge=0.000960, neigh=4.028230, align=5.455622, entropy=8.962342,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.966441, edge=0.000966, neigh=4.117846, align=5.449366, entropy=8.968300,s=1.000000, s_hat=1.000000
Time for optimization: 51.92s
Test results:
Top-1: 0.495
Top-10: 0.827
Top-30: 0.893
Top-50: 0.921
Top-100: 0.937
MRR: 0.613
Run 6/10
Time for edge perturbation: 0.060s
Time for attribute perturbation: 0.281s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.58s
Iter 0: wasserstein=1.167697, edge=0.001218, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.983910, edge=0.001181, neigh=3.936163, align=4.184927, entropy=10.291463,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.970130, edge=0.000918, neigh=3.798789, align=5.101118, entropy=9.324205,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.968002, edge=0.000907, neigh=3.648201, align=5.378314, entropy=9.041577,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.968381, edge=0.000904, neigh=3.474333, align=5.488875, entropy=8.929449,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.968245, edge=0.000927, neigh=3.575726, align=5.496278, entropy=8.921714,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.967872, edge=0.000943, neigh=3.722083, align=5.486813, entropy=8.931152,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.967478, edge=0.000954, neigh=3.883354, align=5.477243, entropy=8.940721,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.966837, edge=0.000958, neigh=3.992952, align=5.470319, entropy=8.947644,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.966271, edge=0.000964, neigh=4.098583, align=5.463210, entropy=8.954589,s=1.000000, s_hat=1.000000
Time for optimization: 50.28s
Test results:
Top-1: 0.503
Top-10: 0.827
Top-30: 0.887
Top-50: 0.921
Top-100: 0.942
MRR: 0.614
Run 7/10
Time for edge perturbation: 0.123s
Time for attribute perturbation: 0.155s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.20s
Iter 0: wasserstein=1.168649, edge=0.001219, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.984912, edge=0.001187, neigh=3.885698, align=4.182903, entropy=10.295200,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.970609, edge=0.000921, neigh=3.779920, align=5.089533, entropy=9.335285,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.968184, edge=0.000915, neigh=3.576552, align=5.377546, entropy=9.041434,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.968654, edge=0.000910, neigh=3.453427, align=5.486793, entropy=8.931416,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.968690, edge=0.000929, neigh=3.616089, align=5.490351, entropy=8.927650,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.968596, edge=0.000942, neigh=3.794206, align=5.473527, entropy=8.944439,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.968191, edge=0.000951, neigh=3.932927, align=5.462117, entropy=8.955847,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.967484, edge=0.000959, neigh=4.027856, align=5.455344, entropy=8.962620,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.966921, edge=0.000968, neigh=4.127452, align=5.449101, entropy=8.968773,s=1.000000, s_hat=1.000000
Time for optimization: 51.11s
Test results:
Top-1: 0.497
Top-10: 0.840
Top-30: 0.905
Top-50: 0.930
Top-100: 0.946
MRR: 0.616
Run 8/10
Time for edge perturbation: 0.195s
Time for attribute perturbation: 0.187s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 43.61s
Iter 0: wasserstein=1.167398, edge=0.001215, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.983599, edge=0.001178, neigh=3.869294, align=4.171569, entropy=10.304800,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.969432, edge=0.000922, neigh=3.731073, align=5.102681, entropy=9.321704,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.967290, edge=0.000907, neigh=3.626082, align=5.383788, entropy=9.035175,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.967741, edge=0.000908, neigh=3.522859, align=5.492871, entropy=8.925338,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.967721, edge=0.000929, neigh=3.697844, align=5.494776, entropy=8.923211,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.967486, edge=0.000942, neigh=3.868761, align=5.482960, entropy=8.935005,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.967027, edge=0.000953, neigh=3.998742, align=5.469691, entropy=8.948273,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.966434, edge=0.000960, neigh=4.076118, align=5.460279, entropy=8.957685,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.965781, edge=0.000966, neigh=4.163074, align=5.453662, entropy=8.964152,s=1.000000, s_hat=1.000000
Time for optimization: 60.85s
Test results:
Top-1: 0.492
Top-10: 0.835
Top-30: 0.904
Top-50: 0.923
Top-100: 0.947
MRR: 0.606
Run 9/10
Time for edge perturbation: 0.169s
Time for attribute perturbation: 0.228s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 42.69s
Iter 0: wasserstein=1.168501, edge=0.001218, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.984192, edge=0.001181, neigh=3.942522, align=4.203502, entropy=10.273917,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.970323, edge=0.000928, neigh=3.795655, align=5.104663, entropy=9.320663,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.968249, edge=0.000914, neigh=3.655702, align=5.375424, entropy=9.043808,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.968531, edge=0.000907, neigh=3.582941, align=5.481585, entropy=8.936684,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.968571, edge=0.000928, neigh=3.707472, align=5.479771, entropy=8.938224,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.968442, edge=0.000946, neigh=3.824857, align=5.465442, entropy=8.952523,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.967987, edge=0.000956, neigh=3.951675, align=5.454525, entropy=8.963439,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.967195, edge=0.000958, neigh=4.074507, align=5.450309, entropy=8.967651,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.966464, edge=0.000962, neigh=4.166109, align=5.447387, entropy=8.969963,s=1.000000, s_hat=1.000000
Time for optimization: 57.87s
Test results:
Top-1: 0.482
Top-10: 0.822
Top-30: 0.887
Top-50: 0.914
Top-100: 0.941
MRR: 0.608
Run 10/10
Time for edge perturbation: 0.130s
Time for attribute perturbation: 0.207s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.88s
Iter 0: wasserstein=1.167558, edge=0.001220, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.983210, edge=0.001180, neigh=3.932478, align=4.190202, entropy=10.286307,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.969336, edge=0.000928, neigh=3.767434, align=5.099489, entropy=9.325671,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.966915, edge=0.000911, neigh=3.683538, align=5.374070, entropy=9.045038,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.966961, edge=0.000904, neigh=3.614985, align=5.485045, entropy=8.933168,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.967109, edge=0.000926, neigh=3.732794, align=5.482423, entropy=8.935562,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.967257, edge=0.000947, neigh=3.881060, align=5.469152, entropy=8.948813,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.966869, edge=0.000959, neigh=4.034408, align=5.456899, entropy=8.961065,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.966239, edge=0.000964, neigh=4.180654, align=5.449877, entropy=8.968082,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.965664, edge=0.000970, neigh=4.287400, align=5.445404, entropy=8.972140,s=1.000000, s_hat=1.000000
Time for optimization: 51.27s
Test results:
Top-1: 0.486
Top-10: 0.827
Top-30: 0.889
Top-50: 0.915
Top-100: 0.946
MRR: 0.603
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.164s
Time for attribute perturbation: 0.129s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.19s
Iter 0: wasserstein=1.166659, edge=0.001071, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.987401, edge=0.001029, neigh=3.656341, align=4.042492, entropy=10.434875,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.972857, edge=0.000828, neigh=3.617294, align=5.011636, entropy=9.413848,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.970969, edge=0.000816, neigh=3.428819, align=5.300668, entropy=9.119073,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.970861, edge=0.000807, neigh=3.367679, align=5.433357, entropy=8.984901,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.970960, edge=0.000819, neigh=3.304780, align=5.499510, entropy=8.918509,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.970735, edge=0.000829, neigh=3.516370, align=5.491686, entropy=8.926282,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.970267, edge=0.000834, neigh=3.674283, align=5.476923, entropy=8.941042,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.969725, edge=0.000838, neigh=3.793379, align=5.464752, entropy=8.953212,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.969225, edge=0.000843, neigh=3.904688, align=5.456889, entropy=8.961021,s=1.000000, s_hat=1.000000
Time for optimization: 52.15s
Test results:
Top-1: 0.441
Top-10: 0.802
Top-30: 0.883
Top-50: 0.906
Top-100: 0.933
MRR: 0.563
Run 2/10
Time for edge perturbation: 0.067s
Time for attribute perturbation: 0.261s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 39.10s
Iter 0: wasserstein=1.167156, edge=0.001070, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988094, edge=0.001034, neigh=3.669470, align=4.056901, entropy=10.419819,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974019, edge=0.000831, neigh=3.587073, align=5.002292, entropy=9.422780,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.971607, edge=0.000813, neigh=3.373386, align=5.309703, entropy=9.109351,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.971942, edge=0.000802, neigh=3.295285, align=5.432760, entropy=8.985517,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972060, edge=0.000807, neigh=3.247642, align=5.504856, entropy=8.913136,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.971918, edge=0.000815, neigh=3.416593, align=5.507092, entropy=8.910874,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971499, edge=0.000821, neigh=3.547148, align=5.498947, entropy=8.919017,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.970822, edge=0.000826, neigh=3.657573, align=5.488468, entropy=8.929496,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970307, edge=0.000830, neigh=3.767627, align=5.481862, entropy=8.936044,s=1.000000, s_hat=1.000000
Time for optimization: 51.62s
Test results:
Top-1: 0.449
Top-10: 0.815
Top-30: 0.893
Top-50: 0.915
Top-100: 0.934
MRR: 0.573
Run 3/10
Time for edge perturbation: 0.112s
Time for attribute perturbation: 0.233s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 35.41s
Iter 0: wasserstein=1.166635, edge=0.001071, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988369, edge=0.001038, neigh=3.677246, align=4.029441, entropy=10.449462,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974208, edge=0.000831, neigh=3.544696, align=4.975149, entropy=9.450451,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.972043, edge=0.000812, neigh=3.321812, align=5.288458, entropy=9.130955,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.972194, edge=0.000803, neigh=3.273512, align=5.418464, entropy=8.999866,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972236, edge=0.000817, neigh=3.450360, align=5.421781, entropy=8.996233,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972091, edge=0.000831, neigh=3.596647, align=5.403747, entropy=9.014220,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971691, edge=0.000837, neigh=3.713688, align=5.390801, entropy=9.027163,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.970813, edge=0.000843, neigh=3.823978, align=5.383098, entropy=9.034866,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970341, edge=0.000846, neigh=3.931347, align=5.379643, entropy=9.038124,s=1.000000, s_hat=1.000000
Time for optimization: 51.66s
Test results:
Top-1: 0.445
Top-10: 0.793
Top-30: 0.878
Top-50: 0.899
Top-100: 0.922
MRR: 0.568
Run 4/10
Time for edge perturbation: 0.095s
Time for attribute perturbation: 0.172s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.85s
Iter 0: wasserstein=1.167157, edge=0.001070, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988286, edge=0.001034, neigh=3.655468, align=4.036392, entropy=10.440599,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974199, edge=0.000827, neigh=3.555996, align=4.978184, entropy=9.446329,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.972037, edge=0.000817, neigh=3.370897, align=5.297644, entropy=9.121373,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.972215, edge=0.000803, neigh=3.328276, align=5.428829, entropy=8.989439,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972376, edge=0.000822, neigh=3.497625, align=5.427295, entropy=8.990706,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972189, edge=0.000833, neigh=3.653393, align=5.409941, entropy=9.008025,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971621, edge=0.000840, neigh=3.789270, align=5.396983, entropy=9.020981,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.970950, edge=0.000844, neigh=3.892255, align=5.390595, entropy=9.027368,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970477, edge=0.000850, neigh=3.985124, align=5.385265, entropy=9.032629,s=1.000000, s_hat=1.000000
Time for optimization: 48.63s
Test results:
Top-1: 0.448
Top-10: 0.803
Top-30: 0.880
Top-50: 0.895
Top-100: 0.930
MRR: 0.572
Run 5/10
Time for edge perturbation: 0.078s
Time for attribute perturbation: 0.125s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 15.24s
Iter 0: wasserstein=1.166886, edge=0.001072, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988444, edge=0.001034, neigh=3.673673, align=4.041710, entropy=10.436837,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974569, edge=0.000839, neigh=3.504296, align=4.976306, entropy=9.449888,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.972026, edge=0.000820, neigh=3.330055, align=5.293100, entropy=9.126365,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.971948, edge=0.000803, neigh=3.270270, align=5.432245, entropy=8.986082,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.971813, edge=0.000818, neigh=3.424574, align=5.435402, entropy=8.982603,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.971693, edge=0.000829, neigh=3.569038, align=5.419300, entropy=8.998667,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971306, edge=0.000836, neigh=3.661124, align=5.404582, entropy=9.013382,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.970585, edge=0.000844, neigh=3.763625, align=5.395744, entropy=9.022219,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970051, edge=0.000850, neigh=3.883498, align=5.391002, entropy=9.026707,s=1.000000, s_hat=1.000000
Time for optimization: 20.76s
Test results:
Top-1: 0.449
Top-10: 0.797
Top-30: 0.880
Top-50: 0.912
Top-100: 0.931
MRR: 0.573
Run 6/10
Time for edge perturbation: 0.014s
Time for attribute perturbation: 0.089s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 6.06s
Iter 0: wasserstein=1.167046, edge=0.001071, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988664, edge=0.001032, neigh=3.658042, align=4.037132, entropy=10.440214,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974511, edge=0.000838, neigh=3.555827, align=4.982851, entropy=9.442094,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.972379, edge=0.000823, neigh=3.339147, align=5.285668, entropy=9.133326,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.972560, edge=0.000810, neigh=3.293648, align=5.420298, entropy=8.997961,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972394, edge=0.000825, neigh=3.463932, align=5.421526, entropy=8.996468,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972104, edge=0.000836, neigh=3.617453, align=5.406553, entropy=9.011413,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971530, edge=0.000842, neigh=3.752003, align=5.394240, entropy=9.023724,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.970792, edge=0.000846, neigh=3.857110, align=5.386370, entropy=9.031593,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970328, edge=0.000852, neigh=3.943564, align=5.381200, entropy=9.036535,s=1.000000, s_hat=1.000000
Time for optimization: 12.49s
Test results:
Top-1: 0.421
Top-10: 0.801
Top-30: 0.869
Top-50: 0.894
Top-100: 0.922
MRR: 0.547
Run 7/10
Time for edge perturbation: 0.044s
Time for attribute perturbation: 0.111s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 4.76s
Iter 0: wasserstein=1.167750, edge=0.001073, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989201, edge=0.001039, neigh=3.662733, align=4.044041, entropy=10.432957,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974754, edge=0.000828, neigh=3.607944, align=4.992478, entropy=9.432692,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.972470, edge=0.000813, neigh=3.458165, align=5.293329, entropy=9.126843,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.972717, edge=0.000801, neigh=3.349349, align=5.411279, entropy=9.007238,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972879, edge=0.000808, neigh=3.330901, align=5.481105, entropy=8.936923,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972652, edge=0.000819, neigh=3.524196, align=5.477473, entropy=8.940495,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972154, edge=0.000828, neigh=3.631275, align=5.464885, entropy=8.953080,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971377, edge=0.000836, neigh=3.739759, align=5.455922, entropy=8.962041,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970884, edge=0.000845, neigh=3.831564, align=5.449265, entropy=8.968601,s=1.000000, s_hat=1.000000
Time for optimization: 11.58s
Test results:
Top-1: 0.455
Top-10: 0.802
Top-30: 0.885
Top-50: 0.920
Top-100: 0.937
MRR: 0.573
Run 8/10
Time for edge perturbation: 0.048s
Time for attribute perturbation: 0.134s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 5.63s
Iter 0: wasserstein=1.166800, edge=0.001072, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988263, edge=0.001035, neigh=3.624261, align=4.039124, entropy=10.437400,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974100, edge=0.000829, neigh=3.587727, align=4.987393, entropy=9.438391,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.971706, edge=0.000815, neigh=3.387339, align=5.290456, entropy=9.129313,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.971682, edge=0.000800, neigh=3.333747, align=5.426546, entropy=8.991855,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.971604, edge=0.000817, neigh=3.490349, align=5.429420, entropy=8.988655,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.971412, edge=0.000829, neigh=3.611072, align=5.415334, entropy=9.002638,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971056, edge=0.000838, neigh=3.742613, align=5.405328, entropy=9.012636,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.970284, edge=0.000844, neigh=3.847034, align=5.397560, entropy=9.020404,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.969722, edge=0.000847, neigh=3.944619, align=5.391730, entropy=9.025857,s=1.000000, s_hat=1.000000
Time for optimization: 10.87s
Test results:
Top-1: 0.447
Top-10: 0.800
Top-30: 0.872
Top-50: 0.902
Top-100: 0.933
MRR: 0.568
Run 9/10
Time for edge perturbation: 0.086s
Time for attribute perturbation: 0.168s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 17.67s
Iter 0: wasserstein=1.166588, edge=0.001072, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.987729, edge=0.001032, neigh=3.672554, align=4.048721, entropy=10.428413,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.973893, edge=0.000830, neigh=3.586203, align=4.993089, entropy=9.432843,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.971432, edge=0.000815, neigh=3.347768, align=5.302187, entropy=9.117427,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.971349, edge=0.000805, neigh=3.279089, align=5.434452, entropy=8.983914,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.971358, edge=0.000810, neigh=3.268390, align=5.504375, entropy=8.913654,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.971140, edge=0.000819, neigh=3.457667, align=5.500178, entropy=8.917790,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.970505, edge=0.000825, neigh=3.609070, align=5.485735, entropy=8.932229,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.969833, edge=0.000832, neigh=3.750936, align=5.476429, entropy=8.941534,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.969422, edge=0.000838, neigh=3.876980, align=5.469660, entropy=8.948063,s=1.000000, s_hat=1.000000
Time for optimization: 28.59s
Test results:
Top-1: 0.423
Top-10: 0.801
Top-30: 0.876
Top-50: 0.905
Top-100: 0.932
MRR: 0.557
Run 10/10
Time for edge perturbation: 0.094s
Time for attribute perturbation: 0.156s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 11.44s
Iter 0: wasserstein=1.167337, edge=0.001071, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988675, edge=0.001038, neigh=3.696960, align=4.059416, entropy=10.418632,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974925, edge=0.000831, neigh=3.618418, align=4.985736, entropy=9.439010,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.972844, edge=0.000817, neigh=3.414730, align=5.287300, entropy=9.131783,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.972841, edge=0.000806, neigh=3.312221, align=5.418393, entropy=8.999842,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972911, edge=0.000823, neigh=3.475721, align=5.413824, entropy=9.004212,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972659, edge=0.000834, neigh=3.615387, align=5.398273, entropy=9.019697,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972037, edge=0.000840, neigh=3.760513, align=5.386217, entropy=9.031747,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971422, edge=0.000846, neigh=3.854029, align=5.380397, entropy=9.037567,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970989, edge=0.000851, neigh=3.953420, align=5.376057, entropy=9.041764,s=1.000000, s_hat=1.000000
Time for optimization: 28.97s
Test results:
Top-1: 0.465
Top-10: 0.798
Top-30: 0.866
Top-50: 0.895
Top-100: 0.930
MRR: 0.581
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.114s
Time for attribute perturbation: 0.151s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 17.49s
Iter 0: wasserstein=1.165400, edge=0.000950, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990830, edge=0.000915, neigh=3.475917, align=3.929379, entropy=10.549583,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976820, edge=0.000748, neigh=3.421657, align=4.883782, entropy=9.542030,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974339, edge=0.000725, neigh=3.244422, align=5.217817, entropy=9.201827,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974083, edge=0.000712, neigh=3.206912, align=5.366252, entropy=9.052098,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973968, edge=0.000717, neigh=3.173700, align=5.443589, entropy=8.974406,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973750, edge=0.000726, neigh=3.322335, align=5.439114, entropy=8.978852,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973256, edge=0.000733, neigh=3.440142, align=5.423955, entropy=8.994009,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972552, edge=0.000739, neigh=3.542934, align=5.412203, entropy=9.005761,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972079, edge=0.000743, neigh=3.648754, align=5.404692, entropy=9.013120,s=1.000000, s_hat=1.000000
Time for optimization: 31.74s
Test results:
Top-1: 0.380
Top-10: 0.766
Top-30: 0.864
Top-50: 0.888
Top-100: 0.921
MRR: 0.516
Run 2/10
Time for edge perturbation: 0.017s
Time for attribute perturbation: 0.122s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 19.45s
Iter 0: wasserstein=1.165051, edge=0.000952, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989508, edge=0.000915, neigh=3.499564, align=3.935817, entropy=10.541223,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.975444, edge=0.000753, neigh=3.443284, align=4.895370, entropy=9.529874,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973177, edge=0.000737, neigh=3.238646, align=5.208123, entropy=9.211133,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973073, edge=0.000726, neigh=3.173790, align=5.354572, entropy=9.063732,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973201, edge=0.000726, neigh=3.157780, align=5.430772, entropy=8.987242,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973015, edge=0.000732, neigh=3.312707, align=5.427069, entropy=8.990898,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972456, edge=0.000739, neigh=3.446320, align=5.415426, entropy=9.002538,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971666, edge=0.000744, neigh=3.596563, align=5.407329, entropy=9.010635,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971236, edge=0.000747, neigh=3.703802, align=5.403223, entropy=9.014377,s=1.000000, s_hat=1.000000
Time for optimization: 33.09s
Test results:
Top-1: 0.409
Top-10: 0.789
Top-30: 0.867
Top-50: 0.896
Top-100: 0.916
MRR: 0.535
Run 3/10
Time for edge perturbation: 0.047s
Time for attribute perturbation: 0.090s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 22.68s
Iter 0: wasserstein=1.165479, edge=0.000952, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990347, edge=0.000919, neigh=3.499664, align=3.934391, entropy=10.542588,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976391, edge=0.000752, neigh=3.480084, align=4.884547, entropy=9.540955,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973984, edge=0.000731, neigh=3.235193, align=5.211458, entropy=9.208286,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973989, edge=0.000720, neigh=3.175946, align=5.364079, entropy=9.054214,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973914, edge=0.000723, neigh=3.154792, align=5.445429, entropy=8.972559,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973626, edge=0.000730, neigh=3.323462, align=5.440788, entropy=8.977177,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973139, edge=0.000738, neigh=3.459435, align=5.431212, entropy=8.986752,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972400, edge=0.000742, neigh=3.603476, align=5.424304, entropy=8.993660,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971927, edge=0.000744, neigh=3.718878, align=5.418428, entropy=8.999290,s=1.000000, s_hat=1.000000
Time for optimization: 29.98s
Test results:
Top-1: 0.404
Top-10: 0.785
Top-30: 0.864
Top-50: 0.888
Top-100: 0.917
MRR: 0.529
Run 4/10
Time for edge perturbation: 0.112s
Time for attribute perturbation: 0.158s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 15.94s
Iter 0: wasserstein=1.166130, edge=0.000952, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990686, edge=0.000917, neigh=3.518915, align=3.940319, entropy=10.536207,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976745, edge=0.000760, neigh=3.383762, align=4.901014, entropy=9.524649,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974336, edge=0.000740, neigh=3.152631, align=5.225352, entropy=9.194454,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974483, edge=0.000724, neigh=3.130483, align=5.369011, entropy=9.049360,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974368, edge=0.000736, neigh=3.280681, align=5.372767, entropy=9.045242,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974171, edge=0.000744, neigh=3.394412, align=5.359620, entropy=9.058346,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973718, edge=0.000753, neigh=3.506871, align=5.348430, entropy=9.069534,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972934, edge=0.000755, neigh=3.637913, align=5.342196, entropy=9.075767,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972392, edge=0.000756, neigh=3.751525, align=5.340005, entropy=9.077833,s=1.000000, s_hat=1.000000
Time for optimization: 29.46s
Test results:
Top-1: 0.396
Top-10: 0.780
Top-30: 0.856
Top-50: 0.876
Top-100: 0.913
MRR: 0.526
Run 5/10
Time for edge perturbation: 0.046s
Time for attribute perturbation: 0.122s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 18.66s
Iter 0: wasserstein=1.165606, edge=0.000952, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990331, edge=0.000913, neigh=3.507196, align=3.937172, entropy=10.539454,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976350, edge=0.000753, neigh=3.393435, align=4.896098, entropy=9.529185,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974059, edge=0.000732, neigh=3.200382, align=5.226765, entropy=9.192610,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974202, edge=0.000719, neigh=3.137968, align=5.368344, entropy=9.049909,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974166, edge=0.000731, neigh=3.252395, align=5.373407, entropy=9.044580,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973741, edge=0.000740, neigh=3.356541, align=5.356416, entropy=9.061549,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973397, edge=0.000747, neigh=3.487960, align=5.344230, entropy=9.073734,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972556, edge=0.000751, neigh=3.613488, align=5.337412, entropy=9.080551,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971987, edge=0.000754, neigh=3.720215, align=5.333453, entropy=9.084363,s=1.000000, s_hat=1.000000
Time for optimization: 32.60s
Test results:
Top-1: 0.388
Top-10: 0.762
Top-30: 0.854
Top-50: 0.879
Top-100: 0.899
MRR: 0.515
Run 6/10
Time for edge perturbation: 0.039s
Time for attribute perturbation: 0.143s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 18.49s
Iter 0: wasserstein=1.164863, edge=0.000952, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989963, edge=0.000918, neigh=3.480958, align=3.915656, entropy=10.561251,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.975872, edge=0.000754, neigh=3.390057, align=4.883597, entropy=9.541908,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973442, edge=0.000731, neigh=3.178492, align=5.227768, entropy=9.191528,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973055, edge=0.000715, neigh=3.195780, align=5.377916, entropy=9.040284,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972976, edge=0.000729, neigh=3.345614, align=5.375822, entropy=9.042159,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972839, edge=0.000740, neigh=3.433410, align=5.356448, entropy=9.061517,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972426, edge=0.000747, neigh=3.535394, align=5.339007, entropy=9.078957,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971780, edge=0.000752, neigh=3.649509, align=5.328606, entropy=9.089357,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971252, edge=0.000756, neigh=3.737707, align=5.320856, entropy=9.097033,s=1.000000, s_hat=1.000000
Time for optimization: 34.18s
Test results:
Top-1: 0.392
Top-10: 0.770
Top-30: 0.851
Top-50: 0.877
Top-100: 0.911
MRR: 0.521
Run 7/10
Time for edge perturbation: 0.096s
Time for attribute perturbation: 0.157s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 16.96s
Iter 0: wasserstein=1.165181, edge=0.000951, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990306, edge=0.000914, neigh=3.521384, align=3.918826, entropy=10.558954,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976253, edge=0.000753, neigh=3.373153, align=4.877312, entropy=9.548443,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974166, edge=0.000731, neigh=3.229214, align=5.206224, entropy=9.214457,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974008, edge=0.000718, neigh=3.197127, align=5.347744, entropy=9.070832,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974035, edge=0.000730, neigh=3.332680, align=5.349883, entropy=9.068206,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973815, edge=0.000740, neigh=3.456945, align=5.335361, entropy=9.082611,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973440, edge=0.000748, neigh=3.599584, align=5.325947, entropy=9.092018,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972584, edge=0.000751, neigh=3.713114, align=5.319311, entropy=9.098653,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972076, edge=0.000753, neigh=3.803453, align=5.313002, entropy=9.104856,s=1.000000, s_hat=1.000000
Time for optimization: 28.21s
Test results:
Top-1: 0.406
Top-10: 0.759
Top-30: 0.846
Top-50: 0.873
Top-100: 0.909
MRR: 0.528
Run 8/10
Time for edge perturbation: 0.117s
Time for attribute perturbation: 0.154s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 17.15s
Iter 0: wasserstein=1.165541, edge=0.000951, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990718, edge=0.000919, neigh=3.498782, align=3.928583, entropy=10.548045,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976737, edge=0.000753, neigh=3.386444, align=4.887850, entropy=9.537951,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974424, edge=0.000728, neigh=3.178812, align=5.225373, entropy=9.194021,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974251, edge=0.000711, neigh=3.152118, align=5.374801, entropy=9.043456,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974268, edge=0.000717, neigh=3.102752, align=5.451295, entropy=8.966693,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974101, edge=0.000725, neigh=3.253389, align=5.444679, entropy=8.973287,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973559, edge=0.000731, neigh=3.372785, align=5.431233, entropy=8.986731,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972957, edge=0.000737, neigh=3.492639, align=5.421040, entropy=8.996924,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972603, edge=0.000741, neigh=3.604617, align=5.413026, entropy=9.004913,s=1.000000, s_hat=1.000000
Time for optimization: 33.04s
Test results:
Top-1: 0.413
Top-10: 0.782
Top-30: 0.867
Top-50: 0.894
Top-100: 0.922
MRR: 0.536
Run 9/10
Time for edge perturbation: 0.062s
Time for attribute perturbation: 0.139s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 19.52s
Iter 0: wasserstein=1.165619, edge=0.000953, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991107, edge=0.000918, neigh=3.493790, align=3.924085, entropy=10.553260,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976920, edge=0.000757, neigh=3.328435, align=4.885278, entropy=9.540071,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974680, edge=0.000735, neigh=3.139046, align=5.225728, entropy=9.194639,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974555, edge=0.000723, neigh=3.105242, align=5.370666, entropy=9.047782,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974659, edge=0.000726, neigh=3.076787, align=5.447617, entropy=8.970407,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974472, edge=0.000731, neigh=3.214542, align=5.441925, entropy=8.976043,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973924, edge=0.000739, neigh=3.336005, align=5.428193, entropy=8.989771,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973171, edge=0.000744, neigh=3.456831, align=5.417048, entropy=9.000916,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972572, edge=0.000749, neigh=3.574610, align=5.410225, entropy=9.007595,s=1.000000, s_hat=1.000000
Time for optimization: 33.49s
Test results:
Top-1: 0.375
Top-10: 0.779
Top-30: 0.851
Top-50: 0.878
Top-100: 0.916
MRR: 0.506
Run 10/10
Time for edge perturbation: 0.093s
Time for attribute perturbation: 0.141s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 15.49s
Iter 0: wasserstein=1.165731, edge=0.000951, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990310, edge=0.000916, neigh=3.501828, align=3.945997, entropy=10.530491,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976464, edge=0.000751, neigh=3.357274, align=4.898748, entropy=9.526526,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974099, edge=0.000728, neigh=3.130365, align=5.237624, entropy=9.181708,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973938, edge=0.000713, neigh=3.131468, align=5.376032, entropy=9.042232,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973852, edge=0.000725, neigh=3.282211, align=5.373576, entropy=9.044462,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973689, edge=0.000737, neigh=3.400621, align=5.355378, entropy=9.062592,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973315, edge=0.000744, neigh=3.519323, align=5.341571, entropy=9.076393,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972568, edge=0.000750, neigh=3.644853, align=5.333131, entropy=9.084833,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971973, edge=0.000753, neigh=3.752665, align=5.328159, entropy=9.089710,s=1.000000, s_hat=1.000000
Time for optimization: 27.10s
Test results:
Top-1: 0.401
Top-10: 0.766
Top-30: 0.851
Top-50: 0.873
Top-100: 0.906
MRR: 0.524
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.106s
Time for attribute perturbation: 0.145s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 23.16s
Iter 0: wasserstein=1.163860, edge=0.000853, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991613, edge=0.000819, neigh=3.370953, align=3.830631, entropy=10.646624,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977561, edge=0.000692, neigh=3.278182, align=4.783419, entropy=9.641956,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975042, edge=0.000666, neigh=3.068088, align=5.145909, entropy=9.274117,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974850, edge=0.000650, neigh=3.092176, align=5.308061, entropy=9.110367,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974701, edge=0.000658, neigh=3.244039, align=5.309518, entropy=9.108524,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974583, edge=0.000668, neigh=3.340231, align=5.293318, entropy=9.124651,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973985, edge=0.000674, neigh=3.461273, align=5.281304, entropy=9.136660,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973200, edge=0.000676, neigh=3.585907, align=5.275706, entropy=9.142258,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972732, edge=0.000677, neigh=3.693218, align=5.272488, entropy=9.145452,s=1.000000, s_hat=1.000000
Time for optimization: 28.59s
Test results:
Top-1: 0.346
Top-10: 0.744
Top-30: 0.828
Top-50: 0.856
Top-100: 0.895
MRR: 0.479
Run 2/10
Time for edge perturbation: 0.107s
Time for attribute perturbation: 0.183s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 16.79s
Iter 0: wasserstein=1.164152, edge=0.000854, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991944, edge=0.000818, neigh=3.385846, align=3.836768, entropy=10.639503,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978111, edge=0.000688, neigh=3.251053, align=4.798355, entropy=9.627084,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975690, edge=0.000662, neigh=3.036172, align=5.154052, entropy=9.265411,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975431, edge=0.000649, neigh=3.012221, align=5.311293, entropy=9.106864,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975374, edge=0.000652, neigh=2.964760, align=5.395400, entropy=9.022576,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975081, edge=0.000659, neigh=3.138148, align=5.389221, entropy=9.028744,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974475, edge=0.000663, neigh=3.293120, align=5.374484, entropy=9.043480,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973879, edge=0.000668, neigh=3.423884, align=5.366985, entropy=9.050978,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973344, edge=0.000670, neigh=3.521469, align=5.363421, entropy=9.054438,s=1.000000, s_hat=1.000000
Time for optimization: 32.49s
Test results:
Top-1: 0.330
Top-10: 0.753
Top-30: 0.838
Top-50: 0.866
Top-100: 0.898
MRR: 0.471
Run 3/10
Time for edge perturbation: 0.048s
Time for attribute perturbation: 0.111s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 18.64s
Iter 0: wasserstein=1.164026, edge=0.000853, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990793, edge=0.000820, neigh=3.392924, align=3.841522, entropy=10.635063,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977146, edge=0.000690, neigh=3.247204, align=4.783492, entropy=9.641975,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974817, edge=0.000668, neigh=3.067105, align=5.133684, entropy=9.286823,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974712, edge=0.000655, neigh=3.050299, align=5.288149, entropy=9.130405,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974638, edge=0.000656, neigh=3.023932, align=5.377161, entropy=9.040885,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974322, edge=0.000663, neigh=3.183494, align=5.375704, entropy=9.042265,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973858, edge=0.000667, neigh=3.302686, align=5.364418, entropy=9.053547,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973166, edge=0.000671, neigh=3.414655, align=5.355766, entropy=9.062198,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972779, edge=0.000674, neigh=3.538023, align=5.349010, entropy=9.068750,s=1.000000, s_hat=1.000000
Time for optimization: 39.92s
Test results:
Top-1: 0.368
Top-10: 0.758
Top-30: 0.841
Top-50: 0.866
Top-100: 0.903
MRR: 0.492
Run 4/10
Time for edge perturbation: 0.138s
Time for attribute perturbation: 0.212s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.60s
Iter 0: wasserstein=1.164855, edge=0.000853, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992678, edge=0.000821, neigh=3.382777, align=3.833546, entropy=10.643168,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978723, edge=0.000684, neigh=3.257703, align=4.793165, entropy=9.632157,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976509, edge=0.000660, neigh=3.028754, align=5.138966, entropy=9.281522,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976342, edge=0.000644, neigh=3.020332, align=5.298945, entropy=9.119607,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976088, edge=0.000644, neigh=3.001119, align=5.384010, entropy=9.034035,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975811, edge=0.000653, neigh=3.152666, align=5.376664, entropy=9.041305,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975365, edge=0.000659, neigh=3.262702, align=5.362051, entropy=9.055913,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974809, edge=0.000664, neigh=3.373604, align=5.353524, entropy=9.064439,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974342, edge=0.000667, neigh=3.481980, align=5.346618, entropy=9.071191,s=1.000000, s_hat=1.000000
Time for optimization: 51.64s
Test results:
Top-1: 0.366
Top-10: 0.752
Top-30: 0.849
Top-50: 0.873
Top-100: 0.901
MRR: 0.495
Run 5/10
Time for edge perturbation: 0.119s
Time for attribute perturbation: 0.160s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.97s
Iter 0: wasserstein=1.164086, edge=0.000853, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991331, edge=0.000815, neigh=3.342140, align=3.853410, entropy=10.623855,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977300, edge=0.000679, neigh=3.263612, align=4.818268, entropy=9.606919,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974960, edge=0.000659, neigh=3.031645, align=5.159455, entropy=9.259739,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974883, edge=0.000648, neigh=2.986483, align=5.307541, entropy=9.110689,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974946, edge=0.000650, neigh=2.956853, align=5.387972, entropy=9.030031,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974785, edge=0.000657, neigh=3.091718, align=5.379784, entropy=9.038182,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974271, edge=0.000663, neigh=3.211608, align=5.364191, entropy=9.053773,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973475, edge=0.000666, neigh=3.333720, align=5.355022, entropy=9.062941,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972952, edge=0.000668, neigh=3.450692, align=5.352189, entropy=9.065640,s=1.000000, s_hat=1.000000
Time for optimization: 48.77s
Test results:
Top-1: 0.351
Top-10: 0.747
Top-30: 0.839
Top-50: 0.868
Top-100: 0.911
MRR: 0.482
Run 6/10
Time for edge perturbation: 0.118s
Time for attribute perturbation: 0.181s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.05s
Iter 0: wasserstein=1.163993, edge=0.000853, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991545, edge=0.000817, neigh=3.379699, align=3.840607, entropy=10.635591,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977797, edge=0.000681, neigh=3.270915, align=4.813032, entropy=9.612602,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975302, edge=0.000663, neigh=3.047103, align=5.145701, entropy=9.274139,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975030, edge=0.000651, neigh=2.997275, align=5.292740, entropy=9.125561,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975012, edge=0.000654, neigh=2.959996, align=5.371196, entropy=9.046795,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974811, edge=0.000661, neigh=3.126207, align=5.364736, entropy=9.053230,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974214, edge=0.000664, neigh=3.257027, align=5.351653, entropy=9.066311,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973464, edge=0.000669, neigh=3.369422, align=5.342144, entropy=9.075819,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972966, edge=0.000673, neigh=3.493634, align=5.335777, entropy=9.081897,s=1.000000, s_hat=1.000000
Time for optimization: 52.85s
Test results:
Top-1: 0.362
Top-10: 0.760
Top-30: 0.839
Top-50: 0.867
Top-100: 0.904
MRR: 0.490
Run 7/10
Time for edge perturbation: 0.151s
Time for attribute perturbation: 0.239s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 35.10s
Iter 0: wasserstein=1.164306, edge=0.000853, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992207, edge=0.000820, neigh=3.388028, align=3.844438, entropy=10.633211,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978096, edge=0.000684, neigh=3.301474, align=4.799413, entropy=9.626667,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975738, edge=0.000663, neigh=3.053380, align=5.129476, entropy=9.290654,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975455, edge=0.000650, neigh=3.044619, align=5.286465, entropy=9.131875,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975509, edge=0.000651, neigh=2.982867, align=5.377072, entropy=9.040931,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975262, edge=0.000657, neigh=3.148577, align=5.375024, entropy=9.042943,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974837, edge=0.000661, neigh=3.298259, align=5.365349, entropy=9.052615,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974127, edge=0.000664, neigh=3.424237, align=5.358676, entropy=9.059288,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973492, edge=0.000666, neigh=3.530684, align=5.353901, entropy=9.063816,s=1.000000, s_hat=1.000000
Time for optimization: 52.20s
Test results:
Top-1: 0.351
Top-10: 0.735
Top-30: 0.839
Top-50: 0.868
Top-100: 0.899
MRR: 0.485
Run 8/10
Time for edge perturbation: 0.148s
Time for attribute perturbation: 0.162s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 28.55s
Iter 0: wasserstein=1.163977, edge=0.000852, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991659, edge=0.000816, neigh=3.392605, align=3.844897, entropy=10.632456,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977679, edge=0.000683, neigh=3.314791, align=4.795936, entropy=9.629523,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975253, edge=0.000663, neigh=3.101828, align=5.131239, entropy=9.288284,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974979, edge=0.000649, neigh=3.062372, align=5.298061, entropy=9.120091,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975195, edge=0.000651, neigh=3.013531, align=5.385533, entropy=9.032443,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975007, edge=0.000660, neigh=3.159368, align=5.380618, entropy=9.037347,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974454, edge=0.000663, neigh=3.294755, align=5.368161, entropy=9.049803,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973702, edge=0.000665, neigh=3.420865, align=5.358459, entropy=9.059505,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973055, edge=0.000668, neigh=3.538012, align=5.352052, entropy=9.065592,s=1.000000, s_hat=1.000000
Time for optimization: 34.55s
Test results:
Top-1: 0.359
Top-10: 0.751
Top-30: 0.841
Top-50: 0.867
Top-100: 0.912
MRR: 0.493
Run 9/10
Time for edge perturbation: 0.089s
Time for attribute perturbation: 0.157s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 32.53s
Iter 0: wasserstein=1.164046, edge=0.000854, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991529, edge=0.000818, neigh=3.349214, align=3.832350, entropy=10.644038,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977649, edge=0.000685, neigh=3.258202, align=4.787919, entropy=9.637257,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975307, edge=0.000666, neigh=3.030668, align=5.132384, entropy=9.286882,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975010, edge=0.000652, neigh=3.014625, align=5.291650, entropy=9.126655,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974810, edge=0.000659, neigh=3.192279, align=5.299557, entropy=9.118440,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974675, edge=0.000666, neigh=3.312616, align=5.285786, entropy=9.132180,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974353, edge=0.000671, neigh=3.413040, align=5.275482, entropy=9.142482,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973585, edge=0.000674, neigh=3.522328, align=5.268543, entropy=9.149421,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972892, edge=0.000676, neigh=3.623466, align=5.264024, entropy=9.153845,s=1.000000, s_hat=1.000000
Time for optimization: 50.88s
Test results:
Top-1: 0.375
Top-10: 0.761
Top-30: 0.839
Top-50: 0.870
Top-100: 0.906
MRR: 0.502
Run 10/10
Time for edge perturbation: 0.094s
Time for attribute perturbation: 0.153s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 35.96s
Iter 0: wasserstein=1.163625, edge=0.000853, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991486, edge=0.000822, neigh=3.374797, align=3.834165, entropy=10.642961,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977607, edge=0.000690, neigh=3.235237, align=4.782582, entropy=9.643120,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975188, edge=0.000667, neigh=3.009043, align=5.134188, entropy=9.286266,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974802, edge=0.000652, neigh=2.976508, align=5.286026, entropy=9.132414,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974842, edge=0.000653, neigh=2.952681, align=5.369115, entropy=9.048887,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974516, edge=0.000657, neigh=3.099568, align=5.366359, entropy=9.051607,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974160, edge=0.000663, neigh=3.224750, align=5.353974, entropy=9.063991,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973387, edge=0.000665, neigh=3.356233, align=5.344538, entropy=9.073425,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972873, edge=0.000669, neigh=3.450417, align=5.338378, entropy=9.079145,s=1.000000, s_hat=1.000000
Time for optimization: 49.53s
Test results:
Top-1: 0.365
Top-10: 0.747
Top-30: 0.839
Top-50: 0.873
Top-100: 0.909
MRR: 0.495
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.104s
Time for attribute perturbation: 0.249s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 35.80s
Iter 0: wasserstein=1.163030, edge=0.000774, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992941, edge=0.000742, neigh=3.283498, align=3.765670, entropy=10.711417,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979319, edge=0.000634, neigh=3.152544, align=4.700535, entropy=9.724727,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976650, edge=0.000615, neigh=2.914409, align=5.057084, entropy=9.362519,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976200, edge=0.000600, neigh=2.914782, align=5.210462, entropy=9.207894,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976129, edge=0.000608, neigh=3.015681, align=5.212747, entropy=9.205274,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976069, edge=0.000614, neigh=3.119316, align=5.199402, entropy=9.218565,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975633, edge=0.000619, neigh=3.230717, align=5.187204, entropy=9.230760,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974744, edge=0.000620, neigh=3.361996, align=5.180148, entropy=9.237816,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974203, edge=0.000621, neigh=3.490653, align=5.176178, entropy=9.241764,s=1.000000, s_hat=1.000000
Time for optimization: 50.09s
Test results:
Top-1: 0.343
Top-10: 0.724
Top-30: 0.822
Top-50: 0.845
Top-100: 0.893
MRR: 0.467
Run 2/10
Time for edge perturbation: 0.168s
Time for attribute perturbation: 0.167s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.12s
Iter 0: wasserstein=1.162413, edge=0.000774, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992481, edge=0.000743, neigh=3.242357, align=3.746585, entropy=10.729829,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978541, edge=0.000631, neigh=3.165691, align=4.684550, entropy=9.740870,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976103, edge=0.000610, neigh=2.918752, align=5.051203, entropy=9.368964,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975567, edge=0.000595, neigh=2.917962, align=5.218473, entropy=9.199878,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975579, edge=0.000595, neigh=2.927921, align=5.311669, entropy=9.106326,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975394, edge=0.000602, neigh=3.085262, align=5.304605, entropy=9.113360,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974882, edge=0.000607, neigh=3.194855, align=5.290892, entropy=9.127072,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974155, edge=0.000609, neigh=3.305472, align=5.283879, entropy=9.134085,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973465, edge=0.000611, neigh=3.430608, align=5.277736, entropy=9.140018,s=1.000000, s_hat=1.000000
Time for optimization: 52.88s
Test results:
Top-1: 0.330
Top-10: 0.741
Top-30: 0.825
Top-50: 0.856
Top-100: 0.901
MRR: 0.459
Run 3/10
Time for edge perturbation: 0.142s
Time for attribute perturbation: 0.206s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 39.45s
Iter 0: wasserstein=1.162626, edge=0.000774, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992510, edge=0.000742, neigh=3.272793, align=3.772634, entropy=10.704122,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978637, edge=0.000636, neigh=3.158860, align=4.717953, entropy=9.707890,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976499, edge=0.000614, neigh=2.915990, align=5.056450, entropy=9.363785,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976126, edge=0.000601, neigh=2.895392, align=5.210467, entropy=9.207923,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976156, edge=0.000598, neigh=2.902456, align=5.308065, entropy=9.109933,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975876, edge=0.000605, neigh=3.063889, align=5.306552, entropy=9.111414,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975229, edge=0.000609, neigh=3.196013, align=5.294022, entropy=9.123942,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974455, edge=0.000611, neigh=3.324133, align=5.286010, entropy=9.131953,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973969, edge=0.000612, neigh=3.432927, align=5.280685, entropy=9.137240,s=1.000000, s_hat=1.000000
Time for optimization: 56.50s
Test results:
Top-1: 0.344
Top-10: 0.751
Top-30: 0.842
Top-50: 0.863
Top-100: 0.897
MRR: 0.479
Run 4/10
Time for edge perturbation: 0.148s
Time for attribute perturbation: 0.244s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 39.86s
Iter 0: wasserstein=1.162547, edge=0.000774, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992867, edge=0.000744, neigh=3.261749, align=3.744729, entropy=10.732003,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978825, edge=0.000635, neigh=3.153574, align=4.693653, entropy=9.731699,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976245, edge=0.000612, neigh=2.979027, align=5.043764, entropy=9.375536,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975833, edge=0.000599, neigh=2.983579, align=5.221178, entropy=9.197092,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975749, edge=0.000600, neigh=2.924856, align=5.318235, entropy=9.099753,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975650, edge=0.000598, neigh=2.904161, align=5.377580, entropy=9.040386,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975168, edge=0.000601, neigh=3.053936, align=5.373250, entropy=9.044714,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974442, edge=0.000605, neigh=3.182082, align=5.362334, entropy=9.055630,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973864, edge=0.000607, neigh=3.302776, align=5.355970, entropy=9.061867,s=1.000000, s_hat=1.000000
Time for optimization: 53.89s
Test results:
Top-1: 0.334
Top-10: 0.737
Top-30: 0.819
Top-50: 0.853
Top-100: 0.888
MRR: 0.463
Run 5/10
Time for edge perturbation: 0.148s
Time for attribute perturbation: 0.160s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 40.92s
Iter 0: wasserstein=1.163366, edge=0.000774, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992851, edge=0.000739, neigh=3.278235, align=3.768665, entropy=10.707692,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978870, edge=0.000628, neigh=3.158331, align=4.729390, entropy=9.696195,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976543, edge=0.000604, neigh=2.984991, align=5.080174, entropy=9.340642,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976146, edge=0.000592, neigh=2.948947, align=5.240850, entropy=9.177627,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975905, edge=0.000591, neigh=2.934464, align=5.329649, entropy=9.088351,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975641, edge=0.000598, neigh=3.065643, align=5.324057, entropy=9.093909,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975120, edge=0.000603, neigh=3.150762, align=5.311502, entropy=9.106462,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974486, edge=0.000608, neigh=3.257767, align=5.301143, entropy=9.116821,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973936, edge=0.000609, neigh=3.378430, align=5.294404, entropy=9.123429,s=1.000000, s_hat=1.000000
Time for optimization: 54.17s
Test results:
Top-1: 0.328
Top-10: 0.730
Top-30: 0.822
Top-50: 0.854
Top-100: 0.884
MRR: 0.462
Run 6/10
Time for edge perturbation: 0.144s
Time for attribute perturbation: 0.202s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 40.28s
Iter 0: wasserstein=1.163041, edge=0.000773, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992766, edge=0.000739, neigh=3.292170, align=3.777708, entropy=10.699357,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978986, edge=0.000632, neigh=3.119503, align=4.714473, entropy=9.710988,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976329, edge=0.000609, neigh=2.927570, align=5.069465, entropy=9.351204,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975930, edge=0.000595, neigh=2.945254, align=5.225487, entropy=9.193060,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975980, edge=0.000594, neigh=2.907060, align=5.316735, entropy=9.101314,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975705, edge=0.000600, neigh=3.039033, align=5.310955, entropy=9.107014,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975332, edge=0.000605, neigh=3.146790, align=5.298913, entropy=9.119051,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974641, edge=0.000608, neigh=3.267573, align=5.289899, entropy=9.128065,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974080, edge=0.000609, neigh=3.380822, align=5.284789, entropy=9.133155,s=1.000000, s_hat=1.000000
Time for optimization: 51.47s
Test results:
Top-1: 0.318
Top-10: 0.751
Top-30: 0.831
Top-50: 0.863
Top-100: 0.896
MRR: 0.456
Run 7/10
Time for edge perturbation: 0.084s
Time for attribute perturbation: 0.392s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.32s
Iter 0: wasserstein=1.162633, edge=0.000774, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992305, edge=0.000742, neigh=3.243039, align=3.760344, entropy=10.716501,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978342, edge=0.000630, neigh=3.131184, align=4.709807, entropy=9.715468,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975838, edge=0.000609, neigh=2.904516, align=5.064852, entropy=9.354988,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975584, edge=0.000597, neigh=2.912400, align=5.222452, entropy=9.195926,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975588, edge=0.000596, neigh=2.892244, align=5.314033, entropy=9.103966,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975470, edge=0.000601, neigh=3.029241, align=5.309260, entropy=9.108706,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975014, edge=0.000606, neigh=3.142888, align=5.298957, entropy=9.119007,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974228, edge=0.000608, neigh=3.258633, align=5.292216, entropy=9.125748,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973716, edge=0.000610, neigh=3.362617, align=5.286047, entropy=9.131862,s=1.000000, s_hat=1.000000
Time for optimization: 48.54s
Test results:
Top-1: 0.320
Top-10: 0.728
Top-30: 0.819
Top-50: 0.844
Top-100: 0.885
MRR: 0.453
Run 8/10
Time for edge perturbation: 0.169s
Time for attribute perturbation: 0.376s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 35.68s
Iter 0: wasserstein=1.162597, edge=0.000774, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992302, edge=0.000740, neigh=3.265879, align=3.771894, entropy=10.705204,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978318, edge=0.000633, neigh=3.125710, align=4.708786, entropy=9.716655,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975930, edge=0.000612, neigh=2.944377, align=5.061876, entropy=9.357450,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975469, edge=0.000597, neigh=2.945166, align=5.218683, entropy=9.199539,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975514, edge=0.000597, neigh=2.906595, align=5.314276, entropy=9.103706,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975253, edge=0.000602, neigh=3.059028, align=5.311551, entropy=9.106414,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974777, edge=0.000607, neigh=3.168923, align=5.299573, entropy=9.118391,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974039, edge=0.000610, neigh=3.287636, align=5.292419, entropy=9.125545,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973566, edge=0.000611, neigh=3.391138, align=5.287018, entropy=9.130891,s=1.000000, s_hat=1.000000
Time for optimization: 50.40s
Test results:
Top-1: 0.331
Top-10: 0.728
Top-30: 0.819
Top-50: 0.846
Top-100: 0.887
MRR: 0.459
Run 9/10
Time for edge perturbation: 0.138s
Time for attribute perturbation: 0.232s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.39s
Iter 0: wasserstein=1.162599, edge=0.000774, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992187, edge=0.000743, neigh=3.292473, align=3.757207, entropy=10.720128,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978592, edge=0.000632, neigh=3.138153, align=4.703476, entropy=9.722063,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976183, edge=0.000608, neigh=2.931842, align=5.066779, entropy=9.353712,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975704, edge=0.000594, neigh=2.940028, align=5.226468, entropy=9.191926,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975742, edge=0.000594, neigh=2.918810, align=5.322871, entropy=9.095120,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975415, edge=0.000599, neigh=3.036686, align=5.321744, entropy=9.096221,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974868, edge=0.000604, neigh=3.136721, align=5.308630, entropy=9.109334,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974032, edge=0.000608, neigh=3.278245, align=5.300386, entropy=9.117578,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973595, edge=0.000609, neigh=3.407781, align=5.294970, entropy=9.122889,s=1.000000, s_hat=1.000000
Time for optimization: 51.27s
Test results:
Top-1: 0.325
Top-10: 0.718
Top-30: 0.819
Top-50: 0.850
Top-100: 0.884
MRR: 0.453
Run 10/10
Time for edge perturbation: 0.137s
Time for attribute perturbation: 0.175s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.51s
Iter 0: wasserstein=1.163213, edge=0.000775, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992889, edge=0.000740, neigh=3.267722, align=3.754839, entropy=10.721688,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979174, edge=0.000635, neigh=3.139746, align=4.702573, entropy=9.722879,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976719, edge=0.000611, neigh=2.982749, align=5.056949, entropy=9.364071,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976240, edge=0.000597, neigh=2.984143, align=5.223865, entropy=9.194760,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976328, edge=0.000596, neigh=2.949131, align=5.316541, entropy=9.101465,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976424, edge=0.000598, neigh=2.954723, align=5.364580, entropy=9.053386,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975914, edge=0.000602, neigh=3.134437, align=5.361247, entropy=9.056718,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975069, edge=0.000604, neigh=3.270441, align=5.355455, entropy=9.062509,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974559, edge=0.000605, neigh=3.373112, align=5.349941, entropy=9.067827,s=1.000000, s_hat=1.000000
Time for optimization: 50.76s
Test results:
Top-1: 0.317
Top-10: 0.722
Top-30: 0.827
Top-50: 0.863
Top-100: 0.905
MRR: 0.449
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.164s
Time for attribute perturbation: 0.266s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.17s
Iter 0: wasserstein=1.161742, edge=0.000707, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993618, edge=0.000676, neigh=3.200727, align=3.692160, entropy=10.784395,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979794, edge=0.000588, neigh=3.062532, align=4.614947, entropy=9.810433,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977572, edge=0.000566, neigh=2.842729, align=4.967521, entropy=9.452742,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977087, edge=0.000554, neigh=2.835342, align=5.139268, entropy=9.279155,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976986, edge=0.000552, neigh=2.837492, align=5.236562, entropy=9.181442,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976656, edge=0.000556, neigh=2.971254, align=5.237972, entropy=9.179994,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976163, edge=0.000559, neigh=3.085547, align=5.229795, entropy=9.188170,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975315, edge=0.000561, neigh=3.196154, align=5.221894, entropy=9.196070,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974767, edge=0.000563, neigh=3.314921, align=5.215903, entropy=9.201902,s=1.000000, s_hat=1.000000
Time for optimization: 52.12s
Test results:
Top-1: 0.308
Top-10: 0.712
Top-30: 0.810
Top-50: 0.844
Top-100: 0.886
MRR: 0.436
Run 2/10
Time for edge perturbation: 0.152s
Time for attribute perturbation: 0.196s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.19s
Iter 0: wasserstein=1.161190, edge=0.000708, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992908, edge=0.000677, neigh=3.196599, align=3.689864, entropy=10.786322,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979329, edge=0.000590, neigh=3.027181, align=4.617475, entropy=9.807832,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976949, edge=0.000568, neigh=2.818490, align=4.970546, entropy=9.449719,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976398, edge=0.000553, neigh=2.841571, align=5.140801, entropy=9.277541,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976323, edge=0.000552, neigh=2.797992, align=5.249830, entropy=9.168157,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976203, edge=0.000550, neigh=2.809742, align=5.313152, entropy=9.104813,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975550, edge=0.000553, neigh=2.941117, align=5.309103, entropy=9.108861,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974721, edge=0.000555, neigh=3.046629, align=5.302239, entropy=9.115725,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974195, edge=0.000556, neigh=3.143815, align=5.295799, entropy=9.122099,s=1.000000, s_hat=1.000000
Time for optimization: 51.68s
Test results:
Top-1: 0.301
Top-10: 0.721
Top-30: 0.823
Top-50: 0.854
Top-100: 0.891
MRR: 0.434
Run 3/10
Time for edge perturbation: 0.094s
Time for attribute perturbation: 0.178s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.39s
Iter 0: wasserstein=1.161301, edge=0.000708, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992977, edge=0.000676, neigh=3.163986, align=3.679557, entropy=10.796849,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979213, edge=0.000588, neigh=3.023568, align=4.600998, entropy=9.824582,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976823, edge=0.000567, neigh=2.825982, align=4.947593, entropy=9.471905,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976360, edge=0.000555, neigh=2.845482, align=5.116976, entropy=9.301282,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976440, edge=0.000552, neigh=2.803398, align=5.225018, entropy=9.192966,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976370, edge=0.000549, neigh=2.829600, align=5.295461, entropy=9.122504,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975835, edge=0.000551, neigh=2.944358, align=5.293019, entropy=9.124945,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975001, edge=0.000554, neigh=3.034827, align=5.284106, entropy=9.133858,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974455, edge=0.000556, neigh=3.135719, align=5.277290, entropy=9.140620,s=1.000000, s_hat=1.000000
Time for optimization: 51.61s
Test results:
Top-1: 0.293
Top-10: 0.726
Top-30: 0.822
Top-50: 0.851
Top-100: 0.882
MRR: 0.427
Run 4/10
Time for edge perturbation: 0.101s
Time for attribute perturbation: 0.149s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 34.58s
Iter 0: wasserstein=1.161330, edge=0.000708, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993439, edge=0.000677, neigh=3.168097, align=3.677454, entropy=10.800033,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979366, edge=0.000589, neigh=3.048276, align=4.615639, entropy=9.810064,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976978, edge=0.000569, neigh=2.822499, align=4.971368, entropy=9.449047,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976463, edge=0.000556, neigh=2.814544, align=5.139769, entropy=9.278598,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976319, edge=0.000552, neigh=2.823508, align=5.240821, entropy=9.177168,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976013, edge=0.000556, neigh=2.986372, align=5.239295, entropy=9.178670,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975539, edge=0.000560, neigh=3.109602, align=5.229290, entropy=9.188674,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974762, edge=0.000562, neigh=3.223264, align=5.220677, entropy=9.197287,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974194, edge=0.000563, neigh=3.348007, align=5.215276, entropy=9.202655,s=1.000000, s_hat=1.000000
Time for optimization: 48.16s
Test results:
Top-1: 0.286
Top-10: 0.717
Top-30: 0.808
Top-50: 0.840
Top-100: 0.882
MRR: 0.417
Run 5/10
Time for edge perturbation: 0.121s
Time for attribute perturbation: 0.225s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.02s
Iter 0: wasserstein=1.161915, edge=0.000708, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993661, edge=0.000677, neigh=3.183306, align=3.703999, entropy=10.772960,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979895, edge=0.000587, neigh=3.026813, align=4.635039, entropy=9.790369,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977605, edge=0.000566, neigh=2.830074, align=4.988763, entropy=9.431765,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977259, edge=0.000551, neigh=2.837569, align=5.156689, entropy=9.261831,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977195, edge=0.000550, neigh=2.833132, align=5.256564, entropy=9.161447,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976675, edge=0.000554, neigh=2.952806, align=5.258583, entropy=9.159384,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976096, edge=0.000558, neigh=3.060229, align=5.248528, entropy=9.169436,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975308, edge=0.000560, neigh=3.179647, align=5.240772, entropy=9.177192,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974735, edge=0.000562, neigh=3.305521, align=5.234599, entropy=9.183285,s=1.000000, s_hat=1.000000
Time for optimization: 50.67s
Test results:
Top-1: 0.304
Top-10: 0.723
Top-30: 0.816
Top-50: 0.855
Top-100: 0.886
MRR: 0.437
Run 6/10
Time for edge perturbation: 0.084s
Time for attribute perturbation: 0.143s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 38.53s
Iter 0: wasserstein=1.161593, edge=0.000707, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993425, edge=0.000678, neigh=3.177361, align=3.700286, entropy=10.776054,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979634, edge=0.000589, neigh=3.027700, align=4.630961, entropy=9.794339,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977016, edge=0.000570, neigh=2.813602, align=4.982017, entropy=9.438814,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976705, edge=0.000558, neigh=2.832136, align=5.137463, entropy=9.280976,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976655, edge=0.000556, neigh=2.816745, align=5.239811, entropy=9.178182,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976285, edge=0.000560, neigh=2.933024, align=5.239834, entropy=9.178131,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975751, edge=0.000564, neigh=3.050058, align=5.228575, entropy=9.189389,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975011, edge=0.000565, neigh=3.176740, align=5.219600, entropy=9.198364,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974458, edge=0.000565, neigh=3.300029, align=5.214386, entropy=9.203535,s=1.000000, s_hat=1.000000
Time for optimization: 52.27s
Test results:
Top-1: 0.296
Top-10: 0.721
Top-30: 0.817
Top-50: 0.848
Top-100: 0.893
MRR: 0.431
Run 7/10
Time for edge perturbation: 0.160s
Time for attribute perturbation: 0.198s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.33s
Iter 0: wasserstein=1.161609, edge=0.000708, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992922, edge=0.000675, neigh=3.219589, align=3.709429, entropy=10.766504,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979235, edge=0.000585, neigh=3.055307, align=4.643293, entropy=9.781972,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976807, edge=0.000562, neigh=2.813454, align=4.993548, entropy=9.426665,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976241, edge=0.000550, neigh=2.845113, align=5.156196, entropy=9.262240,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976305, edge=0.000549, neigh=2.818116, align=5.248960, entropy=9.169059,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976334, edge=0.000549, neigh=2.820700, align=5.294273, entropy=9.123694,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975805, edge=0.000551, neigh=2.940335, align=5.288175, entropy=9.129789,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974918, edge=0.000553, neigh=3.041337, align=5.280563, entropy=9.137401,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974395, edge=0.000554, neigh=3.142264, align=5.275736, entropy=9.141984,s=1.000000, s_hat=1.000000
Time for optimization: 51.46s
Test results:
Top-1: 0.286
Top-10: 0.716
Top-30: 0.807
Top-50: 0.847
Top-100: 0.883
MRR: 0.424
Run 8/10
Time for edge perturbation: 0.129s
Time for attribute perturbation: 0.290s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.06s
Iter 0: wasserstein=1.161584, edge=0.000707, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993368, edge=0.000675, neigh=3.180475, align=3.683913, entropy=10.792709,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979455, edge=0.000587, neigh=3.041741, align=4.625563, entropy=9.800161,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977104, edge=0.000566, neigh=2.836282, align=4.979940, entropy=9.440660,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976759, edge=0.000553, neigh=2.859546, align=5.142161, entropy=9.276293,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976609, edge=0.000560, neigh=2.964078, align=5.148048, entropy=9.269955,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976296, edge=0.000566, neigh=3.042121, align=5.133042, entropy=9.284924,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975800, edge=0.000569, neigh=3.148627, align=5.122934, entropy=9.295030,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974932, edge=0.000570, neigh=3.271688, align=5.118033, entropy=9.299931,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974273, edge=0.000571, neigh=3.385893, align=5.115523, entropy=9.302354,s=1.000000, s_hat=1.000000
Time for optimization: 50.31s
Test results:
Top-1: 0.286
Top-10: 0.707
Top-30: 0.803
Top-50: 0.839
Top-100: 0.877
MRR: 0.421
Run 9/10
Time for edge perturbation: 0.103s
Time for attribute perturbation: 0.159s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.86s
Iter 0: wasserstein=1.161846, edge=0.000708, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993634, edge=0.000677, neigh=3.178544, align=3.690390, entropy=10.786831,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979705, edge=0.000588, neigh=3.043102, align=4.624291, entropy=9.800994,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977367, edge=0.000566, neigh=2.837572, align=4.975550, entropy=9.444895,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976724, edge=0.000552, neigh=2.870011, align=5.145297, entropy=9.272935,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976827, edge=0.000550, neigh=2.831869, align=5.244710, entropy=9.173271,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976733, edge=0.000550, neigh=2.845316, align=5.299744, entropy=9.118221,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976120, edge=0.000554, neigh=2.957689, align=5.298456, entropy=9.119508,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975279, edge=0.000556, neigh=3.064446, align=5.292682, entropy=9.125282,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974687, edge=0.000557, neigh=3.180726, align=5.287517, entropy=9.130347,s=1.000000, s_hat=1.000000
Time for optimization: 53.38s
Test results:
Top-1: 0.282
Top-10: 0.716
Top-30: 0.816
Top-50: 0.845
Top-100: 0.878
MRR: 0.417
Run 10/10
Time for edge perturbation: 0.140s
Time for attribute perturbation: 0.307s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 33.30s
Iter 0: wasserstein=1.161369, edge=0.000707, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993325, edge=0.000676, neigh=3.173333, align=3.689966, entropy=10.786419,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979347, edge=0.000588, neigh=3.069806, align=4.629792, entropy=9.795589,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977151, edge=0.000567, neigh=2.849092, align=4.977332, entropy=9.443375,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976792, edge=0.000553, neigh=2.843613, align=5.138127, entropy=9.280404,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976594, edge=0.000551, neigh=2.823044, align=5.250613, entropy=9.167402,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976398, edge=0.000549, neigh=2.854834, align=5.312996, entropy=9.104971,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975790, edge=0.000552, neigh=2.985095, align=5.311051, entropy=9.106913,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974943, edge=0.000554, neigh=3.105449, align=5.304777, entropy=9.113187,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974401, edge=0.000556, neigh=3.215264, align=5.299514, entropy=9.118372,s=1.000000, s_hat=1.000000
Time for optimization: 40.43s
Test results:
Top-1: 0.301
Top-10: 0.722
Top-30: 0.818
Top-50: 0.864
Top-100: 0.893
MRR: 0.435
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.106s
Time for attribute perturbation: 0.146s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 32.77s
Iter 0: wasserstein=1.160238, edge=0.000653, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993780, edge=0.000625, neigh=3.113319, align=3.630564, entropy=10.846299,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980219, edge=0.000554, neigh=2.951741, align=4.525885, entropy=9.899514,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977722, edge=0.000535, neigh=2.712392, align=4.868563, entropy=9.551399,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977264, edge=0.000522, neigh=2.734888, align=5.038144, entropy=9.380113,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977140, edge=0.000518, neigh=2.716764, align=5.146184, entropy=9.271797,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976858, edge=0.000515, neigh=2.767750, align=5.222434, entropy=9.195531,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976148, edge=0.000517, neigh=2.891898, align=5.223850, entropy=9.194114,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975188, edge=0.000518, neigh=3.005610, align=5.217715, entropy=9.200249,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974614, edge=0.000519, neigh=3.115348, align=5.215054, entropy=9.202891,s=1.000000, s_hat=1.000000
Time for optimization: 50.41s
Test results:
Top-1: 0.261
Top-10: 0.692
Top-30: 0.816
Top-50: 0.847
Top-100: 0.884
MRR: 0.402
Run 2/10
Time for edge perturbation: 0.157s
Time for attribute perturbation: 0.203s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 35.97s
Iter 0: wasserstein=1.160488, edge=0.000653, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993910, edge=0.000623, neigh=3.119872, align=3.640633, entropy=10.836207,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980191, edge=0.000552, neigh=2.954836, align=4.548398, entropy=9.876987,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977605, edge=0.000533, neigh=2.737081, align=4.893211, entropy=9.526608,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977090, edge=0.000520, neigh=2.751796, align=5.060068, entropy=9.358149,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977163, edge=0.000518, neigh=2.717123, align=5.169381, entropy=9.248603,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977090, edge=0.000516, neigh=2.731090, align=5.227112, entropy=9.190853,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976487, edge=0.000517, neigh=2.855405, align=5.223992, entropy=9.193972,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975580, edge=0.000519, neigh=2.971507, align=5.215547, entropy=9.202417,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975052, edge=0.000520, neigh=3.085582, align=5.210800, entropy=9.207051,s=1.000000, s_hat=1.000000
Time for optimization: 51.70s
Test results:
Top-1: 0.269
Top-10: 0.698
Top-30: 0.803
Top-50: 0.848
Top-100: 0.880
MRR: 0.406
Run 3/10
Time for edge perturbation: 0.089s
Time for attribute perturbation: 0.281s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.31s
Iter 0: wasserstein=1.160137, edge=0.000653, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993446, edge=0.000623, neigh=3.122318, align=3.636518, entropy=10.840827,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979807, edge=0.000551, neigh=2.957832, align=4.544648, entropy=9.881009,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977464, edge=0.000532, neigh=2.725215, align=4.892993, entropy=9.527385,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977085, edge=0.000519, neigh=2.780983, align=5.053574, entropy=9.364886,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976970, edge=0.000524, neigh=2.870634, align=5.064503, entropy=9.353501,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976544, edge=0.000528, neigh=2.961531, align=5.056916, entropy=9.361050,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976035, edge=0.000530, neigh=3.077306, align=5.049388, entropy=9.368576,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975147, edge=0.000531, neigh=3.205120, align=5.043694, entropy=9.374270,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974600, edge=0.000531, neigh=3.324043, align=5.040774, entropy=9.377148,s=1.000000, s_hat=1.000000
Time for optimization: 51.72s
Test results:
Top-1: 0.276
Top-10: 0.689
Top-30: 0.793
Top-50: 0.825
Top-100: 0.861
MRR: 0.406
Run 4/10
Time for edge perturbation: 0.160s
Time for attribute perturbation: 0.196s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 35.70s
Iter 0: wasserstein=1.160215, edge=0.000653, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993502, edge=0.000624, neigh=3.101981, align=3.636702, entropy=10.840083,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979952, edge=0.000550, neigh=2.967071, align=4.543876, entropy=9.881493,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977564, edge=0.000532, neigh=2.724105, align=4.885091, entropy=9.534873,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977099, edge=0.000519, neigh=2.742800, align=5.052232, entropy=9.366141,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976972, edge=0.000516, neigh=2.736065, align=5.167325, entropy=9.250670,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976710, edge=0.000513, neigh=2.760946, align=5.240365, entropy=9.177600,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976152, edge=0.000515, neigh=2.885762, align=5.237516, entropy=9.180448,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975280, edge=0.000517, neigh=2.997545, align=5.229890, entropy=9.188074,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974724, edge=0.000518, neigh=3.105007, align=5.225988, entropy=9.191942,s=1.000000, s_hat=1.000000
Time for optimization: 50.98s
Test results:
Top-1: 0.273
Top-10: 0.699
Top-30: 0.802
Top-50: 0.850
Top-100: 0.882
MRR: 0.404
Run 5/10
Time for edge perturbation: 0.166s
Time for attribute perturbation: 0.192s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.20s
Iter 0: wasserstein=1.160617, edge=0.000653, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994413, edge=0.000624, neigh=3.142648, align=3.632380, entropy=10.845266,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980720, edge=0.000552, neigh=2.957597, align=4.538781, entropy=9.886714,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978291, edge=0.000531, neigh=2.728032, align=4.892316, entropy=9.528047,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977695, edge=0.000518, neigh=2.748596, align=5.064143, entropy=9.354242,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977596, edge=0.000517, neigh=2.716346, align=5.169093, entropy=9.248904,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977423, edge=0.000514, neigh=2.755765, align=5.221850, entropy=9.196116,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976847, edge=0.000516, neigh=2.876613, align=5.220199, entropy=9.197765,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975970, edge=0.000517, neigh=2.991405, align=5.213804, entropy=9.204160,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975362, edge=0.000518, neigh=3.094265, align=5.209753, entropy=9.208141,s=1.000000, s_hat=1.000000
Time for optimization: 49.70s
Test results:
Top-1: 0.272
Top-10: 0.689
Top-30: 0.799
Top-50: 0.839
Top-100: 0.880
MRR: 0.407
Run 6/10
Time for edge perturbation: 0.113s
Time for attribute perturbation: 0.212s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 37.90s
Iter 0: wasserstein=1.160500, edge=0.000653, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993993, edge=0.000624, neigh=3.122036, align=3.638155, entropy=10.838457,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980230, edge=0.000552, neigh=2.943833, align=4.536615, entropy=9.889028,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977767, edge=0.000531, neigh=2.745145, align=4.883346, entropy=9.536840,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977300, edge=0.000518, neigh=2.744014, align=5.051183, entropy=9.367104,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977185, edge=0.000515, neigh=2.751068, align=5.155410, entropy=9.262573,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976810, edge=0.000518, neigh=2.868141, align=5.156229, entropy=9.261736,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976235, edge=0.000521, neigh=2.987902, align=5.147200, entropy=9.270764,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975411, edge=0.000522, neigh=3.106818, align=5.139244, entropy=9.278720,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974844, edge=0.000523, neigh=3.231009, align=5.133653, entropy=9.284263,s=1.000000, s_hat=1.000000
Time for optimization: 50.74s
Test results:
Top-1: 0.280
Top-10: 0.701
Top-30: 0.803
Top-50: 0.834
Top-100: 0.869
MRR: 0.416
Run 7/10
Time for edge perturbation: 0.123s
Time for attribute perturbation: 0.218s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 36.20s
Iter 0: wasserstein=1.160209, edge=0.000653, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993680, edge=0.000625, neigh=3.111206, align=3.623152, entropy=10.853392,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980166, edge=0.000554, neigh=2.956121, align=4.528728, entropy=9.896702,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977785, edge=0.000534, neigh=2.699070, align=4.873543, entropy=9.546823,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977208, edge=0.000520, neigh=2.722599, align=5.055431, entropy=9.363014,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977128, edge=0.000517, neigh=2.705054, align=5.168114, entropy=9.249887,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976969, edge=0.000513, neigh=2.738164, align=5.237994, entropy=9.179972,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976334, edge=0.000515, neigh=2.873195, align=5.237029, entropy=9.180935,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975452, edge=0.000516, neigh=2.987404, align=5.230845, entropy=9.187119,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974900, edge=0.000517, neigh=3.098928, align=5.226014, entropy=9.191941,s=1.000000, s_hat=1.000000
Time for optimization: 50.67s
Test results:
Top-1: 0.269
Top-10: 0.702
Top-30: 0.804
Top-50: 0.846
Top-100: 0.880
MRR: 0.404
Run 8/10
Time for edge perturbation: 0.140s
Time for attribute perturbation: 0.187s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 35.97s
Iter 0: wasserstein=1.160056, edge=0.000653, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993432, edge=0.000624, neigh=3.104476, align=3.628951, entropy=10.848082,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979726, edge=0.000552, neigh=2.950356, align=4.524726, entropy=9.901214,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977204, edge=0.000530, neigh=2.720624, align=4.877619, entropy=9.541981,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976783, edge=0.000517, neigh=2.723647, align=5.053160, entropy=9.365149,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976820, edge=0.000515, neigh=2.698871, align=5.166835, entropy=9.251156,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976734, edge=0.000513, neigh=2.725121, align=5.228712, entropy=9.189254,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976076, edge=0.000514, neigh=2.847237, align=5.224432, entropy=9.193532,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975173, edge=0.000516, neigh=2.957212, align=5.216274, entropy=9.201690,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974688, edge=0.000517, neigh=3.069432, align=5.211345, entropy=9.206596,s=1.000000, s_hat=1.000000
Time for optimization: 26.63s
Test results:
Top-1: 0.263
Top-10: 0.692
Top-30: 0.802
Top-50: 0.838
Top-100: 0.878
MRR: 0.399
Run 9/10
Time for edge perturbation: 0.104s
Time for attribute perturbation: 0.156s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 19.54s
Iter 0: wasserstein=1.160198, edge=0.000654, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993621, edge=0.000624, neigh=3.121168, align=3.632210, entropy=10.843955,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979925, edge=0.000553, neigh=2.925262, align=4.531362, entropy=9.894048,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977663, edge=0.000531, neigh=2.718410, align=4.886001, entropy=9.534440,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977144, edge=0.000519, neigh=2.741786, align=5.056214, entropy=9.362238,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976967, edge=0.000517, neigh=2.737283, align=5.163839, entropy=9.254178,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976642, edge=0.000519, neigh=2.877901, align=5.166138, entropy=9.251830,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976032, edge=0.000521, neigh=2.994114, align=5.155513, entropy=9.262451,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975254, edge=0.000523, neigh=3.106426, align=5.147028, entropy=9.270936,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974746, edge=0.000524, neigh=3.228464, align=5.141004, entropy=9.276933,s=1.000000, s_hat=1.000000
Time for optimization: 41.49s
Test results:
Top-1: 0.273
Top-10: 0.694
Top-30: 0.799
Top-50: 0.836
Top-100: 0.884
MRR: 0.404
Run 10/10
Time for edge perturbation: 0.108s
Time for attribute perturbation: 0.247s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 28.51s
Iter 0: wasserstein=1.160323, edge=0.000653, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993900, edge=0.000625, neigh=3.117857, align=3.638702, entropy=10.837728,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980182, edge=0.000552, neigh=2.945169, align=4.543088, entropy=9.882271,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977876, edge=0.000532, neigh=2.718989, align=4.893604, entropy=9.527289,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977401, edge=0.000518, neigh=2.738090, align=5.068111, entropy=9.350498,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977324, edge=0.000515, neigh=2.735237, align=5.179261, entropy=9.238771,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976794, edge=0.000518, neigh=2.871952, align=5.182570, entropy=9.235398,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976228, edge=0.000521, neigh=2.997106, align=5.174059, entropy=9.243906,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975305, edge=0.000522, neigh=3.118815, align=5.166393, entropy=9.251571,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974785, edge=0.000522, neigh=3.232608, align=5.161847, entropy=9.256011,s=1.000000, s_hat=1.000000
Time for optimization: 41.74s
Test results:
Top-1: 0.259
Top-10: 0.693
Top-30: 0.791
Top-50: 0.827
Top-100: 0.870
MRR: 0.397
Loading datasets/Douban.mat...
Run 1/10
Time for edge perturbation: 0.116s
Time for attribute perturbation: 0.161s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 28.90s
Iter 0: wasserstein=1.159076, edge=0.000609, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994055, edge=0.000582, neigh=3.075311, align=3.582614, entropy=10.893653,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980721, edge=0.000523, neigh=2.882060, align=4.462089, entropy=9.963397,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978242, edge=0.000505, neigh=2.653043, align=4.799036, entropy=9.621698,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977617, edge=0.000493, neigh=2.670963, align=4.965449, entropy=9.453088,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977566, edge=0.000490, neigh=2.657618, align=5.075743, entropy=9.342266,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977232, edge=0.000488, neigh=2.696494, align=5.148106, entropy=9.269860,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976638, edge=0.000489, neigh=2.823027, align=5.147566, entropy=9.270398,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975739, edge=0.000490, neigh=2.932333, align=5.139472, entropy=9.278492,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975199, edge=0.000491, neigh=3.035813, align=5.134261, entropy=9.283685,s=1.000000, s_hat=1.000000
Time for optimization: 39.51s
Test results:
Top-1: 0.237
Top-10: 0.663
Top-30: 0.793
Top-50: 0.836
Top-100: 0.874
MRR: 0.375
Run 2/10
Time for edge perturbation: 0.027s
Time for attribute perturbation: 0.143s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 20.21s
Iter 0: wasserstein=1.159021, edge=0.000609, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994124, edge=0.000582, neigh=3.065359, align=3.582227, entropy=10.894549,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980696, edge=0.000523, neigh=2.847265, align=4.458569, entropy=9.966860,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978321, edge=0.000504, neigh=2.611571, align=4.799751, entropy=9.620742,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977691, edge=0.000491, neigh=2.646877, align=4.970136, entropy=9.448234,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977629, edge=0.000487, neigh=2.639585, align=5.076902, entropy=9.341091,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977283, edge=0.000484, neigh=2.680548, align=5.146361, entropy=9.271605,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976651, edge=0.000486, neigh=2.790852, align=5.145456, entropy=9.272508,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975731, edge=0.000488, neigh=2.899977, align=5.139230, entropy=9.278734,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975095, edge=0.000489, neigh=3.000441, align=5.135137, entropy=9.282660,s=1.000000, s_hat=1.000000
Time for optimization: 34.44s
Test results:
Top-1: 0.257
Top-10: 0.679
Top-30: 0.799
Top-50: 0.831
Top-100: 0.870
MRR: 0.391
Run 3/10
Time for edge perturbation: 0.044s
Time for attribute perturbation: 0.123s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 18.26s
Iter 0: wasserstein=1.159229, edge=0.000609, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993916, edge=0.000581, neigh=3.071403, align=3.588205, entropy=10.888379,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980582, edge=0.000522, neigh=2.835030, align=4.475292, entropy=9.950128,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978210, edge=0.000504, neigh=2.617536, align=4.814034, entropy=9.606551,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977631, edge=0.000492, neigh=2.661145, align=4.979134, entropy=9.439299,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977580, edge=0.000489, neigh=2.666578, align=5.084341, entropy=9.333653,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977399, edge=0.000485, neigh=2.719507, align=5.154640, entropy=9.263326,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976816, edge=0.000488, neigh=2.850071, align=5.154714, entropy=9.263250,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975962, edge=0.000489, neigh=2.955673, align=5.148509, entropy=9.269455,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975328, edge=0.000489, neigh=3.055580, align=5.144804, entropy=9.273099,s=1.000000, s_hat=1.000000
Time for optimization: 31.95s
Test results:
Top-1: 0.254
Top-10: 0.675
Top-30: 0.803
Top-50: 0.836
Top-100: 0.875
MRR: 0.388
Run 4/10
Time for edge perturbation: 0.049s
Time for attribute perturbation: 0.106s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 18.65s
Iter 0: wasserstein=1.159090, edge=0.000609, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993885, edge=0.000581, neigh=3.063958, align=3.592222, entropy=10.884163,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980433, edge=0.000520, neigh=2.858108, align=4.479901, entropy=9.945458,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978069, edge=0.000502, neigh=2.635529, align=4.819345, entropy=9.601187,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977451, edge=0.000490, neigh=2.657755, align=4.990511, entropy=9.427923,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977446, edge=0.000488, neigh=2.654264, align=5.094325, entropy=9.323676,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977179, edge=0.000485, neigh=2.700949, align=5.161997, entropy=9.255969,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976610, edge=0.000487, neigh=2.817332, align=5.160036, entropy=9.257928,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975714, edge=0.000488, neigh=2.926665, align=5.152370, entropy=9.265594,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975098, edge=0.000489, neigh=3.029678, align=5.147605, entropy=9.270163,s=1.000000, s_hat=1.000000
Time for optimization: 32.95s
Test results:
Top-1: 0.251
Top-10: 0.673
Top-30: 0.790
Top-50: 0.830
Top-100: 0.872
MRR: 0.386
Run 5/10
Time for edge perturbation: 0.021s
Time for attribute perturbation: 0.151s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 19.08s
Iter 0: wasserstein=1.159284, edge=0.000609, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994155, edge=0.000582, neigh=3.062863, align=3.581874, entropy=10.894834,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980712, edge=0.000522, neigh=2.862236, align=4.465955, entropy=9.959518,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978250, edge=0.000502, neigh=2.639207, align=4.814544, entropy=9.606056,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977807, edge=0.000490, neigh=2.681872, align=4.984573, entropy=9.433835,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977753, edge=0.000487, neigh=2.661777, align=5.092159, entropy=9.325837,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977587, edge=0.000485, neigh=2.711785, align=5.163924, entropy=9.254042,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976981, edge=0.000486, neigh=2.836062, align=5.162524, entropy=9.255440,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976087, edge=0.000488, neigh=2.940549, align=5.157286, entropy=9.260678,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975418, edge=0.000488, neigh=3.045103, align=5.154920, entropy=9.262971,s=1.000000, s_hat=1.000000
Time for optimization: 33.66s
Test results:
Top-1: 0.256
Top-10: 0.673
Top-30: 0.793
Top-50: 0.821
Top-100: 0.865
MRR: 0.387
Run 6/10
Time for edge perturbation: 0.047s
Time for attribute perturbation: 0.154s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 18.16s
Iter 0: wasserstein=1.158923, edge=0.000609, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993944, edge=0.000581, neigh=3.067179, align=3.587665, entropy=10.889024,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980540, edge=0.000523, neigh=2.865778, align=4.463526, entropy=9.961941,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978081, edge=0.000505, neigh=2.641326, align=4.797616, entropy=9.622713,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977655, edge=0.000493, neigh=2.667508, align=4.957873, entropy=9.460557,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977484, edge=0.000490, neigh=2.674191, align=5.066844, entropy=9.351155,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977188, edge=0.000487, neigh=2.706279, align=5.140577, entropy=9.277389,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976516, edge=0.000489, neigh=2.827307, align=5.140566, entropy=9.277398,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975582, edge=0.000489, neigh=2.939273, align=5.136719, entropy=9.281245,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975030, edge=0.000490, neigh=3.038732, align=5.134001, entropy=9.283800,s=1.000000, s_hat=1.000000
Time for optimization: 33.33s
Test results:
Top-1: 0.245
Top-10: 0.677
Top-30: 0.797
Top-50: 0.827
Top-100: 0.865
MRR: 0.382
Run 7/10
Time for edge perturbation: 0.043s
Time for attribute perturbation: 0.112s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 18.35s
Iter 0: wasserstein=1.158975, edge=0.000609, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993863, edge=0.000581, neigh=3.052370, align=3.578087, entropy=10.898146,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980490, edge=0.000522, neigh=2.848609, align=4.461870, entropy=9.963598,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978164, edge=0.000503, neigh=2.621055, align=4.800835, entropy=9.619358,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977506, edge=0.000491, neigh=2.665391, align=4.972632, entropy=9.445791,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977503, edge=0.000488, neigh=2.653597, align=5.078785, entropy=9.339213,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977195, edge=0.000485, neigh=2.704506, align=5.146956, entropy=9.271010,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976498, edge=0.000487, neigh=2.831469, align=5.148842, entropy=9.269122,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975509, edge=0.000487, neigh=2.946032, align=5.145233, entropy=9.272731,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974997, edge=0.000488, neigh=3.047029, align=5.142966, entropy=9.274816,s=1.000000, s_hat=1.000000
Time for optimization: 32.50s
Test results:
Top-1: 0.242
Top-10: 0.672
Top-30: 0.804
Top-50: 0.831
Top-100: 0.879
MRR: 0.381
Run 8/10
Time for edge perturbation: 0.090s
Time for attribute perturbation: 0.156s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 17.20s
Iter 0: wasserstein=1.159146, edge=0.000609, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994064, edge=0.000581, neigh=3.051678, align=3.587212, entropy=10.889425,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980535, edge=0.000521, neigh=2.857286, align=4.471493, entropy=9.953910,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978108, edge=0.000503, neigh=2.658516, align=4.808706, entropy=9.611831,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977547, edge=0.000492, neigh=2.675988, align=4.972873, entropy=9.445605,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977545, edge=0.000489, neigh=2.670391, align=5.079999, entropy=9.338000,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977383, edge=0.000486, neigh=2.691317, align=5.141803, entropy=9.276163,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976757, edge=0.000488, neigh=2.818198, align=5.140686, entropy=9.277278,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975787, edge=0.000489, neigh=2.934733, align=5.136282, entropy=9.281682,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975200, edge=0.000489, neigh=3.040301, align=5.133456, entropy=9.284481,s=1.000000, s_hat=1.000000
Time for optimization: 26.52s
Test results:
Top-1: 0.261
Top-10: 0.675
Top-30: 0.785
Top-50: 0.823
Top-100: 0.863
MRR: 0.388
Run 9/10
Time for edge perturbation: 0.091s
Time for attribute perturbation: 0.165s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 17.45s
Iter 0: wasserstein=1.159132, edge=0.000609, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994134, edge=0.000583, neigh=3.071915, align=3.576609, entropy=10.900199,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980516, edge=0.000523, neigh=2.874783, align=4.452951, entropy=9.972397,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978201, edge=0.000505, neigh=2.635872, align=4.787910, entropy=9.632486,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977680, edge=0.000493, neigh=2.670371, align=4.950202, entropy=9.468235,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977657, edge=0.000490, neigh=2.672107, align=5.058266, entropy=9.359732,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977450, edge=0.000487, neigh=2.706689, align=5.132609, entropy=9.285357,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976870, edge=0.000489, neigh=2.825094, align=5.132725, entropy=9.285239,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976002, edge=0.000490, neigh=2.934539, align=5.126267, entropy=9.291696,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975367, edge=0.000491, neigh=3.040045, align=5.122369, entropy=9.295416,s=1.000000, s_hat=1.000000
Time for optimization: 34.02s
Test results:
Top-1: 0.250
Top-10: 0.676
Top-30: 0.791
Top-50: 0.829
Top-100: 0.874
MRR: 0.383
Run 10/10
Time for edge perturbation: 0.093s
Time for attribute perturbation: 0.159s
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Time for cost matrix: 18.53s
Iter 0: wasserstein=1.158907, edge=0.000609, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993886, edge=0.000582, neigh=3.060296, align=3.577210, entropy=10.899511,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980322, edge=0.000522, neigh=2.842079, align=4.457583, entropy=9.967823,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977898, edge=0.000503, neigh=2.623921, align=4.802240, entropy=9.617459,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977378, edge=0.000491, neigh=2.626694, align=4.969982, entropy=9.448301,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977387, edge=0.000487, neigh=2.633302, align=5.077691, entropy=9.340296,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977092, edge=0.000484, neigh=2.667974, align=5.146483, entropy=9.271482,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976394, edge=0.000486, neigh=2.785190, align=5.145675, entropy=9.272289,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975511, edge=0.000488, neigh=2.896870, align=5.139426, entropy=9.278538,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974934, edge=0.000488, neigh=3.004122, align=5.134605, entropy=9.283313,s=1.000000, s_hat=1.000000
Time for optimization: 21.98s
Test results:
Top-1: 0.248
Top-10: 0.675
Top-30: 0.796
Top-50: 0.831
Top-100: 0.865
MRR: 0.380
