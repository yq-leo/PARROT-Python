Run 1/3
Loading datasets/scale_anchor/G500.mat...
Graph 1: torch.Size([500, 500]), None
Graph 2: torch.Size([500, 500]), None
Ground truth: torch.Size([400, 2]), torch.Size([500, 500])
Time for cost matrix: 0.21s
Time for optimization: 0.22s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G500.mat...
Graph 1: torch.Size([500, 500]), None
Graph 2: torch.Size([500, 500]), None
Ground truth: torch.Size([400, 2]), torch.Size([500, 500])
Time for cost matrix: 0.19s
Time for optimization: 0.21s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G500.mat...
Graph 1: torch.Size([500, 500]), None
Graph 2: torch.Size([500, 500]), None
Ground truth: torch.Size([400, 2]), torch.Size([500, 500])
Time for cost matrix: 0.20s
Time for optimization: 0.21s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G1000.mat...
Graph 1: torch.Size([1000, 1000]), None
Graph 2: torch.Size([1000, 1000]), None
Ground truth: torch.Size([800, 2]), torch.Size([1000, 1000])
Time for cost matrix: 0.35s
Time for optimization: 0.47s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G1000.mat...
Graph 1: torch.Size([1000, 1000]), None
Graph 2: torch.Size([1000, 1000]), None
Ground truth: torch.Size([800, 2]), torch.Size([1000, 1000])
Time for cost matrix: 0.34s
Time for optimization: 0.47s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G1000.mat...
Graph 1: torch.Size([1000, 1000]), None
Graph 2: torch.Size([1000, 1000]), None
Ground truth: torch.Size([800, 2]), torch.Size([1000, 1000])
Time for cost matrix: 0.34s
Time for optimization: 0.53s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G2000.mat...
Graph 1: torch.Size([2000, 2000]), None
Graph 2: torch.Size([2000, 2000]), None
Ground truth: torch.Size([1600, 2]), torch.Size([2000, 2000])
Time for cost matrix: 0.87s
Time for optimization: 2.13s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G2000.mat...
Graph 1: torch.Size([2000, 2000]), None
Graph 2: torch.Size([2000, 2000]), None
Ground truth: torch.Size([1600, 2]), torch.Size([2000, 2000])
Time for cost matrix: 0.94s
Time for optimization: 1.81s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G2000.mat...
Graph 1: torch.Size([2000, 2000]), None
Graph 2: torch.Size([2000, 2000]), None
Ground truth: torch.Size([1600, 2]), torch.Size([2000, 2000])
Time for cost matrix: 0.94s
Time for optimization: 1.91s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G3000.mat...
Graph 1: torch.Size([3000, 3000]), None
Graph 2: torch.Size([3000, 3000]), None
Ground truth: torch.Size([2400, 2]), torch.Size([3000, 3000])
Time for cost matrix: 3.07s
Time for optimization: 10.05s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G3000.mat...
Graph 1: torch.Size([3000, 3000]), None
Graph 2: torch.Size([3000, 3000]), None
Ground truth: torch.Size([2400, 2]), torch.Size([3000, 3000])
Time for cost matrix: 3.33s
Time for optimization: 9.31s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G3000.mat...
Graph 1: torch.Size([3000, 3000]), None
Graph 2: torch.Size([3000, 3000]), None
Ground truth: torch.Size([2400, 2]), torch.Size([3000, 3000])
Time for cost matrix: 3.26s
Time for optimization: 10.14s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G4000.mat...
Graph 1: torch.Size([4000, 4000]), None
Graph 2: torch.Size([4000, 4000]), None
Ground truth: torch.Size([3200, 2]), torch.Size([4000, 4000])
Time for cost matrix: 5.23s
Time for optimization: 17.53s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G4000.mat...
Graph 1: torch.Size([4000, 4000]), None
Graph 2: torch.Size([4000, 4000]), None
Ground truth: torch.Size([3200, 2]), torch.Size([4000, 4000])
Time for cost matrix: 5.40s
Time for optimization: 17.03s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G4000.mat...
Graph 1: torch.Size([4000, 4000]), None
Graph 2: torch.Size([4000, 4000]), None
Ground truth: torch.Size([3200, 2]), torch.Size([4000, 4000])
Time for cost matrix: 5.49s
Time for optimization: 17.05s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G5000.mat...
Graph 1: torch.Size([5000, 5000]), None
Graph 2: torch.Size([5000, 5000]), None
Ground truth: torch.Size([4000, 2]), torch.Size([5000, 5000])
Time for cost matrix: 10.70s
Time for optimization: 29.03s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G5000.mat...
Graph 1: torch.Size([5000, 5000]), None
Graph 2: torch.Size([5000, 5000]), None
Ground truth: torch.Size([4000, 2]), torch.Size([5000, 5000])
Time for cost matrix: 10.47s
Time for optimization: 28.61s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G5000.mat...
Graph 1: torch.Size([5000, 5000]), None
Graph 2: torch.Size([5000, 5000]), None
Ground truth: torch.Size([4000, 2]), torch.Size([5000, 5000])
Time for cost matrix: 10.43s
Time for optimization: 28.18s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G6000.mat...
Graph 1: torch.Size([6000, 6000]), None
Graph 2: torch.Size([6000, 6000]), None
Ground truth: torch.Size([4800, 2]), torch.Size([6000, 6000])
Time for cost matrix: 14.42s
Time for optimization: 41.33s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G6000.mat...
Graph 1: torch.Size([6000, 6000]), None
Graph 2: torch.Size([6000, 6000]), None
Ground truth: torch.Size([4800, 2]), torch.Size([6000, 6000])
Time for cost matrix: 15.15s
Time for optimization: 42.53s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G6000.mat...
Graph 1: torch.Size([6000, 6000]), None
Graph 2: torch.Size([6000, 6000]), None
Ground truth: torch.Size([4800, 2]), torch.Size([6000, 6000])
Time for cost matrix: 15.24s
Time for optimization: 41.78s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G7000.mat...
Graph 1: torch.Size([7000, 7000]), None
Graph 2: torch.Size([7000, 7000]), None
Ground truth: torch.Size([5600, 2]), torch.Size([7000, 7000])
Time for cost matrix: 19.40s
Time for optimization: 56.94s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G7000.mat...
Graph 1: torch.Size([7000, 7000]), None
Graph 2: torch.Size([7000, 7000]), None
Ground truth: torch.Size([5600, 2]), torch.Size([7000, 7000])
Time for cost matrix: 20.23s
Time for optimization: 57.81s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G7000.mat...
Graph 1: torch.Size([7000, 7000]), None
Graph 2: torch.Size([7000, 7000]), None
Ground truth: torch.Size([5600, 2]), torch.Size([7000, 7000])
Time for cost matrix: 20.31s
Time for optimization: 57.66s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G8000.mat...
Graph 1: torch.Size([8000, 8000]), None
Graph 2: torch.Size([8000, 8000]), None
Ground truth: torch.Size([6400, 2]), torch.Size([8000, 8000])
Time for cost matrix: 24.78s
Time for optimization: 70.37s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G8000.mat...
Graph 1: torch.Size([8000, 8000]), None
Graph 2: torch.Size([8000, 8000]), None
Ground truth: torch.Size([6400, 2]), torch.Size([8000, 8000])
Time for cost matrix: 25.74s
Time for optimization: 72.41s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G8000.mat...
Graph 1: torch.Size([8000, 8000]), None
Graph 2: torch.Size([8000, 8000]), None
Ground truth: torch.Size([6400, 2]), torch.Size([8000, 8000])
Time for cost matrix: 25.40s
Time for optimization: 71.38s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G9000.mat...
Graph 1: torch.Size([9000, 9000]), None
Graph 2: torch.Size([9000, 9000]), None
Ground truth: torch.Size([7200, 2]), torch.Size([9000, 9000])
Time for cost matrix: 33.02s
Time for optimization: 90.32s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G9000.mat...
Graph 1: torch.Size([9000, 9000]), None
Graph 2: torch.Size([9000, 9000]), None
Ground truth: torch.Size([7200, 2]), torch.Size([9000, 9000])
Time for cost matrix: 32.06s
Time for optimization: 87.61s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G9000.mat...
Graph 1: torch.Size([9000, 9000]), None
Graph 2: torch.Size([9000, 9000]), None
Ground truth: torch.Size([7200, 2]), torch.Size([9000, 9000])
Time for cost matrix: 32.18s
Time for optimization: 89.13s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G10000.mat...
Graph 1: torch.Size([10000, 10000]), None
Graph 2: torch.Size([10000, 10000]), None
Ground truth: torch.Size([8000, 2]), torch.Size([10000, 10000])
Time for cost matrix: 42.57s
Time for optimization: 114.79s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G10000.mat...
Graph 1: torch.Size([10000, 10000]), None
Graph 2: torch.Size([10000, 10000]), None
Ground truth: torch.Size([8000, 2]), torch.Size([10000, 10000])
Time for cost matrix: 44.53s
Time for optimization: 112.51s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G10000.mat...
Graph 1: torch.Size([10000, 10000]), None
Graph 2: torch.Size([10000, 10000]), None
Ground truth: torch.Size([8000, 2]), torch.Size([10000, 10000])
Time for cost matrix: 42.25s
Time for optimization: 112.19s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G11000.mat...
Graph 1: torch.Size([11000, 11000]), None
Graph 2: torch.Size([11000, 11000]), None
Ground truth: torch.Size([8800, 2]), torch.Size([11000, 11000])
Time for cost matrix: 50.90s
Time for optimization: 140.57s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G11000.mat...
Graph 1: torch.Size([11000, 11000]), None
Graph 2: torch.Size([11000, 11000]), None
Ground truth: torch.Size([8800, 2]), torch.Size([11000, 11000])
Time for cost matrix: 50.31s
Time for optimization: 135.46s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G11000.mat...
Graph 1: torch.Size([11000, 11000]), None
Graph 2: torch.Size([11000, 11000]), None
Ground truth: torch.Size([8800, 2]), torch.Size([11000, 11000])
Time for cost matrix: 50.10s
Time for optimization: 134.70s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G12000.mat...
Graph 1: torch.Size([12000, 12000]), None
Graph 2: torch.Size([12000, 12000]), None
Ground truth: torch.Size([9600, 2]), torch.Size([12000, 12000])
Time for cost matrix: 60.91s
Time for optimization: 174.63s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G12000.mat...
Graph 1: torch.Size([12000, 12000]), None
Graph 2: torch.Size([12000, 12000]), None
Ground truth: torch.Size([9600, 2]), torch.Size([12000, 12000])
Time for cost matrix: 61.33s
Time for optimization: 168.30s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G12000.mat...
Graph 1: torch.Size([12000, 12000]), None
Graph 2: torch.Size([12000, 12000]), None
Ground truth: torch.Size([9600, 2]), torch.Size([12000, 12000])
Time for cost matrix: 60.10s
Time for optimization: 169.48s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G13000.mat...
Graph 1: torch.Size([13000, 13000]), None
Graph 2: torch.Size([13000, 13000]), None
Ground truth: torch.Size([10400, 2]), torch.Size([13000, 13000])
Time for cost matrix: 73.76s
Time for optimization: 206.38s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G13000.mat...
Graph 1: torch.Size([13000, 13000]), None
Graph 2: torch.Size([13000, 13000]), None
Ground truth: torch.Size([10400, 2]), torch.Size([13000, 13000])
Time for cost matrix: 73.26s
Time for optimization: 199.51s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G13000.mat...
Graph 1: torch.Size([13000, 13000]), None
Graph 2: torch.Size([13000, 13000]), None
Ground truth: torch.Size([10400, 2]), torch.Size([13000, 13000])
Time for cost matrix: 72.43s
Time for optimization: 201.93s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G14000.mat...
Graph 1: torch.Size([14000, 14000]), None
Graph 2: torch.Size([14000, 14000]), None
Ground truth: torch.Size([11200, 2]), torch.Size([14000, 14000])
Time for cost matrix: 90.94s
Time for optimization: 243.57s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G14000.mat...
Graph 1: torch.Size([14000, 14000]), None
Graph 2: torch.Size([14000, 14000]), None
Ground truth: torch.Size([11200, 2]), torch.Size([14000, 14000])
Time for cost matrix: 88.55s
Time for optimization: 240.38s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G14000.mat...
Graph 1: torch.Size([14000, 14000]), None
Graph 2: torch.Size([14000, 14000]), None
Ground truth: torch.Size([11200, 2]), torch.Size([14000, 14000])
Time for cost matrix: 89.97s
Time for optimization: 242.85s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 1/3
Loading datasets/scale_anchor/G15000.mat...
Graph 1: torch.Size([15000, 15000]), None
Graph 2: torch.Size([15000, 15000]), None
Ground truth: torch.Size([12000, 2]), torch.Size([15000, 15000])
Time for cost matrix: 109.27s
Time for optimization: 285.21s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 2/3
Loading datasets/scale_anchor/G15000.mat...
Graph 1: torch.Size([15000, 15000]), None
Graph 2: torch.Size([15000, 15000]), None
Ground truth: torch.Size([12000, 2]), torch.Size([15000, 15000])
Time for cost matrix: 104.52s
Time for optimization: 282.55s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
Run 3/3
Loading datasets/scale_anchor/G15000.mat...
Graph 1: torch.Size([15000, 15000]), None
Graph 2: torch.Size([15000, 15000]), None
Ground truth: torch.Size([12000, 2]), torch.Size([15000, 15000])
Time for cost matrix: 105.74s
Time for optimization: 284.23s
Test results:
Top-1: 1.000
Top-10: 1.000
Top-30: 1.000
Top-50: 1.000
Top-100: 1.000
MRR: 1.000
