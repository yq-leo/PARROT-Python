nohup: ignoring input
Loading datasets/Douban.mat...
Distribution of given anchor nodes: [(0, 0), (1, 4), (2, 1), (3, 2), (4, 2), (5, 4), (6, 5), (7, 1), (8, 8), (9, 1), (10, 7), (11, 4), (12, 11), (13, 8), (14, 7), (15, 7), (16, 9), (17, 7), (18, 2), (19, 13), (20, 10), (21, 9), (22, 24), (23, 10), (24, 10), (25, 16), (26, 41)]
Run 1/1
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:41,  2.36it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:35,  2.76it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:33,  2.91it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:24,  3.86it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:25,  3.71it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:29,  3.22it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:34,  2.69it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:31,  2.92it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:02<00:28,  3.18it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:25,  3.55it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:24,  3.56it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:03<00:25,  3.47it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:26,  3.32it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:25,  3.34it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:04<00:26,  3.20it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:04<00:26,  3.15it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:25,  3.25it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:24,  3.35it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:05<00:22,  3.57it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:21,  3.65it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:20,  3.80it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:06<00:21,  3.64it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:06<00:18,  4.15it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:06<00:17,  4.25it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:07<00:14,  5.15it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:07<00:13,  5.31it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:07<00:13,  5.38it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:07<00:13,  5.39it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:07<00:09,  7.46it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:08<00:09,  7.31it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:08<00:09,  6.93it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:08<00:11,  5.55it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:09<00:11,  5.35it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:09<00:11,  5.35it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:09<00:12,  5.05it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:09<00:11,  5.10it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:09<00:11,  5.33it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:09,  5.95it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:10<00:07,  7.66it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:06,  8.24it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:06,  8.48it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:10<00:05,  9.60it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:10<00:04,  9.97it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:10<00:03, 11.95it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:09,  4.81it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.41it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.59it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  4.83it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:11,  3.99it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.20it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.64it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:13,  3.30it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.45it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.29it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.63it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.48it/s]
Time for cost matrix: 15.73s
Iter 0: wasserstein=1.127491, edge=0.001135, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.791489, edge=0.001329, neigh=5.683800, align=4.896898, entropy=9.580899,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.763527, edge=0.000886, neigh=5.776975, align=5.452750, entropy=8.971920,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.760330, edge=0.000900, neigh=6.233625, align=5.493901, entropy=8.924694,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.760286, edge=0.000919, neigh=6.615016, align=5.463702, entropy=8.954404,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.760849, edge=0.000927, neigh=6.977295, align=5.432251, entropy=8.985785,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.761259, edge=0.000930, neigh=7.348690, align=5.414225, entropy=9.003747,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.761353, edge=0.000933, neigh=7.614799, align=5.401758, entropy=9.016206,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.761212, edge=0.000940, neigh=7.814715, align=5.391095, entropy=9.026416,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.761322, edge=0.000946, neigh=7.980967, align=5.382917, entropy=9.034051,s=1.000000, s_hat=1.000000
Time for optimization: 18.97s
Test results:
Top-1: 0.686
Top-10: 0.949
Top-30: 0.981
Top-50: 0.987
Top-100: 0.994
MRR: 0.784
Loading datasets/Douban.mat...
Distribution of given anchor nodes: [(0, 0), (1, 1), (2, 3), (3, 2), (4, 2), (5, 2), (6, 1), (7, 3), (8, 2), (9, 2), (10, 6), (11, 3), (12, 3), (13, 8), (14, 6), (15, 13), (16, 6), (17, 12), (18, 10), (19, 11), (20, 7), (21, 10), (22, 16), (23, 6), (24, 11), (25, 27), (26, 9), (27, 10), (28, 31)]
Run 1/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:13,  7.39it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:07, 13.62it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:07, 12.93it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:06, 13.59it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:05, 16.28it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:09,  9.48it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:13,  6.54it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:14,  5.93it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:14,  5.63it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:11,  7.01it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  7.17it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:11,  6.72it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:13,  5.65it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:15,  5.06it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:17,  4.51it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:17,  4.23it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:17,  4.24it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:15,  4.71it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:14,  5.20it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:09,  7.63it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.42it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:08,  8.12it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:08,  7.98it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:06,  9.38it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:05<00:05, 10.53it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:05<00:05, 10.91it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:05<00:05, 10.55it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:04, 12.17it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:05, 10.11it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:06<00:05,  9.56it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:06<00:04, 10.73it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:04, 11.34it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:03, 12.70it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.11it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.42it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.82it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.65it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:11,  4.05it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:09,  4.62it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.30it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.28it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:09,  4.66it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:08,  4.67it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.78it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.69it/s]
Time for cost matrix: 10.83s
Iter 0: wasserstein=1.174327, edge=0.000576, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.981909, edge=0.000535, neigh=3.948534, align=4.252704, entropy=10.224966,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.967697, edge=0.000474, neigh=3.423751, align=5.018718, entropy=9.407122,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.965411, edge=0.000468, neigh=3.251123, align=5.239459, entropy=9.179780,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.965433, edge=0.000466, neigh=3.084236, align=5.324200, entropy=9.094032,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.965647, edge=0.000466, neigh=3.090620, align=5.376676, entropy=9.041316,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.965429, edge=0.000468, neigh=3.219477, align=5.373942, entropy=9.044024,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.965155, edge=0.000470, neigh=3.367240, align=5.366463, entropy=9.051501,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.964388, edge=0.000471, neigh=3.513793, align=5.359640, entropy=9.058324,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.963811, edge=0.000471, neigh=3.642836, align=5.356369, entropy=9.061573,s=1.000000, s_hat=1.000000
Time for optimization: 22.02s
Test results:
Top-1: 0.577
Top-10: 0.902
Top-30: 0.959
Top-50: 0.974
Top-100: 0.984
MRR: 0.695
Run 2/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:12,  7.83it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:11,  8.45it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:09,  9.74it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:07, 12.06it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:07, 12.75it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:07, 11.63it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:06, 12.76it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:06, 12.75it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:05, 13.96it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:05, 14.60it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:05, 14.49it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:06, 12.70it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:08,  8.42it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:08,  8.66it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:11,  5.93it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:11,  6.12it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:08,  7.69it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:06, 10.51it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:05, 11.49it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:05, 11.04it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:04, 12.70it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:04<00:04, 12.10it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:04<00:04, 12.36it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:04, 12.65it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:04<00:04, 12.71it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:04<00:03, 12.50it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 12.84it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:04, 10.75it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.12it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.39it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.70it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:09,  4.68it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:09,  4.60it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.50it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:12,  3.50it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.00it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  2.99it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.38it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.30it/s]
Time for cost matrix: 9.26s
Iter 0: wasserstein=1.168012, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988894, edge=0.000537, neigh=3.514087, align=3.978810, entropy=10.498211,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.975172, edge=0.000479, neigh=3.156419, align=4.815046, entropy=9.610624,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.972565, edge=0.000469, neigh=2.979564, align=5.089976, entropy=9.329209,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.972350, edge=0.000464, neigh=2.875620, align=5.209254, entropy=9.208933,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972216, edge=0.000464, neigh=2.875946, align=5.271428, entropy=9.146556,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.971641, edge=0.000465, neigh=3.015985, align=5.274639, entropy=9.143326,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971150, edge=0.000467, neigh=3.147549, align=5.269143, entropy=9.148821,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.970220, edge=0.000468, neigh=3.279004, align=5.262753, entropy=9.155210,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.969582, edge=0.000468, neigh=3.400676, align=5.260819, entropy=9.157119,s=1.000000, s_hat=1.000000
Time for optimization: 19.83s
Test results:
Top-1: 0.526
Top-10: 0.849
Top-30: 0.912
Top-50: 0.932
Top-100: 0.958
MRR: 0.642
Run 3/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:27,  3.59it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:29,  3.31it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:29,  3.29it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:30,  3.11it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:01<00:26,  3.56it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:22,  4.10it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:24,  3.83it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:02<00:24,  3.70it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:02<00:15,  5.65it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:09,  9.16it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:08, 10.13it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:07, 11.77it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:06, 12.51it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:06, 13.09it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:05, 14.36it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:06, 11.91it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:05, 13.04it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:05, 13.88it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:07,  9.59it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:04<00:07,  8.99it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:07,  8.50it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:04<00:08,  7.77it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:08,  7.50it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:05, 10.40it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:05,  9.76it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:06,  8.15it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:05<00:05,  9.40it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:05<00:05,  9.49it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:06,  7.18it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:07,  6.13it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:09,  5.12it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:08,  5.50it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.41it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.74it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.01it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.16it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.31it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  4.04it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.84it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.01it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.76it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:09,  4.22it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.27it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.42it/s]
Time for cost matrix: 11.40s
Iter 0: wasserstein=1.169843, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992632, edge=0.000537, neigh=3.382047, align=3.920850, entropy=10.555813,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978782, edge=0.000479, neigh=3.078555, align=4.772180, entropy=9.653423,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976079, edge=0.000469, neigh=2.915043, align=5.054739, entropy=9.364440,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975853, edge=0.000464, neigh=2.823327, align=5.176319, entropy=9.241889,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975778, edge=0.000462, neigh=2.820544, align=5.244511, entropy=9.173473,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975294, edge=0.000464, neigh=2.956444, align=5.246199, entropy=9.171766,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974810, edge=0.000466, neigh=3.084634, align=5.239714, entropy=9.178250,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973934, edge=0.000467, neigh=3.211615, align=5.232367, entropy=9.185597,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973314, edge=0.000467, neigh=3.332773, align=5.229142, entropy=9.188794,s=1.000000, s_hat=1.000000
Time for optimization: 20.82s
Test results:
Top-1: 0.516
Top-10: 0.841
Top-30: 0.903
Top-50: 0.926
Top-100: 0.949
MRR: 0.635
Run 4/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.77it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:19,  5.08it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:18,  5.11it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:18,  5.31it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  7.84it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:10,  9.20it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:08, 10.38it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:07, 11.09it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:06, 12.80it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:06, 12.50it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:05, 13.78it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:06, 12.95it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:05, 13.14it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:06, 12.11it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:06, 10.53it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:06, 11.48it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:05, 11.92it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:03<00:05, 13.28it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:05, 12.63it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:05, 11.98it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:05, 11.72it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:06,  9.83it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:04<00:07,  7.77it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:04<00:08,  6.63it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:04<00:07,  6.94it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:04<00:09,  5.90it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:08,  5.95it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:06,  8.30it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:05<00:06,  7.52it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:05,  8.25it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:05,  9.32it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.29it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:08,  5.65it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  5.21it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:08,  5.73it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:08,  5.41it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:08,  5.26it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:07,  5.47it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:08,  5.07it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:08,  4.98it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:08,  4.89it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.31it/s]
Time for cost matrix: 9.47s
Iter 0: wasserstein=1.171802, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995661, edge=0.000537, neigh=3.326001, align=3.876285, entropy=10.600705,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981896, edge=0.000479, neigh=3.048249, align=4.732370, entropy=9.693271,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979168, edge=0.000469, neigh=2.877269, align=5.022209, entropy=9.397065,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978829, edge=0.000464, neigh=2.808002, align=5.152556, entropy=9.265684,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978706, edge=0.000463, neigh=2.797306, align=5.224695, entropy=9.193292,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978295, edge=0.000465, neigh=2.939138, align=5.226267, entropy=9.191699,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977800, edge=0.000467, neigh=3.076064, align=5.219136, entropy=9.198828,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976888, edge=0.000467, neigh=3.211548, align=5.211555, entropy=9.206409,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976306, edge=0.000468, neigh=3.334805, align=5.208615, entropy=9.209328,s=1.000000, s_hat=1.000000
Time for optimization: 19.99s
Test results:
Top-1: 0.508
Top-10: 0.840
Top-30: 0.902
Top-50: 0.928
Top-100: 0.942
MRR: 0.627
Run 5/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.21it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:09, 10.73it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:07, 12.44it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:08, 11.37it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:07, 11.48it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:07, 11.28it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:07, 11.35it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:06, 13.14it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:06, 12.69it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:05, 14.27it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:05, 14.16it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:05, 14.18it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:05, 14.91it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:04, 15.44it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:05, 13.18it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:06, 10.01it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:02<00:06, 10.45it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:09,  6.63it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:03<00:10,  6.35it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:09,  6.68it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:03<00:08,  7.07it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:08,  7.29it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:03<00:07,  7.52it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:04<00:05,  9.76it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:04<00:05,  9.18it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:04<00:06,  9.00it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:04<00:05,  9.59it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:04<00:04, 10.69it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:05<00:04, 11.20it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:04, 10.02it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.87it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.69it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  5.12it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:07,  5.94it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:09,  4.95it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.00it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.67it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.35it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:13,  3.08it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:13,  2.89it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.27it/s]
Time for cost matrix: 9.56s
Iter 0: wasserstein=1.171642, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996646, edge=0.000538, neigh=3.269754, align=3.844018, entropy=10.632691,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982802, edge=0.000480, neigh=3.022931, align=4.708847, entropy=9.716702,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980097, edge=0.000469, neigh=2.857898, align=5.001444, entropy=9.417784,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979845, edge=0.000464, neigh=2.782730, align=5.132762, entropy=9.285458,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979740, edge=0.000463, neigh=2.769666, align=5.206751, entropy=9.211234,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979280, edge=0.000465, neigh=2.915898, align=5.208333, entropy=9.209632,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978751, edge=0.000466, neigh=3.051966, align=5.201064, entropy=9.216900,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977856, edge=0.000467, neigh=3.183607, align=5.193499, entropy=9.224465,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977259, edge=0.000468, neigh=3.305294, align=5.190113, entropy=9.227827,s=1.000000, s_hat=1.000000
Time for optimization: 20.25s
Test results:
Top-1: 0.506
Top-10: 0.834
Top-30: 0.896
Top-50: 0.922
Top-100: 0.943
MRR: 0.622
Loading datasets/Douban.mat...
Distribution of given anchor nodes: [(0, 1), (1, 1), (2, 2), (3, 3), (4, 4), (5, 2), (6, 6), (7, 4), (8, 4), (9, 1), (10, 3), (11, 5), (12, 7), (13, 7), (14, 7), (15, 3), (16, 7), (17, 6), (18, 7), (19, 7), (20, 4), (21, 7), (22, 8), (23, 11), (24, 18), (25, 5), (26, 7), (27, 27), (28, 12), (29, 37)]
Run 1/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:11,  8.40it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:08, 10.90it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:07, 12.38it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:08, 10.45it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:08, 11.23it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:07, 11.27it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:07, 12.02it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:06, 13.47it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:05, 14.06it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:05, 13.69it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:05, 13.55it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:05, 13.86it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:04, 16.65it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:04, 14.21it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:04, 15.09it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:02<00:04, 13.72it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:04, 13.75it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:06,  9.34it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:09,  6.21it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:03<00:11,  5.43it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:04<00:14,  4.16it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:04<00:13,  4.19it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:04<00:07,  6.88it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:06,  7.99it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:09,  5.38it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:05<00:10,  4.80it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:06<00:11,  4.18it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:11,  4.29it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:11,  3.92it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.46it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:08,  5.97it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.37it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.13it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.27it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.23it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.88it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:11,  3.67it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:10,  3.83it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:09,  4.29it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.66it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.82it/s]
Time for cost matrix: 11.13s
Iter 0: wasserstein=1.172061, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990636, edge=0.000538, neigh=3.532541, align=4.015527, entropy=10.461801,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976659, edge=0.000479, neigh=3.174740, align=4.835987, entropy=9.589843,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974188, edge=0.000471, neigh=2.984973, align=5.097584, entropy=9.321637,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974072, edge=0.000466, neigh=2.928041, align=5.207951, entropy=9.210299,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974167, edge=0.000465, neigh=2.910108, align=5.275441, entropy=9.142549,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973791, edge=0.000467, neigh=3.046699, align=5.274227, entropy=9.143739,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973460, edge=0.000468, neigh=3.193709, align=5.267199, entropy=9.150766,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972687, edge=0.000469, neigh=3.334074, align=5.259098, entropy=9.158866,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972072, edge=0.000469, neigh=3.462512, align=5.255420, entropy=9.162486,s=1.000000, s_hat=1.000000
Time for optimization: 20.22s
Test results:
Top-1: 0.526
Top-10: 0.854
Top-30: 0.918
Top-50: 0.942
Top-100: 0.959
MRR: 0.642
Run 2/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:12,  7.88it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:10,  9.09it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:08, 11.31it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:06, 15.05it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:09,  9.48it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:10,  8.49it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:11,  7.31it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:11,  7.64it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:07, 10.47it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:06, 12.08it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:05, 13.55it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:05, 13.89it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:04, 16.33it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:02<00:04, 15.80it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:02<00:04, 16.67it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:02<00:05, 12.22it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:03<00:04, 12.89it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:03<00:04, 14.34it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:03<00:04, 12.61it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:03<00:05, 10.54it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:03<00:04, 11.96it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:03<00:04, 11.98it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:04<00:04, 12.38it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:04<00:04, 11.26it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:04<00:04,  9.70it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:04, 11.12it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:22,  2.18it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:17,  2.72it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:15,  3.01it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:16,  2.73it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.29it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.92it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:10,  4.27it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:08,  4.75it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:08,  4.76it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.83it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.52it/s]
Time for cost matrix: 8.81s
Iter 0: wasserstein=1.172357, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995412, edge=0.000538, neigh=3.324044, align=3.877548, entropy=10.599269,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981738, edge=0.000481, neigh=3.052807, align=4.722661, entropy=9.702932,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979346, edge=0.000472, neigh=2.851844, align=5.005873, entropy=9.413383,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979064, edge=0.000466, neigh=2.822705, align=5.132035, entropy=9.286247,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979081, edge=0.000464, neigh=2.799540, align=5.207568, entropy=9.210423,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979010, edge=0.000463, neigh=2.830255, align=5.252112, entropy=9.165853,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978560, edge=0.000464, neigh=2.981282, align=5.250928, entropy=9.167037,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977742, edge=0.000465, neigh=3.125430, align=5.244102, entropy=9.173862,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977098, edge=0.000465, neigh=3.243786, align=5.240319, entropy=9.177631,s=1.000000, s_hat=1.000000
Time for optimization: 20.00s
Test results:
Top-1: 0.484
Top-10: 0.813
Top-30: 0.886
Top-50: 0.909
Top-100: 0.927
MRR: 0.601
Run 3/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:16,  5.80it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:11,  8.32it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:15,  6.25it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:17,  5.22it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:16,  5.78it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:16,  5.67it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:14,  6.07it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.39it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  9.53it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:07, 11.16it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:09,  8.96it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:08,  9.43it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:09,  8.14it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:08,  8.78it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:03<00:07,  9.75it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:03<00:06, 11.55it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:06, 11.62it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:07,  9.85it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:03<00:07,  8.78it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:04<00:06, 10.13it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:06,  9.19it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:06,  8.92it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:08,  7.09it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:08,  7.06it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:08,  6.70it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:06,  8.58it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:05<00:05,  9.84it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:05, 10.00it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:05<00:03, 12.22it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:05,  8.87it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:06,  8.05it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:07,  6.66it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:08,  5.53it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:07,  6.00it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:07,  5.71it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:07,  5.56it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:07,  5.55it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:08,  5.20it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:07,  5.43it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:07,  5.63it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.80it/s]
Time for cost matrix: 9.24s
Iter 0: wasserstein=1.163733, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991183, edge=0.000543, neigh=3.161532, align=3.729193, entropy=10.748113,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977498, edge=0.000488, neigh=2.935364, align=4.589624, entropy=9.835980,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975273, edge=0.000477, neigh=2.746931, align=4.886130, entropy=9.533847,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975068, edge=0.000468, neigh=2.748650, align=5.028092, entropy=9.390331,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975078, edge=0.000466, neigh=2.723771, align=5.119061, entropy=9.298952,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974962, edge=0.000463, neigh=2.769009, align=5.177362, entropy=9.240605,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974350, edge=0.000465, neigh=2.907018, align=5.178003, entropy=9.239961,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973415, edge=0.000465, neigh=3.025544, align=5.174082, entropy=9.243882,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972824, edge=0.000466, neigh=3.137813, align=5.170595, entropy=9.247313,s=1.000000, s_hat=1.000000
Time for optimization: 17.73s
Test results:
Top-1: 0.385
Top-10: 0.763
Top-30: 0.856
Top-50: 0.889
Top-100: 0.917
MRR: 0.515
Run 4/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.28it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:08, 11.45it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:07, 13.36it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:06, 13.54it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:04, 17.81it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:05, 15.69it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:06, 13.38it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:05, 16.13it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:04, 16.26it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:05, 14.24it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:05, 13.35it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:05, 13.10it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:04, 15.13it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:04, 15.33it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:02<00:05, 12.37it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:05, 12.77it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:02<00:04, 13.75it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:02<00:04, 13.20it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:02<00:03, 14.82it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:03<00:04, 12.96it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:03<00:04, 12.43it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:03<00:05,  9.08it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:04<00:07,  6.31it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:04<00:07,  6.32it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:05,  7.85it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:04, 11.42it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.81it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.07it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.36it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:09,  4.67it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:08,  5.06it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:08,  4.90it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:08,  4.92it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:08,  5.00it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:07,  5.28it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:07,  5.45it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.48it/s]
Time for cost matrix: 8.38s
Iter 0: wasserstein=1.165142, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992888, edge=0.000542, neigh=3.137015, align=3.707262, entropy=10.770209,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979187, edge=0.000488, neigh=2.900176, align=4.574247, entropy=9.851254,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977039, edge=0.000476, neigh=2.707581, align=4.868921, entropy=9.551021,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976781, edge=0.000467, neigh=2.727230, align=5.012825, entropy=9.405592,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976737, edge=0.000465, neigh=2.709758, align=5.101042, entropy=9.316971,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976586, edge=0.000463, neigh=2.752180, align=5.162532, entropy=9.255435,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975987, edge=0.000465, neigh=2.889778, align=5.164548, entropy=9.253416,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975068, edge=0.000465, neigh=3.007954, align=5.159588, entropy=9.258376,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974471, edge=0.000466, neigh=3.120409, align=5.156682, entropy=9.261174,s=1.000000, s_hat=1.000000
Time for optimization: 20.37s
Test results:
Top-1: 0.388
Top-10: 0.755
Top-30: 0.857
Top-50: 0.893
Top-100: 0.927
MRR: 0.508
Run 5/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:37,  2.64it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:23,  4.17it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.83it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  7.94it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:08, 10.40it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:08, 10.83it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:07, 11.57it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:07, 12.26it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:07, 11.33it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:07, 10.64it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:06, 11.99it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:06, 11.67it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:06, 11.10it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:05, 13.96it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:04, 14.39it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:05, 12.81it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:03<00:06, 10.50it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:05, 11.42it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:05, 12.15it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:03<00:04, 14.90it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:03<00:04, 11.94it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:04<00:06,  8.94it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:04<00:07,  7.58it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:08,  6.11it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:07,  7.19it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:05<00:06,  8.16it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:05<00:05,  8.06it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:04,  9.65it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.78it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.44it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  5.02it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.57it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:09,  4.52it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:08,  4.92it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:09,  4.38it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:09,  4.46it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:08,  4.98it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.97it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.97it/s]
Time for cost matrix: 9.49s
Iter 0: wasserstein=1.163241, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991528, edge=0.000542, neigh=3.133459, align=3.695661, entropy=10.781493,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977578, edge=0.000489, neigh=2.901872, align=4.560556, entropy=9.864878,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975409, edge=0.000477, neigh=2.726186, align=4.855430, entropy=9.564435,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975137, edge=0.000468, neigh=2.733540, align=4.999396, entropy=9.419012,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975264, edge=0.000466, neigh=2.699442, align=5.084958, entropy=9.333053,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975178, edge=0.000463, neigh=2.756655, align=5.147402, entropy=9.270565,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974600, edge=0.000465, neigh=2.890318, align=5.149727, entropy=9.268237,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973657, edge=0.000466, neigh=3.007122, align=5.145466, entropy=9.272498,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973076, edge=0.000466, neigh=3.119035, align=5.141887, entropy=9.275995,s=1.000000, s_hat=1.000000
Time for optimization: 18.50s
Test results:
Top-1: 0.365
Top-10: 0.739
Top-30: 0.839
Top-50: 0.878
Top-100: 0.911
MRR: 0.490
Loading datasets/Douban.mat...
Distribution of given anchor nodes: [(0, 0), (1, 0), (2, 0), (3, 3), (4, 7), (5, 1), (6, 2), (7, 5), (8, 6), (9, 7), (10, 4), (11, 3), (12, 2), (13, 8), (14, 8), (15, 8), (16, 6), (17, 2), (18, 9), (19, 10), (20, 9), (21, 7), (22, 11), (23, 10), (24, 4), (25, 10), (26, 7), (27, 5), (28, 28), (29, 41)]
Run 1/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:06, 15.22it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:07, 12.83it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:06, 15.06it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:05, 15.54it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:06, 14.13it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:07, 11.98it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:06, 13.63it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:07, 11.24it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:05, 13.96it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:05, 15.19it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:10,  7.35it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:10,  7.00it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:03<00:13,  5.19it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:13,  5.00it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:10,  6.20it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:03<00:10,  6.62it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:08,  8.11it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:07,  7.99it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:07,  7.80it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:06,  9.67it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:04<00:05, 10.09it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:04<00:05, 11.01it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:04<00:04, 11.64it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:05<00:04, 12.23it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:05<00:03, 13.65it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:05<00:03, 14.43it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:04,  9.62it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:08,  5.51it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:08,  5.36it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  4.76it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:08,  5.54it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  3.84it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:15,  2.76it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:18,  2.39it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:15,  2.74it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:16,  2.54it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:16,  2.49it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:15,  2.66it/s]
Time for cost matrix: 10.55s
Iter 0: wasserstein=1.156679, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.986390, edge=0.000544, neigh=3.177158, align=3.704045, entropy=10.771968,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.973093, edge=0.000494, neigh=2.900833, align=4.559555, entropy=9.865381,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.970592, edge=0.000480, neigh=2.741369, align=4.855119, entropy=9.564273,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.970184, edge=0.000472, neigh=2.732793, align=4.991877, entropy=9.426324,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.970081, edge=0.000469, neigh=2.757786, align=5.083228, entropy=9.334752,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.969654, edge=0.000471, neigh=2.878307, align=5.084160, entropy=9.333805,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.969024, edge=0.000473, neigh=2.998954, align=5.079167, entropy=9.338797,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.968161, edge=0.000473, neigh=3.124409, align=5.075089, entropy=9.342875,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.967573, edge=0.000473, neigh=3.242312, align=5.073165, entropy=9.344612,s=1.000000, s_hat=1.000000
Time for optimization: 19.97s
Test results:
Top-1: 0.335
Top-10: 0.720
Top-30: 0.834
Top-50: 0.867
Top-100: 0.903
MRR: 0.456
Run 2/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 18.69it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:05, 17.03it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:05, 17.92it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:10,  8.77it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:11,  7.90it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:13,  6.47it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:10,  7.96it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:08,  9.70it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:07, 11.10it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:05, 13.59it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:05, 13.52it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:05, 13.99it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:04, 15.40it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:04, 16.28it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:02<00:04, 14.13it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:04, 14.32it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:03<00:03, 16.04it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:03, 17.94it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:03<00:03, 17.23it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:03<00:03, 16.21it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:03<00:03, 15.99it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:03<00:03, 16.53it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:03<00:03, 16.03it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 14.83it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 13.04it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:08,  6.04it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:09,  5.02it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:08,  5.33it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.26it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:14,  3.17it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.37it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:13,  3.17it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.31it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.52it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.65it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.47it/s]
Time for cost matrix: 8.14s
Iter 0: wasserstein=1.156565, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988765, edge=0.000545, neigh=3.116347, align=3.649496, entropy=10.826854,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.975415, edge=0.000495, neigh=2.881491, align=4.506914, entropy=9.918372,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973176, edge=0.000481, neigh=2.698520, align=4.805923, entropy=9.614441,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.972748, edge=0.000472, neigh=2.697420, align=4.947332, entropy=9.471043,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.972653, edge=0.000469, neigh=2.707407, align=5.045592, entropy=9.372400,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972254, edge=0.000470, neigh=2.820017, align=5.047561, entropy=9.370404,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971667, edge=0.000472, neigh=2.937146, align=5.040530, entropy=9.377434,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.970824, edge=0.000472, neigh=3.061869, align=5.035435, entropy=9.382529,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970197, edge=0.000473, neigh=3.177639, align=5.032959, entropy=9.384862,s=1.000000, s_hat=1.000000
Time for optimization: 17.76s
Test results:
Top-1: 0.309
Top-10: 0.696
Top-30: 0.812
Top-50: 0.841
Top-100: 0.873
MRR: 0.435
Run 3/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:04, 19.91it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:06, 15.92it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:05, 15.69it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:06, 15.33it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:06, 14.89it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:05, 15.64it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:00<00:05, 16.59it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:04, 17.51it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:04, 17.26it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:04, 18.23it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:04, 17.07it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:04, 16.64it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:04, 15.23it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:05, 13.66it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:10,  6.38it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:02<00:11,  6.07it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:10,  6.04it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:03<00:12,  5.22it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:13,  4.74it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:14,  4.25it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:14,  4.32it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:04<00:09,  6.34it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:04<00:11,  5.18it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:12,  4.51it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:08,  6.19it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:05<00:05,  9.32it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:05<00:05,  9.69it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:05<00:04, 10.98it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:05,  9.04it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  4.94it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.50it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.64it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:12,  3.57it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  4.03it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.34it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.23it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:10,  3.85it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.60it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.90it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.60it/s]
Time for cost matrix: 9.73s
Iter 0: wasserstein=1.157635, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989932, edge=0.000545, neigh=3.113304, align=3.639383, entropy=10.836852,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976662, edge=0.000496, neigh=2.872526, align=4.496758, entropy=9.928608,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974483, edge=0.000481, neigh=2.674785, align=4.798753, entropy=9.621813,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974013, edge=0.000471, neigh=2.694140, align=4.941379, entropy=9.476940,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973869, edge=0.000468, neigh=2.706821, align=5.042179, entropy=9.375808,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973438, edge=0.000470, neigh=2.825811, align=5.049323, entropy=9.368642,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972872, edge=0.000471, neigh=2.934886, align=5.044762, entropy=9.373202,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971977, edge=0.000472, neigh=3.058859, align=5.039486, entropy=9.378478,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971327, edge=0.000472, neigh=3.169928, align=5.036999, entropy=9.380811,s=1.000000, s_hat=1.000000
Time for optimization: 17.94s
Test results:
Top-1: 0.327
Top-10: 0.716
Top-30: 0.826
Top-50: 0.853
Top-100: 0.889
MRR: 0.450
Run 4/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:11,  8.91it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:06, 14.73it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:07, 12.86it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:06, 13.23it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:06, 14.33it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:05, 15.05it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:06, 12.58it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:09,  8.74it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:09,  8.71it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:08,  9.53it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:07, 10.51it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:09,  8.01it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:08,  8.40it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:09,  7.61it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:10,  6.88it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:09,  7.22it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:03<00:07,  8.55it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:03<00:09,  6.84it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:03<00:07,  8.69it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:04<00:09,  6.96it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:04<00:10,  5.82it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:11,  5.10it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:04<00:08,  7.25it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:04<00:07,  7.37it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:06,  8.01it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:06,  8.25it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:05<00:04, 10.74it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:05<00:04, 11.94it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:03, 14.83it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:05,  9.33it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.29it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:09,  5.07it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:08,  5.23it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:08,  5.57it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:07,  5.93it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:08,  5.39it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:07,  5.91it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:07,  5.42it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:07,  5.64it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:07,  5.31it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.83it/s]
Time for cost matrix: 9.01s
Iter 0: wasserstein=1.167875, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996279, edge=0.000541, neigh=3.126917, align=3.705200, entropy=10.772044,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982446, edge=0.000488, neigh=2.929211, align=4.566845, entropy=9.858576,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980070, edge=0.000475, neigh=2.782467, align=4.862497, entropy=9.556946,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979717, edge=0.000467, neigh=2.735917, align=5.014172, entropy=9.404113,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979664, edge=0.000465, neigh=2.720135, align=5.100093, entropy=9.317896,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979608, edge=0.000463, neigh=2.738418, align=5.161840, entropy=9.256126,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978929, edge=0.000464, neigh=2.864046, align=5.163763, entropy=9.254201,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977953, edge=0.000465, neigh=2.984575, align=5.158494, entropy=9.259469,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977341, edge=0.000465, neigh=3.097653, align=5.155952, entropy=9.261920,s=1.000000, s_hat=1.000000
Time for optimization: 17.22s
Test results:
Top-1: 0.393
Top-10: 0.769
Top-30: 0.872
Top-50: 0.902
Top-100: 0.932
MRR: 0.516
Run 5/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:09,  9.86it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:17,  5.58it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:14,  6.51it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:18,  5.03it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:23,  3.94it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:14,  6.18it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:16,  5.47it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:19,  4.68it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:21,  4.13it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:23,  3.77it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:24,  3.58it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:20,  4.21it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:18,  4.59it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:19,  4.29it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:22,  3.71it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:03<00:18,  4.36it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:04<00:11,  6.74it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:04<00:08,  9.03it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:08,  9.47it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:04<00:05, 12.86it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:04<00:05, 13.95it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:04<00:04, 15.16it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:04<00:05, 12.94it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:05, 12.04it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:05, 11.81it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:04, 13.23it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:06,  8.83it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:06,  8.57it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:05,  9.32it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:04, 10.85it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:04, 10.18it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:04, 11.47it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:06,  7.64it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:20,  2.43it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:14,  3.25it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:11,  4.03it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.59it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:09,  4.65it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:09,  4.64it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:09,  4.51it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:08,  4.72it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:08,  4.76it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.07it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.89it/s]
Time for cost matrix: 11.06s
Iter 0: wasserstein=1.161128, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991653, edge=0.000545, neigh=3.125806, align=3.675577, entropy=10.800701,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978424, edge=0.000494, neigh=2.863189, align=4.530185, entropy=9.895189,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976133, edge=0.000481, neigh=2.683185, align=4.825560, entropy=9.594184,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.975708, edge=0.000471, neigh=2.702177, align=4.963139, entropy=9.455139,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.975541, edge=0.000468, neigh=2.715850, align=5.059364, entropy=9.358622,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975103, edge=0.000470, neigh=2.830672, align=5.062104, entropy=9.355861,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.974558, edge=0.000471, neigh=2.943971, align=5.057237, entropy=9.360727,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.973691, edge=0.000472, neigh=3.067099, align=5.051798, entropy=9.366166,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973055, edge=0.000472, neigh=3.181529, align=5.049335, entropy=9.368515,s=1.000000, s_hat=1.000000
Time for optimization: 20.35s
Test results:
Top-1: 0.341
Top-10: 0.734
Top-30: 0.825
Top-50: 0.856
Top-100: 0.892
MRR: 0.465
Loading datasets/Douban.mat...
Distribution of given anchor nodes: [(0, 5), (1, 1), (2, 2), (3, 0), (4, 6), (5, 2), (6, 4), (7, 0), (8, 6), (9, 2), (10, 1), (11, 6), (12, 2), (13, 2), (14, 10), (15, 4), (16, 3), (17, 3), (18, 9), (19, 7), (20, 11), (21, 7), (22, 9), (23, 9), (24, 13), (25, 11), (26, 11), (27, 7), (28, 29), (29, 10), (30, 31)]
Run 1/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:15,  6.36it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:12,  7.56it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:11,  8.42it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:08, 10.88it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:07, 12.34it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:07, 12.99it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:06, 12.78it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:07, 11.27it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:08, 10.14it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:07, 11.39it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:07, 10.83it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:07, 11.14it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:06, 12.17it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:05, 12.95it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:05, 13.62it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:02<00:04, 15.07it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:02<00:04, 14.37it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:02<00:04, 14.02it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:03<00:07,  8.03it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:03<00:07,  7.98it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:04<00:11,  5.16it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:04<00:13,  4.30it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:04<00:13,  4.41it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:05<00:12,  4.63it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:05<00:10,  5.17it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:05<00:10,  5.43it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:05<00:09,  5.54it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:05<00:06,  7.90it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:06,  7.88it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:05<00:05,  9.55it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  9.05it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.57it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.19it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:11,  4.02it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.80it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:09,  4.67it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:08,  5.42it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:08,  5.14it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:08,  4.95it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:07,  5.29it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:07,  5.30it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.39it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.76it/s]
Time for cost matrix: 10.26s
Iter 0: wasserstein=1.167931, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996568, edge=0.000540, neigh=3.186010, align=3.762263, entropy=10.713717,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982923, edge=0.000484, neigh=2.962212, align=4.622049, entropy=9.803259,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980468, edge=0.000473, neigh=2.793111, align=4.919573, entropy=9.499645,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980089, edge=0.000467, neigh=2.740471, align=5.061569, entropy=9.356702,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979905, edge=0.000465, neigh=2.723417, align=5.150778, entropy=9.267210,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979679, edge=0.000464, neigh=2.747729, align=5.204072, entropy=9.213893,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979033, edge=0.000465, neigh=2.908105, align=5.202813, entropy=9.215151,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.978128, edge=0.000466, neigh=3.040430, align=5.197794, entropy=9.220170,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977524, edge=0.000466, neigh=3.153179, align=5.194975, entropy=9.222966,s=1.000000, s_hat=1.000000
Time for optimization: 21.58s
Test results:
Top-1: 0.434
Top-10: 0.799
Top-30: 0.864
Top-50: 0.892
Top-100: 0.921
MRR: 0.558
Run 2/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:08, 11.81it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:06, 13.81it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:08, 10.81it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:06, 13.34it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:06, 14.16it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:06, 13.62it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:05, 14.30it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:06, 13.36it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:08,  9.49it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:09,  8.06it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:11,  6.60it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:13,  5.80it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:10,  7.23it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:08,  8.73it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:07,  9.47it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:03<00:06, 10.13it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:03<00:07,  9.28it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:06, 10.56it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:05, 11.25it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:04, 12.71it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:04, 13.33it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:04<00:04, 11.46it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:04<00:04, 11.77it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:04, 13.15it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:04<00:04, 11.77it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:04<00:03, 13.09it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 13.02it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:04, 10.72it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.75it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:09,  4.89it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.28it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.47it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.70it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:15,  2.86it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:15,  2.84it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:12,  3.34it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.90it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.26it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.46it/s]
Time for cost matrix: 8.86s
Iter 0: wasserstein=1.163738, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995791, edge=0.000543, neigh=3.097990, align=3.659893, entropy=10.815146,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982847, edge=0.000491, neigh=2.872945, align=4.528418, entropy=9.896801,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980263, edge=0.000477, neigh=2.650645, align=4.833716, entropy=9.585652,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979786, edge=0.000467, neigh=2.675600, align=4.981979, entropy=9.436294,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979645, edge=0.000464, neigh=2.690917, align=5.078823, entropy=9.339165,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979081, edge=0.000466, neigh=2.803378, align=5.082382, entropy=9.335584,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978396, edge=0.000468, neigh=2.928351, align=5.077981, entropy=9.339983,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977575, edge=0.000468, neigh=3.058293, align=5.072717, entropy=9.345247,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976971, edge=0.000469, neigh=3.171025, align=5.070384, entropy=9.347524,s=1.000000, s_hat=1.000000
Time for optimization: 18.57s
Test results:
Top-1: 0.369
Top-10: 0.745
Top-30: 0.831
Top-50: 0.859
Top-100: 0.894
MRR: 0.498
Run 3/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 17.58it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:05, 16.73it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:04, 19.97it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:05, 16.22it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:06, 14.59it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:05, 15.49it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:04, 17.54it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:04, 18.18it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:04, 17.80it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:04, 17.86it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:04, 17.09it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:04, 17.30it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:03, 17.88it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:04, 17.04it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:02<00:07,  8.74it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:08,  8.11it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:09,  6.31it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:03<00:09,  6.70it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:03<00:07,  8.29it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:03<00:05, 10.08it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:03<00:04, 12.68it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:03<00:04, 13.07it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:03<00:04, 11.36it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:04<00:03, 13.25it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 12.39it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:08,  5.71it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:08,  5.52it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:08,  5.67it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:09,  5.08it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:08,  5.34it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:08,  5.39it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:07,  5.38it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:08,  5.21it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:07,  5.19it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:07,  5.34it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.39it/s]
Time for cost matrix: 7.73s
Iter 0: wasserstein=1.165456, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995403, edge=0.000543, neigh=3.093523, align=3.675906, entropy=10.801706,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981632, edge=0.000489, neigh=2.875929, align=4.547836, entropy=9.877678,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979180, edge=0.000476, neigh=2.710747, align=4.851063, entropy=9.568365,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978790, edge=0.000468, neigh=2.702889, align=4.999834, entropy=9.418436,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978679, edge=0.000466, neigh=2.678010, align=5.092841, entropy=9.325146,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978561, edge=0.000464, neigh=2.712558, align=5.154429, entropy=9.263536,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977943, edge=0.000465, neigh=2.873357, align=5.154181, entropy=9.263783,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977084, edge=0.000466, neigh=2.999656, align=5.146528, entropy=9.271436,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976366, edge=0.000467, neigh=3.117139, align=5.141824, entropy=9.276051,s=1.000000, s_hat=1.000000
Time for optimization: 18.96s
Test results:
Top-1: 0.378
Top-10: 0.746
Top-30: 0.866
Top-50: 0.892
Top-100: 0.916
MRR: 0.500
Run 4/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 17.48it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:11,  8.62it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:06, 13.70it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:09,  9.30it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:12,  7.13it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  8.82it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:08, 10.01it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:07, 11.19it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:06, 11.43it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:06, 12.96it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:05, 13.27it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:05, 12.59it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:05, 13.27it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:02<00:05, 12.50it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:02<00:05, 13.14it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:02<00:05, 12.85it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:04, 14.88it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:04, 14.22it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:04, 12.47it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:03<00:04, 13.26it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:03<00:04, 12.84it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:03<00:03, 13.68it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:04<00:03, 12.98it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:04<00:03, 15.74it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 11.85it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.56it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:19,  2.44it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:19,  2.35it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:14,  3.08it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.47it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.09it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.19it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:09,  4.62it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:07,  5.13it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.87it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.60it/s]
Time for cost matrix: 8.48s
Iter 0: wasserstein=1.170168, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.999107, edge=0.000542, neigh=3.159351, align=3.721530, entropy=10.754292,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.985773, edge=0.000488, neigh=2.938821, align=4.592093, entropy=9.833280,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.983541, edge=0.000475, neigh=2.730420, align=4.889549, entropy=9.530489,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.983247, edge=0.000467, neigh=2.718886, align=5.021387, entropy=9.396869,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.983153, edge=0.000465, neigh=2.715296, align=5.110165, entropy=9.307824,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982630, edge=0.000467, neigh=2.840529, align=5.112873, entropy=9.305093,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.982117, edge=0.000468, neigh=2.976539, align=5.108509, entropy=9.309455,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.981400, edge=0.000469, neigh=3.108182, align=5.102060, entropy=9.315904,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980765, edge=0.000469, neigh=3.222507, align=5.098669, entropy=9.319263,s=1.000000, s_hat=1.000000
Time for optimization: 17.31s
Test results:
Top-1: 0.439
Top-10: 0.770
Top-30: 0.860
Top-50: 0.889
Top-100: 0.923
MRR: 0.554
Run 5/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 18.01it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:06, 14.27it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:07, 12.63it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:06, 13.87it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:05, 15.18it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:06, 12.96it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:05, 14.19it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:05, 14.59it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:05, 13.67it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:05, 13.97it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:06, 11.71it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:08,  9.01it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:08,  8.92it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:09,  7.20it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:02<00:10,  6.46it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:08,  8.11it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:06, 10.72it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:05, 12.29it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:05, 11.79it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:04, 12.65it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:03<00:04, 11.86it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:03<00:04, 13.14it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:03, 13.37it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:04<00:03, 13.76it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:04<00:04, 11.44it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:04, 11.50it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:04, 11.06it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:07,  6.23it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:08,  5.62it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:08,  5.66it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:08,  5.72it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:08,  5.42it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:07,  5.86it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:07,  5.84it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:08,  4.84it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:09,  4.30it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:08,  4.97it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.22it/s]
Time for cost matrix: 8.40s
Iter 0: wasserstein=1.160760, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993500, edge=0.000543, neigh=3.064212, align=3.630074, entropy=10.847476,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979692, edge=0.000491, neigh=2.859468, align=4.497933, entropy=9.927446,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977265, edge=0.000476, neigh=2.704854, align=4.813931, entropy=9.606002,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976900, edge=0.000468, neigh=2.695061, align=4.966782, entropy=9.451619,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976736, edge=0.000466, neigh=2.671018, align=5.060213, entropy=9.357791,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976593, edge=0.000465, neigh=2.704352, align=5.128901, entropy=9.289065,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975907, edge=0.000466, neigh=2.852959, align=5.129807, entropy=9.288157,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974991, edge=0.000466, neigh=2.984225, align=5.124272, entropy=9.293692,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974331, edge=0.000467, neigh=3.100415, align=5.121264, entropy=9.296652,s=1.000000, s_hat=1.000000
Time for optimization: 20.29s
Test results:
Top-1: 0.336
Top-10: 0.730
Top-30: 0.839
Top-50: 0.872
Top-100: 0.903
MRR: 0.464
Loading datasets/Douban.mat...
Distribution of given anchor nodes: [(0, 2), (1, 1), (2, 4), (3, 0), (4, 3), (5, 0), (6, 3), (7, 1), (8, 1), (9, 1), (10, 8), (11, 4), (12, 2), (13, 4), (14, 5), (15, 2), (16, 5), (17, 5), (18, 5), (19, 10), (20, 11), (21, 11), (22, 8), (23, 12), (24, 13), (25, 9), (26, 12), (27, 11), (28, 29), (29, 6), (30, 35)]
Run 1/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:17,  5.82it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:08, 11.77it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:06, 13.75it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:06, 15.27it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:06, 14.60it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:04, 17.73it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:05, 16.21it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:05, 15.87it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:06, 12.95it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:06, 12.70it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:05, 13.14it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:05, 12.61it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:05, 13.82it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:05, 13.26it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:04, 14.53it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:02<00:04, 13.95it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:04, 14.86it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:02<00:04, 14.20it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:02<00:04, 14.48it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:03<00:04, 13.00it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:03<00:07,  7.77it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:07,  7.49it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:04<00:07,  6.99it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:04<00:08,  5.89it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:04<00:09,  5.24it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:05<00:08,  5.59it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:07,  6.08it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:04,  9.78it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.10it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.50it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  4.91it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:09,  4.64it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:10,  4.25it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:09,  4.51it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:08,  5.19it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:09,  4.23it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:09,  4.17it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.56it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.24it/s]
Time for cost matrix: 9.12s
Iter 0: wasserstein=1.157003, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.990447, edge=0.000545, neigh=3.065670, align=3.602566, entropy=10.874021,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977360, edge=0.000496, neigh=2.831994, align=4.469513, entropy=9.955800,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974986, edge=0.000481, neigh=2.648544, align=4.783370, entropy=9.637011,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974382, edge=0.000470, neigh=2.653285, align=4.932331, entropy=9.485971,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974162, edge=0.000468, neigh=2.674109, align=5.032836, entropy=9.385150,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973637, edge=0.000470, neigh=2.812414, align=5.032462, entropy=9.385503,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973133, edge=0.000472, neigh=2.927542, align=5.026319, entropy=9.391645,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972301, edge=0.000472, neigh=3.040525, align=5.019948, entropy=9.398016,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.971606, edge=0.000473, neigh=3.152422, align=5.016129, entropy=9.401674,s=1.000000, s_hat=1.000000
Time for optimization: 18.81s
Test results:
Top-1: 0.298
Top-10: 0.686
Top-30: 0.799
Top-50: 0.823
Top-100: 0.865
MRR: 0.423
Run 2/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.61it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:07, 13.30it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:05, 16.02it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:05, 17.39it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:05, 17.40it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:05, 17.20it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:04, 19.34it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:05, 16.27it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:07, 11.47it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:06, 12.64it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:05, 12.98it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:05, 12.98it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:07,  9.07it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:02<00:06, 10.26it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:02<00:05, 11.45it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:04, 14.14it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:02<00:05, 12.43it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:07,  7.73it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:09,  5.94it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:03<00:09,  6.33it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:04<00:07,  7.67it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:04<00:08,  6.49it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:08,  6.09it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:04<00:09,  5.44it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:10,  4.74it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:05<00:09,  5.32it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:05<00:10,  4.76it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:11,  4.22it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:09,  4.82it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:06<00:05,  8.50it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:11,  4.11it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:09,  5.08it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:08,  5.53it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:08,  5.13it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:08,  5.25it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:09,  4.84it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.02it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:10,  3.94it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  4.08it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.08it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.04it/s]
Time for cost matrix: 9.91s
Iter 0: wasserstein=1.171883, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.999615, edge=0.000540, neigh=3.210159, align=3.762080, entropy=10.715058,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.985789, edge=0.000484, neigh=2.991261, align=4.622911, entropy=9.802842,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.983417, edge=0.000473, neigh=2.801581, align=4.924558, entropy=9.495209,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.983074, edge=0.000466, neigh=2.773762, align=5.058216, entropy=9.360169,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.983106, edge=0.000465, neigh=2.732009, align=5.143811, entropy=9.274193,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.983086, edge=0.000463, neigh=2.738221, align=5.194246, entropy=9.223720,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.982524, edge=0.000464, neigh=2.876648, align=5.194012, entropy=9.223952,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.981685, edge=0.000465, neigh=3.021170, align=5.189392, entropy=9.228572,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.981042, edge=0.000465, neigh=3.135462, align=5.187141, entropy=9.230798,s=1.000000, s_hat=1.000000
Time for optimization: 18.67s
Test results:
Top-1: 0.448
Top-10: 0.804
Top-30: 0.893
Top-50: 0.917
Top-100: 0.939
MRR: 0.564
Run 3/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.69it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:10,  8.92it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:09, 10.24it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:07, 11.89it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:07, 12.65it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:06, 12.78it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:06, 12.75it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:06, 13.68it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:06, 12.20it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:05, 13.80it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:05, 14.45it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:04, 15.58it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:04, 15.33it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:04, 15.68it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:05, 14.19it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:04, 13.97it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:02<00:04, 13.80it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:04, 14.26it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:02<00:05, 12.49it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:03<00:04, 12.45it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:03<00:04, 12.68it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:03<00:04, 12.69it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:03<00:03, 13.99it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:03<00:03, 14.62it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:04<00:03, 12.13it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 12.26it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:08,  5.88it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:06,  6.96it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:08,  5.28it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:08,  5.48it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:07,  5.85it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:07,  5.55it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:08,  5.16it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:07,  5.35it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:08,  4.91it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:08,  4.90it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.63it/s]
Time for cost matrix: 8.28s
Iter 0: wasserstein=1.159130, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991266, edge=0.000544, neigh=3.085053, align=3.644428, entropy=10.833472,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.977579, edge=0.000491, neigh=2.885003, align=4.511708, entropy=9.913826,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975207, edge=0.000477, neigh=2.717108, align=4.825332, entropy=9.594814,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974765, edge=0.000468, neigh=2.702075, align=4.975221, entropy=9.443202,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974568, edge=0.000466, neigh=2.670652, align=5.070841, entropy=9.347167,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974403, edge=0.000464, neigh=2.705209, align=5.137194, entropy=9.280772,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973716, edge=0.000466, neigh=2.857980, align=5.139434, entropy=9.278530,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972816, edge=0.000466, neigh=2.986105, align=5.134469, entropy=9.283495,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972186, edge=0.000467, neigh=3.103992, align=5.131310, entropy=9.286611,s=1.000000, s_hat=1.000000
Time for optimization: 22.72s
Test results:
Top-1: 0.331
Top-10: 0.707
Top-30: 0.818
Top-50: 0.850
Top-100: 0.883
MRR: 0.454
Run 4/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:43,  2.25it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:45,  2.17it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:01<00:46,  2.08it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:01<00:44,  2.14it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:02<00:35,  2.69it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:02<00:32,  2.93it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:02<00:32,  2.87it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:03<00:32,  2.82it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:03<00:26,  3.38it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:03<00:24,  3.73it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:03<00:25,  3.43it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:04<00:28,  3.11it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:04<00:28,  3.01it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:04<00:26,  3.19it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:05<00:27,  3.10it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:05<00:26,  3.13it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:05<00:27,  2.98it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:05<00:21,  3.75it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:06<00:19,  4.13it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:06<00:17,  4.49it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:06<00:20,  3.80it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:07<00:22,  3.49it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:07<00:22,  3.40it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:07<00:22,  3.33it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:08<00:26,  2.82it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:08<00:26,  2.81it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:08<00:27,  2.63it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:09<00:29,  2.42it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:09<00:28,  2.51it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:10<00:27,  2.57it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:10<00:25,  2.70it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:10<00:24,  2.83it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:11<00:23,  2.91it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:11<00:22,  2.89it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:11<00:21,  3.01it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:12<00:21,  2.95it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:12<00:21,  2.99it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:12<00:21,  2.93it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:12<00:18,  3.34it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:13<00:16,  3.55it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:13<00:16,  3.51it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:13<00:18,  3.21it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:14<00:19,  2.97it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:14<00:15,  3.65it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:15<00:17,  3.08it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:15<00:19,  2.67it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:15<00:17,  3.00it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:16<00:15,  3.20it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:16<00:14,  3.40it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:16<00:14,  3.34it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:17<00:14,  3.32it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:17<00:12,  3.75it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:17<00:15,  3.07it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.63it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:20,  2.37it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:18,  2.50it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:18,  2.55it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:15,  2.97it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:17,  2.47it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:19,  2.18it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:03<00:21,  1.95it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:04<00:21,  1.88it/s]Computing product RWR scores:  20%|██        | 10/50 [00:04<00:21,  1.89it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:20,  1.99it/s]
Time for cost matrix: 24.92s
Iter 0: wasserstein=1.170241, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996775, edge=0.000537, neigh=3.217799, align=3.788712, entropy=10.687777,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982915, edge=0.000481, neigh=2.993891, align=4.662096, entropy=9.763379,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980840, edge=0.000470, neigh=2.802954, align=4.958089, entropy=9.461439,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.980704, edge=0.000463, neigh=2.748231, align=5.089497, entropy=9.328858,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.980704, edge=0.000462, neigh=2.744797, align=5.164308, entropy=9.253694,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.980377, edge=0.000464, neigh=2.858127, align=5.163910, entropy=9.254056,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.979890, edge=0.000466, neigh=2.976651, align=5.160036, entropy=9.257928,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.979124, edge=0.000466, neigh=3.101026, align=5.153922, entropy=9.264042,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.978525, edge=0.000467, neigh=3.208597, align=5.150817, entropy=9.267113,s=1.000000, s_hat=1.000000
Time for optimization: 32.87s
Test results:
Top-1: 0.454
Top-10: 0.792
Top-30: 0.878
Top-50: 0.899
Top-100: 0.926
MRR: 0.573
Run 5/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:05, 19.48it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:08, 10.87it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:15,  6.22it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:01<00:15,  5.85it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:19,  4.67it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:20,  4.52it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:22,  4.05it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:02<00:24,  3.64it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:02<00:23,  3.73it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:25,  3.43it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:03<00:27,  3.18it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:03<00:21,  3.88it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:03<00:21,  3.86it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:03<00:23,  3.56it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:04<00:23,  3.42it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:04<00:20,  3.86it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:04<00:16,  4.70it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:04<00:12,  6.32it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:05<00:14,  5.26it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:05<00:16,  4.44it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:05<00:18,  4.08it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:06<00:12,  5.75it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:06<00:12,  5.79it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:06<00:09,  7.13it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:06<00:12,  5.61it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:07<00:17,  3.94it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:07<00:19,  3.39it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:07<00:20,  3.10it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:08<00:22,  2.83it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:08<00:21,  2.94it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:09<00:15,  3.99it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:09<00:14,  4.13it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:09<00:14,  4.12it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:09<00:14,  4.09it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:09<00:14,  3.92it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:10<00:12,  4.62it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:10<00:10,  5.23it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:10<00:11,  4.85it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:10<00:12,  4.35it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:10<00:10,  5.14it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:11<00:08,  5.79it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:11<00:08,  6.10it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:11<00:07,  6.26it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:05,  8.62it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:11<00:10,  4.60it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:30,  1.61it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:01<00:28,  1.71it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:28,  1.63it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:02<00:27,  1.67it/s]Computing product RWR scores:  10%|█         | 5/50 [00:02<00:26,  1.73it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:03<00:25,  1.74it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:04<00:25,  1.69it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:04<00:27,  1.55it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:05<00:26,  1.56it/s]Computing product RWR scores:  20%|██        | 10/50 [00:05<00:22,  1.79it/s]Computing product RWR scores:  20%|██        | 10/50 [00:06<00:26,  1.54it/s]
Time for cost matrix: 19.96s
Iter 0: wasserstein=1.154771, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989830, edge=0.000546, neigh=3.056283, align=3.579872, entropy=10.896665,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976576, edge=0.000498, neigh=2.809062, align=4.444348, entropy=9.980679,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.974140, edge=0.000482, neigh=2.622112, align=4.759799, entropy=9.660400,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973610, edge=0.000472, neigh=2.643428, align=4.912334, entropy=9.506030,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973334, edge=0.000469, neigh=2.657914, align=5.021823, entropy=9.396167,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972753, edge=0.000471, neigh=2.789243, align=5.025322, entropy=9.392643,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972050, edge=0.000473, neigh=2.911375, align=5.019682, entropy=9.398282,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971175, edge=0.000473, neigh=3.023941, align=5.013985, entropy=9.403979,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970579, edge=0.000474, neigh=3.136990, align=5.011108, entropy=9.406727,s=1.000000, s_hat=1.000000
Time for optimization: 32.73s
Test results:
Top-1: 0.268
Top-10: 0.678
Top-30: 0.800
Top-50: 0.835
Top-100: 0.882
MRR: 0.397
Loading datasets/Douban.mat...
Distribution of given anchor nodes: [(0, 0), (1, 2), (2, 1), (3, 2), (4, 1), (5, 4), (6, 5), (7, 3), (8, 3), (9, 1), (10, 7), (11, 4), (12, 4), (13, 4), (14, 5), (15, 9), (16, 9), (17, 9), (18, 7), (19, 5), (20, 5), (21, 8), (22, 9), (23, 2), (24, 6), (25, 14), (26, 8), (27, 28), (28, 17), (29, 41)]
Run 1/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:14,  6.69it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:12,  7.58it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:09,  9.75it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:07, 11.82it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:08, 10.38it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:06, 12.73it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  9.65it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:08, 10.56it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:11,  7.46it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:02<00:11,  6.86it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:13,  5.79it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:15,  5.09it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:15,  5.11it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:03<00:10,  6.91it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:03<00:08,  8.63it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:03<00:06, 10.29it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:05, 11.89it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:05, 13.25it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:03<00:04, 13.27it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:04, 14.27it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:04<00:04, 13.66it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:04<00:04, 14.33it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:04<00:03, 14.45it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:04<00:03, 13.98it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:05,  8.97it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:05<00:07,  6.80it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:05<00:07,  6.57it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:05<00:06,  7.03it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:05<00:06,  7.20it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:05,  8.93it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:18,  2.70it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:19,  2.51it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:16,  2.86it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:17,  2.63it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:13,  3.36it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:11,  3.89it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:10,  3.96it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:09,  4.24it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  4.06it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.99it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.37it/s]
Time for cost matrix: 10.34s
Iter 0: wasserstein=1.164609, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995315, edge=0.000543, neigh=3.070588, align=3.641662, entropy=10.834646,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982059, edge=0.000492, neigh=2.840962, align=4.509577, entropy=9.915834,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979833, edge=0.000478, neigh=2.658034, align=4.811550, entropy=9.608812,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979369, edge=0.000469, neigh=2.662333, align=4.951375, entropy=9.467058,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979226, edge=0.000467, neigh=2.661444, align=5.044368, entropy=9.373629,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979067, edge=0.000464, neigh=2.698411, align=5.105772, entropy=9.312194,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978586, edge=0.000465, neigh=2.836491, align=5.105802, entropy=9.312162,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977794, edge=0.000466, neigh=2.947378, align=5.100501, entropy=9.317463,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977116, edge=0.000467, neigh=3.056235, align=5.097476, entropy=9.320343,s=1.000000, s_hat=1.000000
Time for optimization: 19.46s
Test results:
Top-1: 0.337
Top-10: 0.730
Top-30: 0.828
Top-50: 0.858
Top-100: 0.893
MRR: 0.465
Run 2/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:11,  8.84it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:07, 12.58it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:07, 13.05it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:06, 14.67it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:06, 13.65it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:06, 14.52it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:06, 13.87it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:08,  9.83it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:08,  9.55it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:07, 11.23it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:06, 12.83it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:05, 13.52it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:06, 10.57it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:06, 11.38it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:02<00:09,  7.27it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:08,  7.97it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:03<00:06,  9.45it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:05, 11.96it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:05, 11.77it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:04, 12.62it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:03<00:04, 12.32it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:03<00:04, 12.67it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:04, 11.15it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:04<00:04, 10.70it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:04<00:03, 12.02it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:04, 11.34it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:13,  3.67it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:10,  4.47it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.42it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.39it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:11,  4.05it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:08,  4.93it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:08,  4.97it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:11,  3.54it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.95it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:12,  3.18it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.12it/s]
Time for cost matrix: 8.91s
Iter 0: wasserstein=1.152976, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.988044, edge=0.000546, neigh=3.076813, align=3.605978, entropy=10.870352,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.974852, edge=0.000497, neigh=2.821143, align=4.461646, entropy=9.963690,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.972285, edge=0.000481, neigh=2.620128, align=4.777707, entropy=9.641906,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.971722, edge=0.000471, neigh=2.643201, align=4.928080, entropy=9.490150,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.971583, edge=0.000468, neigh=2.673327, align=5.031699, entropy=9.386283,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.971143, edge=0.000470, neigh=2.796334, align=5.034754, entropy=9.383211,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.970467, edge=0.000471, neigh=2.915586, align=5.028409, entropy=9.389555,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.969618, edge=0.000472, neigh=3.024438, align=5.023382, entropy=9.394582,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.968957, edge=0.000472, neigh=3.129320, align=5.020636, entropy=9.397196,s=1.000000, s_hat=1.000000
Time for optimization: 18.91s
Test results:
Top-1: 0.259
Top-10: 0.665
Top-30: 0.782
Top-50: 0.820
Top-100: 0.866
MRR: 0.389
Run 3/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:07, 13.76it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:10,  9.41it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:08, 10.86it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:08, 11.31it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:06, 13.34it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:06, 13.13it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:06, 13.39it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:05, 14.32it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:07, 10.86it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:06, 12.48it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:07,  9.91it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:07,  9.79it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:08,  8.36it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:11,  6.45it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:10,  6.93it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:03<00:09,  7.28it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:03<00:07,  8.91it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:06,  9.33it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:06, 10.35it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:05, 11.29it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:04<00:05, 10.56it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:04<00:04, 11.68it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:04<00:05,  9.96it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:04, 11.19it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:04<00:04, 11.78it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:04<00:03, 12.46it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 12.68it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:04, 10.24it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  4.96it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:09,  5.32it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:07,  6.38it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:07,  6.23it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:08,  5.56it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:12,  3.63it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:10,  4.10it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:12,  3.29it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:11,  3.71it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.72it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:10,  3.74it/s]
Time for cost matrix: 9.04s
Iter 0: wasserstein=1.161494, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992126, edge=0.000544, neigh=3.103586, align=3.665850, entropy=10.810650,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979053, edge=0.000494, neigh=2.852422, align=4.524259, entropy=9.901240,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.976941, edge=0.000481, neigh=2.654556, align=4.822452, entropy=9.598149,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976536, edge=0.000471, neigh=2.685214, align=4.960884, entropy=9.457457,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976413, edge=0.000468, neigh=2.694167, align=5.056447, entropy=9.361542,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.975931, edge=0.000469, neigh=2.806876, align=5.059329, entropy=9.358636,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.975389, edge=0.000471, neigh=2.925495, align=5.053599, entropy=9.364365,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.974543, edge=0.000471, neigh=3.042171, align=5.047220, entropy=9.370744,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.973932, edge=0.000472, neigh=3.150782, align=5.043748, entropy=9.374099,s=1.000000, s_hat=1.000000
Time for optimization: 17.81s
Test results:
Top-1: 0.343
Top-10: 0.727
Top-30: 0.827
Top-50: 0.855
Top-100: 0.892
MRR: 0.470
Run 4/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.66it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:10,  9.29it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:07, 12.75it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:14,  6.38it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:13,  6.91it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:10,  8.47it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:09,  9.54it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:07, 10.77it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:07, 11.34it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:06, 13.06it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:02<00:06, 13.07it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:02<00:06, 12.05it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:05, 13.23it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:05, 13.53it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:05, 13.13it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:05, 11.71it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:03<00:05, 11.72it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:05, 12.67it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:04, 13.49it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:04, 12.70it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:04, 14.01it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:03<00:04, 11.85it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:04<00:04, 11.51it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:04, 12.17it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:04<00:04, 12.27it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:04<00:03, 13.64it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:04, 11.36it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:24,  2.01it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:21,  2.20it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:01<00:15,  2.98it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.31it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:12,  3.73it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:10,  4.04it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:09,  4.52it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:08,  4.74it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:09,  4.41it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:08,  4.72it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.59it/s]
Time for cost matrix: 8.72s
Iter 0: wasserstein=1.154649, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989480, edge=0.000546, neigh=3.067695, align=3.593447, entropy=10.882844,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976282, edge=0.000498, neigh=2.813107, align=4.446481, entropy=9.978642,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973785, edge=0.000482, neigh=2.615573, align=4.764909, entropy=9.655214,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973094, edge=0.000471, neigh=2.647128, align=4.918203, entropy=9.500148,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973020, edge=0.000468, neigh=2.667278, align=5.021304, entropy=9.396685,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.972565, edge=0.000470, neigh=2.782336, align=5.024557, entropy=9.393409,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.971951, edge=0.000471, neigh=2.903648, align=5.018415, entropy=9.399549,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971031, edge=0.000472, neigh=3.015878, align=5.013563, entropy=9.404401,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970433, edge=0.000472, neigh=3.122962, align=5.011016, entropy=9.406817,s=1.000000, s_hat=1.000000
Time for optimization: 17.59s
Test results:
Top-1: 0.283
Top-10: 0.699
Top-30: 0.803
Top-50: 0.837
Top-100: 0.876
MRR: 0.412
Run 5/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:06, 14.33it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:06, 15.57it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:07, 12.70it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:06, 14.53it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:05, 15.43it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:05, 14.87it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:06, 13.71it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:05, 14.56it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:05, 14.96it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:04, 15.88it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:07, 10.79it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:06, 11.65it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:07,  9.57it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:08,  8.24it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:02<00:06, 10.52it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:05, 12.30it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:02<00:04, 13.30it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:03<00:04, 13.55it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:03<00:03, 15.42it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:03<00:03, 14.83it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:03<00:03, 15.34it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:03<00:03, 13.42it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:03<00:03, 14.47it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:03<00:03, 15.21it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 13.09it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:09,  5.36it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:08,  5.58it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:09,  5.10it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:10,  4.47it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:08,  5.06it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:08,  5.45it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:07,  5.64it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:07,  5.42it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:06,  5.90it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:07,  5.35it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.30it/s]
Time for cost matrix: 7.57s
Iter 0: wasserstein=1.163298, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994067, edge=0.000542, neigh=3.085060, align=3.657693, entropy=10.819891,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980470, edge=0.000489, neigh=2.875005, align=4.535342, entropy=9.890227,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978148, edge=0.000475, neigh=2.715374, align=4.846506, entropy=9.573539,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977737, edge=0.000467, neigh=2.697933, align=4.996446, entropy=9.421966,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977575, edge=0.000464, neigh=2.674276, align=5.082099, entropy=9.335910,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977447, edge=0.000463, neigh=2.703976, align=5.147610, entropy=9.270357,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976805, edge=0.000465, neigh=2.861871, align=5.149307, entropy=9.268657,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975923, edge=0.000465, neigh=2.984993, align=5.142991, entropy=9.274973,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975251, edge=0.000466, neigh=3.101308, align=5.138323, entropy=9.279528,s=1.000000, s_hat=1.000000
Time for optimization: 19.17s
Test results:
Top-1: 0.360
Top-10: 0.737
Top-30: 0.840
Top-50: 0.870
Top-100: 0.909
MRR: 0.485
Loading datasets/Douban.mat...
Distribution of given anchor nodes: [(0, 0), (1, 1), (2, 3), (3, 5), (4, 2), (5, 5), (6, 8), (7, 4), (8, 3), (9, 4), (10, 8), (11, 4), (12, 0), (13, 11), (14, 7), (15, 5), (16, 11), (17, 5), (18, 12), (19, 10), (20, 5), (21, 8), (22, 8), (23, 9), (24, 29), (25, 10), (26, 9), (27, 37)]
Run 1/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:21,  4.61it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:14,  6.64it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:12,  7.72it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:16,  5.69it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:16,  5.78it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:10,  8.81it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:01<00:10,  8.40it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:12,  7.10it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:01<00:13,  6.57it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:15,  5.77it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:02<00:16,  5.24it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:02<00:15,  5.44it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:02<00:16,  5.28it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:02<00:17,  4.93it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:02<00:16,  5.15it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:02<00:14,  5.71it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:03<00:13,  5.96it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:03<00:13,  5.66it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:03<00:13,  5.69it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:03<00:14,  5.23it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:04<00:16,  4.61it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:04<00:16,  4.44it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:04<00:16,  4.56it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:04<00:11,  6.35it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:04<00:09,  7.55it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:05<00:07,  9.68it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:05<00:06,  9.97it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:05<00:06, 10.19it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:05<00:05, 11.61it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:05<00:05, 11.29it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:05<00:05, 11.10it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:06<00:05, 10.67it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:06<00:04, 11.01it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:06<00:04, 11.65it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:06<00:04, 10.22it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:06<00:04, 10.24it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:07<00:06,  7.43it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:10,  4.76it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.48it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.71it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:15,  3.03it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:16,  2.68it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:13,  3.25it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:12,  3.49it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:11,  3.60it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:10,  3.80it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:11,  3.53it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:12,  3.19it/s]
Time for cost matrix: 11.68s
Iter 0: wasserstein=1.166229, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998038, edge=0.000542, neigh=3.074783, align=3.647386, entropy=10.828579,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984688, edge=0.000489, neigh=2.875726, align=4.515370, entropy=9.910004,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982461, edge=0.000475, neigh=2.682330, align=4.825164, entropy=9.594981,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982024, edge=0.000467, neigh=2.671644, align=4.972666, entropy=9.445627,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.981967, edge=0.000464, neigh=2.661586, align=5.065566, entropy=9.352424,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981778, edge=0.000462, neigh=2.688375, align=5.126114, entropy=9.291851,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.981211, edge=0.000463, neigh=2.819576, align=5.127165, entropy=9.290799,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.980356, edge=0.000464, neigh=2.945441, align=5.121174, entropy=9.296790,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979727, edge=0.000464, neigh=3.050648, align=5.118249, entropy=9.299669,s=1.000000, s_hat=1.000000
Time for optimization: 20.18s
Test results:
Top-1: 0.368
Top-10: 0.747
Top-30: 0.841
Top-50: 0.866
Top-100: 0.905
MRR: 0.495
Run 2/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.20it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:22,  4.33it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:26,  3.61it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:22,  4.21it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:01<00:14,  6.68it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:01<00:10,  8.37it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:09,  9.85it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:07, 11.94it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:07, 11.22it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:06, 12.33it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:06, 13.24it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:02<00:06, 12.61it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:05, 13.70it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:02<00:05, 13.36it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:02<00:05, 13.70it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:05, 14.19it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:02<00:04, 14.10it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:02<00:04, 15.12it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:03<00:04, 14.67it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:03<00:04, 13.16it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:03<00:04, 13.61it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:03<00:04, 14.69it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:03<00:03, 14.55it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:03<00:03, 14.40it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:04<00:04, 11.83it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:04<00:04, 12.39it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:04<00:03, 15.44it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:02, 16.21it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 11.86it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:18,  2.60it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:13,  3.54it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:12,  3.74it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:01<00:13,  3.35it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:15,  2.94it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:02<00:16,  2.62it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:02<00:16,  2.58it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:02<00:13,  3.05it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:02<00:12,  3.36it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:10,  3.69it/s]Computing product RWR scores:  20%|██        | 10/50 [00:03<00:13,  3.06it/s]
Time for cost matrix: 9.41s
Iter 0: wasserstein=1.158247, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.989885, edge=0.000544, neigh=3.113296, align=3.663590, entropy=10.813922,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.976323, edge=0.000491, neigh=2.874542, align=4.523839, entropy=9.901708,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.973682, edge=0.000477, neigh=2.696154, align=4.838981, entropy=9.580509,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.973235, edge=0.000468, neigh=2.691402, align=4.983946, entropy=9.434316,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.973276, edge=0.000466, neigh=2.655908, align=5.074052, entropy=9.343935,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.973054, edge=0.000463, neigh=2.685942, align=5.136861, entropy=9.281104,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.972371, edge=0.000464, neigh=2.808013, align=5.140815, entropy=9.277149,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.971426, edge=0.000465, neigh=2.921848, align=5.136259, entropy=9.281705,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.970762, edge=0.000466, neigh=3.034115, align=5.133508, entropy=9.284385,s=1.000000, s_hat=1.000000
Time for optimization: 20.23s
Test results:
Top-1: 0.330
Top-10: 0.716
Top-30: 0.823
Top-50: 0.855
Top-100: 0.887
MRR: 0.461
Run 3/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:26,  3.70it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:12,  7.89it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:08, 11.25it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:07, 12.09it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:07, 12.41it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:06, 14.01it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:01<00:07, 11.16it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:01<00:07, 11.92it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:06, 12.55it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:01<00:06, 12.18it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:01<00:06, 12.37it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:06, 12.31it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:05, 12.74it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:06, 11.06it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:06, 10.47it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:06, 11.05it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:02<00:06, 11.08it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:06, 10.59it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:05, 11.70it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:04, 13.26it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:04, 13.58it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:03<00:04, 13.66it/s]Computing separate RWR scores:  45%|████▌     | 45/100 [00:03<00:05, 10.28it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:04<00:05,  9.98it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:04<00:06,  8.01it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:04<00:07,  6.68it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:04<00:07,  6.39it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:05<00:07,  6.77it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:05<00:04, 10.11it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:12,  3.93it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:09,  4.93it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:10,  4.64it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:09,  4.70it/s]Computing product RWR scores:  10%|█         | 5/50 [00:01<00:09,  4.92it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:01<00:08,  5.02it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:01<00:08,  4.89it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:08,  5.20it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:07,  5.81it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:07,  5.12it/s]Computing product RWR scores:  20%|██        | 10/50 [00:02<00:09,  4.33it/s]
Time for cost matrix: 8.94s
Iter 0: wasserstein=1.161533, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994334, edge=0.000543, neigh=3.070937, align=3.631644, entropy=10.843274,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981312, edge=0.000491, neigh=2.883371, align=4.502387, entropy=9.922713,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978774, edge=0.000476, neigh=2.665110, align=4.814747, entropy=9.605254,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978328, edge=0.000467, neigh=2.661025, align=4.968972, entropy=9.449280,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978015, edge=0.000464, neigh=2.676904, align=5.069618, entropy=9.348368,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977389, edge=0.000466, neigh=2.809960, align=5.072416, entropy=9.345549,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976749, edge=0.000468, neigh=2.939906, align=5.065629, entropy=9.352335,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975890, edge=0.000469, neigh=3.067294, align=5.058804, entropy=9.359160,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975335, edge=0.000469, neigh=3.185396, align=5.055568, entropy=9.362320,s=1.000000, s_hat=1.000000
Time for optimization: 19.88s
Test results:
Top-1: 0.363
Top-10: 0.715
Top-30: 0.806
Top-50: 0.836
Top-100: 0.886
MRR: 0.481
Run 4/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:30,  3.23it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:21,  4.52it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:12,  7.94it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:11,  8.48it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:11,  8.44it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:08, 10.80it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:01<00:07, 11.83it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:01<00:07, 11.84it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:01<00:07, 11.30it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:01<00:07, 11.42it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:01<00:06, 13.02it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:07, 10.75it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:02<00:07, 10.05it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:02<00:05, 12.51it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:02<00:05, 13.05it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:02<00:05, 12.62it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:04, 13.80it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:02<00:05, 12.73it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:03<00:04, 13.55it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:03<00:04, 13.74it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:03<00:04, 13.16it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:03<00:04, 14.49it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:03<00:03, 16.95it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:03<00:02, 19.31it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:03<00:02, 21.06it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:02, 18.85it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:04<00:03, 12.83it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  9.51it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  8.06it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  8.21it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  8.34it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:05,  8.62it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:05,  8.72it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:04,  8.94it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:04,  8.94it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.71it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:05,  7.72it/s]
Time for cost matrix: 6.85s
Iter 0: wasserstein=1.167621, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995304, edge=0.000542, neigh=3.142971, align=3.707249, entropy=10.770713,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981437, edge=0.000489, neigh=2.906059, align=4.569973, entropy=9.855998,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979181, edge=0.000477, neigh=2.731671, align=4.868175, entropy=9.551388,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978658, edge=0.000468, neigh=2.728833, align=5.011486, entropy=9.406827,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978783, edge=0.000466, neigh=2.705086, align=5.098134, entropy=9.319860,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978731, edge=0.000464, neigh=2.749076, align=5.156453, entropy=9.261513,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978119, edge=0.000465, neigh=2.886181, align=5.155423, entropy=9.262541,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977226, edge=0.000466, neigh=3.012900, align=5.148274, entropy=9.269690,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976544, edge=0.000466, neigh=3.125801, align=5.143577, entropy=9.274313,s=1.000000, s_hat=1.000000
Time for optimization: 10.44s
Test results:
Top-1: 0.390
Top-10: 0.769
Top-30: 0.872
Top-50: 0.907
Top-100: 0.925
MRR: 0.520
Run 5/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:13,  7.52it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:08, 11.94it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:05, 17.53it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:04, 19.18it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:05, 16.65it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:00<00:04, 18.77it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:00<00:04, 20.71it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:03, 23.11it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:01<00:03, 21.77it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:03, 18.83it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:01<00:04, 16.50it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:04, 16.02it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:01<00:04, 16.06it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:04, 15.62it/s]Computing separate RWR scores:  38%|███▊      | 38/100 [00:02<00:03, 16.76it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:02<00:03, 15.76it/s]Computing separate RWR scores:  42%|████▏     | 42/100 [00:02<00:04, 13.81it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:02<00:03, 14.74it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:02<00:03, 15.48it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:03<00:04, 11.73it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:03<00:03, 14.73it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:03<00:02, 16.24it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:03, 12.45it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:03, 11.85it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:03, 11.56it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:03, 11.16it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 11.06it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 10.25it/s]
Time for cost matrix: 5.05s
Iter 0: wasserstein=1.162422, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995075, edge=0.000544, neigh=3.106235, align=3.651982, entropy=10.823136,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.981975, edge=0.000491, neigh=2.873598, align=4.518174, entropy=9.907056,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979395, edge=0.000476, neigh=2.665962, align=4.831616, entropy=9.588382,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978856, edge=0.000467, neigh=2.677600, align=4.979695, entropy=9.438558,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978690, edge=0.000464, neigh=2.687189, align=5.079324, entropy=9.338662,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978156, edge=0.000466, neigh=2.798963, align=5.080783, entropy=9.337182,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977564, edge=0.000468, neigh=2.923082, align=5.074936, entropy=9.343028,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976707, edge=0.000468, neigh=3.046785, align=5.068371, entropy=9.349593,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976142, edge=0.000469, neigh=3.160957, align=5.065554, entropy=9.352320,s=1.000000, s_hat=1.000000
Time for optimization: 7.89s
Test results:
Top-1: 0.374
Top-10: 0.739
Top-30: 0.820
Top-50: 0.848
Top-100: 0.886
MRR: 0.490
Loading datasets/Douban.mat...
Distribution of given anchor nodes: [(0, 1), (1, 0), (2, 2), (3, 3), (4, 4), (5, 3), (6, 5), (7, 2), (8, 0), (9, 0), (10, 2), (11, 8), (12, 5), (13, 7), (14, 6), (15, 10), (16, 5), (17, 5), (18, 7), (19, 2), (20, 11), (21, 7), (22, 7), (23, 8), (24, 14), (25, 25), (26, 15), (27, 11), (28, 9), (29, 39)]
Run 1/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:04, 19.79it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:05, 17.95it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:05, 18.61it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:04, 18.84it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:04, 20.33it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 23.18it/s]Computing separate RWR scores:  18%|█▊        | 18/100 [00:00<00:03, 23.42it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:03, 23.27it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:03, 20.57it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:01<00:03, 21.27it/s]Computing separate RWR scores:  30%|███       | 30/100 [00:01<00:03, 22.75it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:01<00:03, 22.01it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:01<00:02, 22.38it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:01<00:02, 21.06it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:01<00:02, 24.20it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:02<00:02, 23.99it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:02<00:02, 23.33it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:02<00:02, 21.99it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:02, 21.55it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  8.40it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  9.06it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:04,  9.42it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  8.82it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:05,  8.58it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:05,  8.30it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:05,  7.90it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:05,  7.90it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:05,  8.06it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:05,  7.46it/s]
Time for cost matrix: 4.77s
Iter 0: wasserstein=1.165652, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.998330, edge=0.000544, neigh=3.065272, align=3.622212, entropy=10.853783,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.984923, edge=0.000491, neigh=2.863651, align=4.481332, entropy=9.944113,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.982623, edge=0.000477, neigh=2.648035, align=4.795064, entropy=9.625122,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.982169, edge=0.000468, neigh=2.654369, align=4.944197, entropy=9.474110,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.982084, edge=0.000464, neigh=2.646194, align=5.045668, entropy=9.372323,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.981814, edge=0.000462, neigh=2.681805, align=5.111466, entropy=9.306499,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.981252, edge=0.000463, neigh=2.806873, align=5.113232, entropy=9.304732,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.980373, edge=0.000464, neigh=2.932743, align=5.108065, entropy=9.309899,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.979759, edge=0.000465, neigh=3.042692, align=5.105377, entropy=9.312542,s=1.000000, s_hat=1.000000
Time for optimization: 8.36s
Test results:
Top-1: 0.358
Top-10: 0.732
Top-30: 0.832
Top-50: 0.855
Top-100: 0.898
MRR: 0.480
Run 2/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 25.57it/s]Computing separate RWR scores:   6%|▌         | 6/100 [00:00<00:04, 20.77it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 23.18it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:03, 22.66it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:04, 18.14it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:00<00:05, 14.46it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:04, 17.00it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:06, 11.84it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:06, 12.05it/s]Computing separate RWR scores:  26%|██▌       | 26/100 [00:01<00:07,  9.93it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:02<00:07,  9.78it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:02<00:05, 12.43it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:02<00:05, 12.38it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:02<00:05, 11.90it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:02<00:04, 12.80it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:02<00:05, 12.00it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:02<00:04, 13.58it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:03<00:03, 15.68it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:03<00:02, 18.07it/s]Computing separate RWR scores:  50%|█████     | 50/100 [00:03<00:02, 20.69it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:03<00:02, 19.51it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:03<00:03, 14.76it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:07,  6.62it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  8.97it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  8.36it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:05,  8.46it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:05,  8.47it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:05,  7.96it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:01<00:06,  7.00it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:05,  7.53it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:05,  6.75it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:05,  6.93it/s]
Time for cost matrix: 5.99s
Iter 0: wasserstein=1.166865, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.993072, edge=0.000541, neigh=3.196303, align=3.778683, entropy=10.698229,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979275, edge=0.000488, neigh=2.962973, align=4.629272, entropy=9.796242,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977144, edge=0.000476, neigh=2.807399, align=4.909554, entropy=9.509820,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.976874, edge=0.000468, neigh=2.765191, align=5.054004, entropy=9.364265,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976668, edge=0.000465, neigh=2.757758, align=5.144850, entropy=9.273138,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976555, edge=0.000463, neigh=2.773197, align=5.203379, entropy=9.214586,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976017, edge=0.000464, neigh=2.902866, align=5.201112, entropy=9.216852,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975149, edge=0.000465, neigh=3.019239, align=5.193917, entropy=9.224047,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974554, edge=0.000465, neigh=3.127659, align=5.189278, entropy=9.228631,s=1.000000, s_hat=1.000000
Time for optimization: 8.93s
Test results:
Top-1: 0.407
Top-10: 0.787
Top-30: 0.889
Top-50: 0.913
Top-100: 0.937
MRR: 0.538
Run 3/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 26.11it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:03, 30.87it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:03, 25.71it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:02, 29.90it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:02, 32.50it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:00<00:02, 34.50it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:00<00:02, 35.71it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:00<00:01, 36.56it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:01<00:02, 32.37it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:01<00:01, 32.63it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:01<00:01, 34.09it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:01<00:01, 35.37it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:01<00:01, 36.51it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:01<00:01, 33.24it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:03, 12.62it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:03, 11.58it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:03, 11.37it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:03, 11.27it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 11.37it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 10.42it/s]
Time for cost matrix: 3.28s
Iter 0: wasserstein=1.162756, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.995469, edge=0.000543, neigh=3.070064, align=3.631060, entropy=10.844424,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982315, edge=0.000490, neigh=2.850435, align=4.502578, entropy=9.922705,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.979708, edge=0.000475, neigh=2.659111, align=4.821843, entropy=9.598266,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979161, edge=0.000466, neigh=2.676661, align=4.970224, entropy=9.448050,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979048, edge=0.000464, neigh=2.678494, align=5.065250, entropy=9.352737,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978809, edge=0.000462, neigh=2.713309, align=5.123763, entropy=9.294202,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978146, edge=0.000464, neigh=2.850057, align=5.125653, entropy=9.292311,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977236, edge=0.000465, neigh=2.974834, align=5.120516, entropy=9.297448,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976641, edge=0.000465, neigh=3.088870, align=5.117602, entropy=9.300304,s=1.000000, s_hat=1.000000
Time for optimization: 7.98s
Test results:
Top-1: 0.356
Top-10: 0.725
Top-30: 0.819
Top-50: 0.847
Top-100: 0.885
MRR: 0.481
Run 4/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:03, 26.45it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:02, 32.72it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:03, 26.41it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:02, 29.23it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:02, 30.17it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:00<00:02, 32.47it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:00<00:02, 30.99it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:02, 30.79it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:01<00:01, 32.83it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:01<00:01, 34.61it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:01<00:01, 35.85it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:01<00:01, 34.15it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:01<00:01, 31.85it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:01<00:01, 31.26it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:03, 12.19it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:04, 10.69it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:03, 11.31it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:03, 11.71it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 11.80it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 10.59it/s]
Time for cost matrix: 3.40s
Iter 0: wasserstein=1.166418, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994801, edge=0.000542, neigh=3.143446, align=3.729645, entropy=10.747499,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980781, edge=0.000489, neigh=2.951323, align=4.581004, entropy=9.844378,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.978753, edge=0.000477, neigh=2.792701, align=4.865813, entropy=9.553590,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.978461, edge=0.000469, neigh=2.746533, align=5.007259, entropy=9.411012,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.978363, edge=0.000466, neigh=2.726246, align=5.099316, entropy=9.318673,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.978270, edge=0.000464, neigh=2.737574, align=5.158122, entropy=9.259843,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.977687, edge=0.000466, neigh=2.866616, align=5.156911, entropy=9.261053,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.976811, edge=0.000467, neigh=2.988301, align=5.150967, entropy=9.266997,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.976170, edge=0.000467, neigh=3.098082, align=5.147630, entropy=9.270285,s=1.000000, s_hat=1.000000
Time for optimization: 7.66s
Test results:
Top-1: 0.382
Top-10: 0.779
Top-30: 0.865
Top-50: 0.896
Top-100: 0.920
MRR: 0.517
Run 5/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   3%|▎         | 3/100 [00:00<00:04, 20.54it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:03, 26.79it/s]Computing separate RWR scores:  11%|█         | 11/100 [00:00<00:02, 30.78it/s]Computing separate RWR scores:  15%|█▌        | 15/100 [00:00<00:03, 25.22it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:02, 28.00it/s]Computing separate RWR scores:  23%|██▎       | 23/100 [00:00<00:02, 30.91it/s]Computing separate RWR scores:  27%|██▋       | 27/100 [00:00<00:02, 32.91it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:02, 34.00it/s]Computing separate RWR scores:  35%|███▌      | 35/100 [00:01<00:01, 34.35it/s]Computing separate RWR scores:  39%|███▉      | 39/100 [00:01<00:01, 32.69it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:01<00:01, 33.68it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:01<00:01, 35.06it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:01<00:01, 36.05it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:01<00:01, 27.35it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:03, 12.85it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:03, 12.32it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:03, 11.96it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:03, 11.88it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 12.10it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 11.03it/s]
Time for cost matrix: 3.58s
Iter 0: wasserstein=1.157460, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.991368, edge=0.000545, neigh=3.059380, align=3.594221, entropy=10.882664,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.978146, edge=0.000496, neigh=2.805042, align=4.461840, entropy=9.963642,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.975673, edge=0.000481, neigh=2.604868, align=4.779435, entropy=9.640937,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.974967, edge=0.000470, neigh=2.651207, align=4.931633, entropy=9.486662,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.974855, edge=0.000467, neigh=2.672091, align=5.033023, entropy=9.384963,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.974328, edge=0.000469, neigh=2.798337, align=5.036400, entropy=9.381565,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.973664, edge=0.000471, neigh=2.918587, align=5.031645, entropy=9.386319,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.972873, edge=0.000471, neigh=3.026470, align=5.025436, entropy=9.392528,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.972219, edge=0.000472, neigh=3.135257, align=5.021273, entropy=9.396536,s=1.000000, s_hat=1.000000
Time for optimization: 8.37s
Test results:
Top-1: 0.285
Top-10: 0.695
Top-30: 0.812
Top-50: 0.850
Top-100: 0.880
MRR: 0.419
Loading datasets/Douban.mat...
Distribution of given anchor nodes: [(0, 0), (1, 7), (2, 3), (3, 0), (4, 5), (5, 4), (6, 1), (7, 3), (8, 4), (9, 0), (10, 3), (11, 4), (12, 6), (13, 7), (14, 8), (15, 3), (16, 9), (17, 11), (18, 8), (19, 10), (20, 3), (21, 11), (22, 9), (23, 22), (24, 15), (25, 9), (26, 11), (27, 7), (28, 40)]
Run 1/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   2%|▏         | 2/100 [00:00<00:07, 13.64it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:04, 19.76it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:04, 19.00it/s]Computing separate RWR scores:  10%|█         | 10/100 [00:00<00:04, 19.05it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:04, 20.46it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:04, 20.82it/s]Computing separate RWR scores:  19%|█▉        | 19/100 [00:00<00:03, 22.46it/s]Computing separate RWR scores:  22%|██▏       | 22/100 [00:01<00:03, 20.63it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:01<00:03, 22.44it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:03, 23.73it/s]Computing separate RWR scores:  31%|███       | 31/100 [00:01<00:03, 22.95it/s]Computing separate RWR scores:  34%|███▍      | 34/100 [00:01<00:02, 23.48it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:01<00:02, 22.93it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:01<00:02, 22.03it/s]Computing separate RWR scores:  43%|████▎     | 43/100 [00:02<00:02, 20.49it/s]Computing separate RWR scores:  46%|████▌     | 46/100 [00:02<00:02, 20.64it/s]Computing separate RWR scores:  49%|████▉     | 49/100 [00:02<00:02, 20.03it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:02<00:02, 21.26it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:02, 21.02it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  9.10it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:04,  9.57it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:04,  9.26it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:04,  9.37it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:04,  8.81it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:04,  8.75it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:04,  8.86it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:01<00:04,  8.85it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.96it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.20it/s]
Time for cost matrix: 4.50s
Iter 0: wasserstein=1.162470, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.996241, edge=0.000545, neigh=3.010966, align=3.576336, entropy=10.900411,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.982670, edge=0.000494, neigh=2.826129, align=4.431542, entropy=9.993958,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.980222, edge=0.000479, neigh=2.614423, align=4.746760, entropy=9.672800,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.979828, edge=0.000469, neigh=2.624293, align=4.911010, entropy=9.507302,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.979858, edge=0.000466, neigh=2.601246, align=5.013855, entropy=9.404138,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.979619, edge=0.000463, neigh=2.638151, align=5.088410, entropy=9.329556,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.978926, edge=0.000465, neigh=2.765786, align=5.090398, entropy=9.327566,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.977893, edge=0.000465, neigh=2.881067, align=5.084889, entropy=9.333075,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.977273, edge=0.000466, neigh=2.986630, align=5.081717, entropy=9.336198,s=1.000000, s_hat=1.000000
Time for optimization: 10.53s
Test results:
Top-1: 0.296
Top-10: 0.693
Top-30: 0.815
Top-50: 0.850
Top-100: 0.887
MRR: 0.427
Run 2/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:02, 39.51it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:02, 39.69it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:02, 39.69it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:02, 39.74it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:00<00:02, 38.54it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:01, 38.85it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:00<00:01, 39.10it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:00<00:01, 39.20it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:00<00:01, 35.61it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:01<00:01, 33.25it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:01<00:01, 28.68it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:01<00:02, 24.74it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:01<00:02, 23.74it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:01<00:01, 30.43it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   2%|▏         | 1/50 [00:00<00:05,  9.40it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:05,  9.33it/s]Computing product RWR scores:   6%|▌         | 3/50 [00:00<00:05,  9.26it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:04, 10.09it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:04,  9.93it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:04,  9.47it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  9.73it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.85it/s]
Time for cost matrix: 3.68s
Iter 0: wasserstein=1.153742, edge=0.000574, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.979106, edge=0.000544, neigh=3.316648, align=3.832898, entropy=10.643330,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.965956, edge=0.000492, neigh=2.991843, align=4.682589, entropy=9.743005,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.963738, edge=0.000480, neigh=2.840623, align=4.960762, entropy=9.459650,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.963399, edge=0.000472, neigh=2.823075, align=5.076168, entropy=9.342114,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.963349, edge=0.000470, neigh=2.847821, align=5.156792, entropy=9.261192,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.963021, edge=0.000471, neigh=2.986947, align=5.158191, entropy=9.259774,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.962560, edge=0.000473, neigh=3.110124, align=5.153758, entropy=9.264206,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.961823, edge=0.000473, neigh=3.232338, align=5.147077, entropy=9.270886,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.961238, edge=0.000473, neigh=3.344758, align=5.143781, entropy=9.273989,s=1.000000, s_hat=1.000000
Time for optimization: 9.26s
Test results:
Top-1: 0.380
Top-10: 0.734
Top-30: 0.846
Top-50: 0.870
Top-100: 0.898
MRR: 0.498
Run 3/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:02, 37.72it/s]Computing separate RWR scores:   8%|▊         | 8/100 [00:00<00:02, 38.00it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:02, 37.81it/s]Computing separate RWR scores:  16%|█▌        | 16/100 [00:00<00:02, 37.94it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:00<00:02, 37.90it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:00<00:01, 38.06it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:00<00:01, 37.84it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:00<00:01, 37.83it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:00<00:01, 37.93it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:01<00:01, 37.76it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:01<00:01, 37.91it/s]Computing separate RWR scores:  48%|████▊     | 48/100 [00:01<00:01, 28.47it/s]Computing separate RWR scores:  52%|█████▏    | 52/100 [00:01<00:01, 30.96it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:01<00:01, 34.48it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:03, 13.02it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:03, 12.67it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:03, 12.49it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:03, 12.35it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 12.27it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 11.23it/s]
Time for cost matrix: 3.13s
Iter 0: wasserstein=1.167224, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.999637, edge=0.000542, neigh=3.056220, align=3.630335, entropy=10.845480,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.986038, edge=0.000488, neigh=2.869959, align=4.495798, entropy=9.929657,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.983420, edge=0.000473, neigh=2.678785, align=4.813552, entropy=9.605859,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.983037, edge=0.000465, neigh=2.665791, align=4.973942, entropy=9.444362,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.983051, edge=0.000463, neigh=2.639229, align=5.071318, entropy=9.346674,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.982798, edge=0.000462, neigh=2.657824, align=5.134223, entropy=9.283743,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.982144, edge=0.000463, neigh=2.782956, align=5.135173, entropy=9.282791,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.981144, edge=0.000463, neigh=2.905313, align=5.130979, entropy=9.286985,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.980572, edge=0.000464, neigh=3.013606, align=5.129832, entropy=9.288106,s=1.000000, s_hat=1.000000
Time for optimization: 8.83s
Test results:
Top-1: 0.385
Top-10: 0.747
Top-30: 0.848
Top-50: 0.872
Top-100: 0.903
MRR: 0.508
Run 4/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:12,  7.62it/s]Computing separate RWR scores:   5%|▌         | 5/100 [00:00<00:04, 23.49it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:03, 29.78it/s]Computing separate RWR scores:  13%|█▎        | 13/100 [00:00<00:02, 32.55it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:00<00:02, 33.04it/s]Computing separate RWR scores:  21%|██        | 21/100 [00:00<00:02, 34.33it/s]Computing separate RWR scores:  25%|██▌       | 25/100 [00:00<00:02, 34.73it/s]Computing separate RWR scores:  29%|██▉       | 29/100 [00:00<00:02, 32.00it/s]Computing separate RWR scores:  33%|███▎      | 33/100 [00:01<00:02, 32.90it/s]Computing separate RWR scores:  37%|███▋      | 37/100 [00:01<00:01, 33.81it/s]Computing separate RWR scores:  41%|████      | 41/100 [00:01<00:02, 26.12it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:01<00:02, 26.48it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:01<00:01, 26.95it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:01<00:01, 28.13it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:01<00:01, 28.91it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:03, 12.89it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:05,  8.14it/s]Computing product RWR scores:  10%|█         | 5/50 [00:00<00:05,  8.41it/s]Computing product RWR scores:  14%|█▍        | 7/50 [00:00<00:04,  9.33it/s]Computing product RWR scores:  18%|█▊        | 9/50 [00:00<00:04,  9.51it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.90it/s]Computing product RWR scores:  20%|██        | 10/50 [00:01<00:04,  8.20it/s]
Time for cost matrix: 3.94s
Iter 0: wasserstein=1.166275, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.992844, edge=0.000542, neigh=3.287491, align=3.809766, entropy=10.665392,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.979731, edge=0.000488, neigh=3.000467, align=4.674372, entropy=9.750982,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977430, edge=0.000476, neigh=2.807760, align=4.957872, entropy=9.462041,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977172, edge=0.000468, neigh=2.780112, align=5.081284, entropy=9.336982,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.976975, edge=0.000466, neigh=2.793733, align=5.162836, entropy=9.255155,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.976507, edge=0.000468, neigh=2.928790, align=5.165435, entropy=9.252530,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976017, edge=0.000469, neigh=3.062154, align=5.160364, entropy=9.257600,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975245, edge=0.000470, neigh=3.195691, align=5.153535, entropy=9.264429,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.974639, edge=0.000470, neigh=3.321377, align=5.148966, entropy=9.268961,s=1.000000, s_hat=1.000000
Time for optimization: 8.38s
Test results:
Top-1: 0.439
Top-10: 0.791
Top-30: 0.879
Top-50: 0.898
Top-100: 0.928
MRR: 0.558
Run 5/5
Graph 1: torch.Size([3906, 3906]), torch.Size([3906, 538])
Graph 2: torch.Size([1118, 1118]), torch.Size([1118, 538])
Ground truth: torch.Size([1118, 2]), torch.Size([1118, 3906])
Computing separate RWR scores:   0%|          | 0/100 [00:00<?, ?it/s]Computing separate RWR scores:   1%|          | 1/100 [00:00<00:10,  9.10it/s]Computing separate RWR scores:   4%|▍         | 4/100 [00:00<00:04, 20.64it/s]Computing separate RWR scores:   7%|▋         | 7/100 [00:00<00:05, 15.64it/s]Computing separate RWR scores:   9%|▉         | 9/100 [00:00<00:06, 13.98it/s]Computing separate RWR scores:  12%|█▏        | 12/100 [00:00<00:05, 16.81it/s]Computing separate RWR scores:  14%|█▍        | 14/100 [00:00<00:05, 14.93it/s]Computing separate RWR scores:  17%|█▋        | 17/100 [00:01<00:04, 17.84it/s]Computing separate RWR scores:  20%|██        | 20/100 [00:01<00:04, 19.91it/s]Computing separate RWR scores:  24%|██▍       | 24/100 [00:01<00:03, 23.25it/s]Computing separate RWR scores:  28%|██▊       | 28/100 [00:01<00:02, 26.52it/s]Computing separate RWR scores:  32%|███▏      | 32/100 [00:01<00:02, 28.84it/s]Computing separate RWR scores:  36%|███▌      | 36/100 [00:01<00:02, 30.49it/s]Computing separate RWR scores:  40%|████      | 40/100 [00:01<00:01, 30.97it/s]Computing separate RWR scores:  44%|████▍     | 44/100 [00:01<00:02, 24.39it/s]Computing separate RWR scores:  47%|████▋     | 47/100 [00:02<00:02, 19.90it/s]Computing separate RWR scores:  51%|█████     | 51/100 [00:02<00:02, 22.72it/s]Computing separate RWR scores:  53%|█████▎    | 53/100 [00:02<00:02, 21.62it/s]
Computing product RWR scores:   0%|          | 0/50 [00:00<?, ?it/s]Computing product RWR scores:   4%|▍         | 2/50 [00:00<00:04, 11.53it/s]Computing product RWR scores:   8%|▊         | 4/50 [00:00<00:04, 11.49it/s]Computing product RWR scores:  12%|█▏        | 6/50 [00:00<00:04, 10.65it/s]Computing product RWR scores:  16%|█▌        | 8/50 [00:00<00:03, 10.91it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 11.18it/s]Computing product RWR scores:  20%|██        | 10/50 [00:00<00:03, 10.16it/s]
Time for cost matrix: 4.29s
Iter 0: wasserstein=1.160990, edge=0.000573, neigh=1.579990, align=-0.000781, entropy=15.289566,s=1.000000, s_hat=1.000000
Iter 1: wasserstein=0.994106, edge=0.000544, neigh=3.052637, align=3.612029, entropy=10.865171,s=1.000000, s_hat=1.000000
Iter 2: wasserstein=0.980386, edge=0.000491, neigh=2.845209, align=4.472313, entropy=9.953182,s=1.000000, s_hat=1.000000
Iter 3: wasserstein=0.977987, edge=0.000476, neigh=2.663784, align=4.787835, entropy=9.632149,s=1.000000, s_hat=1.000000
Iter 4: wasserstein=0.977541, edge=0.000467, neigh=2.670487, align=4.946986, entropy=9.471417,s=1.000000, s_hat=1.000000
Iter 5: wasserstein=0.977534, edge=0.000465, neigh=2.638276, align=5.039978, entropy=9.378028,s=1.000000, s_hat=1.000000
Iter 6: wasserstein=0.977348, edge=0.000463, neigh=2.665208, align=5.105779, entropy=9.312187,s=1.000000, s_hat=1.000000
Iter 7: wasserstein=0.976658, edge=0.000464, neigh=2.790099, align=5.107425, entropy=9.310539,s=1.000000, s_hat=1.000000
Iter 8: wasserstein=0.975665, edge=0.000465, neigh=2.905735, align=5.102838, entropy=9.315126,s=1.000000, s_hat=1.000000
Iter 9: wasserstein=0.975057, edge=0.000466, neigh=3.018340, align=5.100919, entropy=9.316987,s=1.000000, s_hat=1.000000
Time for optimization: 10.22s
Test results:
Top-1: 0.337
Top-10: 0.705
Top-30: 0.818
Top-50: 0.851
Top-100: 0.889
MRR: 0.456
